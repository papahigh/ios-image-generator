program(1.0)
[buildInfo = dict<tensor<string, []>, tensor<string, []>>({{"coremlc-component-MIL", "4.28.4"}, {"coremlc-version", "1429.0.0"}})]
{
    func main<ios16>(tensor<fp16, [2, 768, 1, 77]> encoder_hidden_states, tensor<fp16, [2, 4, 64, 64]> sample, tensor<fp16, [2]> timestep) {
            tensor<int32, []> var_25 = const()[name = tensor<string, []>("op_25"), val = tensor<int32, []>(-1)];
            tensor<int32, [1]> var_42_axes_0 = const()[name = tensor<string, []>("op_42_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1]> var_42_cast = expand_dims(axes = var_42_axes_0, x = timestep);
            tensor<fp16, [1, 160]> var_44_to_fp16 = const()[name = tensor<string, []>("op_44_to_fp16"), val = tensor<fp16, [1, 160]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(64)))];
            tensor<fp16, [2, 160]> emb_3_cast = mul(x = var_42_cast, y = var_44_to_fp16);
            tensor<fp16, [2, 160]> var_49_cast = sin(x = emb_3_cast);
            tensor<fp16, [2, 160]> var_50_cast = cos(x = emb_3_cast);
            tensor<bool, []> emb_interleave_0 = const()[name = tensor<string, []>("emb_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 320]> emb_cast = concat(axis = var_25, interleave = emb_interleave_0, values = (var_49_cast, var_50_cast));
            tensor<int32, [2]> var_54_begin_0 = const()[name = tensor<string, []>("op_54_begin_0"), val = tensor<int32, [2]>([0, 160])];
            tensor<int32, [2]> var_54_end_0 = const()[name = tensor<string, []>("op_54_end_0"), val = tensor<int32, [2]>([2, 320])];
            tensor<bool, [2]> var_54_end_mask_0 = const()[name = tensor<string, []>("op_54_end_mask_0"), val = tensor<bool, [2]>([true, true])];
            tensor<fp16, [2, 160]> var_54_cast = slice_by_index(begin = var_54_begin_0, end = var_54_end_0, end_mask = var_54_end_mask_0, x = emb_cast);
            tensor<int32, [2]> var_56_begin_0 = const()[name = tensor<string, []>("op_56_begin_0"), val = tensor<int32, [2]>([0, 0])];
            tensor<int32, [2]> var_56_end_0 = const()[name = tensor<string, []>("op_56_end_0"), val = tensor<int32, [2]>([2, 160])];
            tensor<bool, [2]> var_56_end_mask_0 = const()[name = tensor<string, []>("op_56_end_mask_0"), val = tensor<bool, [2]>([true, false])];
            tensor<fp16, [2, 160]> var_56_cast = slice_by_index(begin = var_56_begin_0, end = var_56_end_0, end_mask = var_56_end_mask_0, x = emb_cast);
            tensor<bool, []> sample_interleave_0 = const()[name = tensor<string, []>("sample_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 320]> sample_cast = concat(axis = var_25, interleave = sample_interleave_0, values = (var_54_cast, var_56_cast));
            tensor<int32, []> var_59 = const()[name = tensor<string, []>("op_59"), val = tensor<int32, []>(1)];
            tensor<int32, [1]> var_66_axes_0 = const()[name = tensor<string, []>("op_66_axes_0"), val = tensor<int32, [1]>([-1])];
            tensor<fp16, [2, 320, 1]> var_66_cast = expand_dims(axes = var_66_axes_0, x = sample_cast);
            tensor<int32, [1]> input_1_axes_0 = const()[name = tensor<string, []>("input_1_axes_0"), val = tensor<int32, [1]>([-1])];
            tensor<fp16, [2, 320, 1, 1]> input_1_cast = expand_dims(axes = input_1_axes_0, x = var_66_cast);
            tensor<int32, [2]> var_70 = const()[name = tensor<string, []>("op_70"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_72 = const()[name = tensor<string, []>("op_72"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_3_pad_type_0 = const()[name = tensor<string, []>("input_3_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_3_pad_0 = const()[name = tensor<string, []>("input_3_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 320, 1, 1]> time_embedding_linear_1_weight_to_fp16 = const()[name = tensor<string, []>("time_embedding_linear_1_weight_to_fp16"), val = tensor<fp16, [1280, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(448)))];
            tensor<fp16, [1280]> time_embedding_linear_1_bias_to_fp16 = const()[name = tensor<string, []>("time_embedding_linear_1_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(819712)))];
            tensor<fp16, [2, 1280, 1, 1]> input_3_cast = conv(bias = time_embedding_linear_1_bias_to_fp16, dilations = var_72, groups = var_59, pad = input_3_pad_0, pad_type = input_3_pad_type_0, strides = var_70, weight = time_embedding_linear_1_weight_to_fp16, x = input_1_cast);
            tensor<fp16, [2, 1280, 1, 1]> input_5_cast = silu(x = input_3_cast);
            tensor<int32, [2]> var_78 = const()[name = tensor<string, []>("op_78"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_80 = const()[name = tensor<string, []>("op_80"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_13_pad_type_0 = const()[name = tensor<string, []>("input_13_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_13_pad_0 = const()[name = tensor<string, []>("input_13_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> time_embedding_linear_2_weight_to_fp16 = const()[name = tensor<string, []>("time_embedding_linear_2_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(822336)))];
            tensor<fp16, [1280]> time_embedding_linear_2_bias_to_fp16 = const()[name = tensor<string, []>("time_embedding_linear_2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4099200)))];
            tensor<fp16, [2, 1280, 1, 1]> input_13_cast = conv(bias = time_embedding_linear_2_bias_to_fp16, dilations = var_80, groups = var_59, pad = input_13_pad_0, pad_type = input_13_pad_type_0, strides = var_78, weight = time_embedding_linear_2_weight_to_fp16, x = input_5_cast);
            tensor<int32, []> var_86 = const()[name = tensor<string, []>("op_86"), val = tensor<int32, []>(1)];
            tensor<int32, [2]> var_89 = const()[name = tensor<string, []>("op_89"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_91 = const()[name = tensor<string, []>("op_91"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_7_pad_type_0 = const()[name = tensor<string, []>("input_7_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_7_pad_0 = const()[name = tensor<string, []>("input_7_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [320, 4, 3, 3]> conv_in_weight_to_fp16 = const()[name = tensor<string, []>("conv_in_weight_to_fp16"), val = tensor<fp16, [320, 4, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4101824)))];
            tensor<fp16, [320]> conv_in_bias_to_fp16 = const()[name = tensor<string, []>("conv_in_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4124928)))];
            tensor<fp16, [2, 320, 64, 64]> input_7_cast_1 = conv(bias = conv_in_bias_to_fp16, dilations = var_91, groups = var_86, pad = input_7_pad_0, pad_type = input_7_pad_type_0, strides = var_89, weight = conv_in_weight_to_fp16, x = sample);
            tensor<bool, []> var_110 = const()[name = tensor<string, []>("op_110"), val = tensor<bool, []>(true)];
            tensor<int32, []> var_115 = const()[name = tensor<string, []>("op_115"), val = tensor<int32, []>(1)];
            tensor<int32, [5]> reshape_0_shape_0 = const()[name = tensor<string, []>("reshape_0_shape_0"), val = tensor<int32, [5]>([2, 32, 10, 64, 64])];
            tensor<fp16, [2, 32, 10, 64, 64]> reshape_0_cast = reshape(shape = reshape_0_shape_0, x = input_7_cast_1);
            tensor<int32, [3]> reduce_mean_0_axes_0 = const()[name = tensor<string, []>("reduce_mean_0_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_0_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_0_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_0_cast = reduce_mean(axes = reduce_mean_0_axes_0, keep_dims = reduce_mean_0_keep_dims_0, x = reshape_0_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> sub_0_cast = sub(x = reshape_0_cast, y = reduce_mean_0_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> square_0_cast = square(x = sub_0_cast);
            tensor<int32, [3]> reduce_mean_2_axes_0 = const()[name = tensor<string, []>("reduce_mean_2_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_2_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_2_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_2_cast = reduce_mean(axes = reduce_mean_2_axes_0, keep_dims = reduce_mean_2_keep_dims_0, x = square_0_cast);
            tensor<fp16, []> add_0_y_0_to_fp16 = const()[name = tensor<string, []>("add_0_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_0_cast = add(x = reduce_mean_2_cast, y = add_0_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_0_cast = sqrt(x = add_0_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> real_div_0_cast = real_div(x = sub_0_cast, y = sqrt_0_cast);
            tensor<int32, [4]> reshape_1_shape_0 = const()[name = tensor<string, []>("reshape_1_shape_0"), val = tensor<int32, [4]>([2, 320, 64, 64])];
            tensor<fp16, [2, 320, 64, 64]> reshape_1_cast = reshape(shape = reshape_1_shape_0, x = real_div_0_cast);
            tensor<fp16, [320]> add_1_mean_0_to_fp16 = const()[name = tensor<string, []>("add_1_mean_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4125632)))];
            tensor<fp16, [320]> add_1_variance_0_to_fp16 = const()[name = tensor<string, []>("add_1_variance_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4126336)))];
            tensor<fp16, [320]> add_1_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_1_gamma_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4127040)))];
            tensor<fp16, [320]> add_1_beta_0_to_fp16 = const()[name = tensor<string, []>("add_1_beta_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4127744)))];
            tensor<fp16, []> add_1_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_1_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 320, 64, 64]> add_1_cast = batch_norm(beta = add_1_beta_0_to_fp16, epsilon = add_1_epsilon_0_to_fp16, gamma = add_1_gamma_0_to_fp16, mean = add_1_mean_0_to_fp16, variance = add_1_variance_0_to_fp16, x = reshape_1_cast);
            tensor<fp16, [2, 320, 64, 64]> input_11_cast = silu(x = add_1_cast);
            tensor<int32, [2]> var_137 = const()[name = tensor<string, []>("op_137"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_139 = const()[name = tensor<string, []>("op_139"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_1_pad_type_0 = const()[name = tensor<string, []>("hidden_states_1_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_1_pad_0 = const()[name = tensor<string, []>("hidden_states_1_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [320, 320, 3, 3]> down_blocks_0_resnets_0_conv1_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_resnets_0_conv1_weight_to_fp16"), val = tensor<fp16, [320, 320, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4128448)))];
            tensor<fp16, [320]> down_blocks_0_resnets_0_conv1_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_resnets_0_conv1_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5971712)))];
            tensor<fp16, [2, 320, 64, 64]> hidden_states_1_cast = conv(bias = down_blocks_0_resnets_0_conv1_bias_to_fp16, dilations = var_139, groups = var_115, pad = hidden_states_1_pad_0, pad_type = hidden_states_1_pad_type_0, strides = var_137, weight = down_blocks_0_resnets_0_conv1_weight_to_fp16, x = input_11_cast);
            tensor<fp16, [2, 1280, 1, 1]> input_15_cast_1 = silu(x = input_13_cast);
            tensor<int32, [2]> var_145 = const()[name = tensor<string, []>("op_145"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_147 = const()[name = tensor<string, []>("op_147"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> temb_1_pad_type_0 = const()[name = tensor<string, []>("temb_1_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> temb_1_pad_0 = const()[name = tensor<string, []>("temb_1_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 1280, 1, 1]> down_blocks_0_resnets_0_time_emb_proj_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_resnets_0_time_emb_proj_weight_to_fp16"), val = tensor<fp16, [320, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5972416)))];
            tensor<fp16, [320]> down_blocks_0_resnets_0_time_emb_proj_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_resnets_0_time_emb_proj_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6791680)))];
            tensor<fp16, [2, 320, 1, 1]> temb_1_cast = conv(bias = down_blocks_0_resnets_0_time_emb_proj_bias_to_fp16, dilations = var_147, groups = var_115, pad = temb_1_pad_0, pad_type = temb_1_pad_type_0, strides = var_145, weight = down_blocks_0_resnets_0_time_emb_proj_weight_to_fp16, x = input_15_cast_1);
            tensor<fp16, [2, 320, 64, 64]> input_17_cast = add(x = hidden_states_1_cast, y = temb_1_cast);
            tensor<int32, [5]> reshape_4_shape_0 = const()[name = tensor<string, []>("reshape_4_shape_0"), val = tensor<int32, [5]>([2, 32, 10, 64, 64])];
            tensor<fp16, [2, 32, 10, 64, 64]> reshape_4_cast = reshape(shape = reshape_4_shape_0, x = input_17_cast);
            tensor<int32, [3]> reduce_mean_3_axes_0 = const()[name = tensor<string, []>("reduce_mean_3_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_3_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_3_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_3_cast = reduce_mean(axes = reduce_mean_3_axes_0, keep_dims = reduce_mean_3_keep_dims_0, x = reshape_4_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> sub_2_cast = sub(x = reshape_4_cast, y = reduce_mean_3_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> square_1_cast = square(x = sub_2_cast);
            tensor<int32, [3]> reduce_mean_5_axes_0 = const()[name = tensor<string, []>("reduce_mean_5_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_5_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_5_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_5_cast = reduce_mean(axes = reduce_mean_5_axes_0, keep_dims = reduce_mean_5_keep_dims_0, x = square_1_cast);
            tensor<fp16, []> add_2_y_0_to_fp16 = const()[name = tensor<string, []>("add_2_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_2_cast = add(x = reduce_mean_5_cast, y = add_2_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_1_cast = sqrt(x = add_2_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> real_div_1_cast = real_div(x = sub_2_cast, y = sqrt_1_cast);
            tensor<int32, [4]> reshape_5_shape_0 = const()[name = tensor<string, []>("reshape_5_shape_0"), val = tensor<int32, [4]>([2, 320, 64, 64])];
            tensor<fp16, [2, 320, 64, 64]> reshape_5_cast = reshape(shape = reshape_5_shape_0, x = real_div_1_cast);
            tensor<fp16, [320]> add_3_mean_0_to_fp16 = const()[name = tensor<string, []>("add_3_mean_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6792384)))];
            tensor<fp16, [320]> add_3_variance_0_to_fp16 = const()[name = tensor<string, []>("add_3_variance_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6793088)))];
            tensor<fp16, [320]> add_3_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_3_gamma_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6793792)))];
            tensor<fp16, [320]> add_3_beta_0_to_fp16 = const()[name = tensor<string, []>("add_3_beta_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6794496)))];
            tensor<fp16, []> add_3_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_3_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 320, 64, 64]> add_3_cast = batch_norm(beta = add_3_beta_0_to_fp16, epsilon = add_3_epsilon_0_to_fp16, gamma = add_3_gamma_0_to_fp16, mean = add_3_mean_0_to_fp16, variance = add_3_variance_0_to_fp16, x = reshape_5_cast);
            tensor<fp16, [2, 320, 64, 64]> input_21_cast = silu(x = add_3_cast);
            tensor<int32, [2]> var_157 = const()[name = tensor<string, []>("op_157"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_159 = const()[name = tensor<string, []>("op_159"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_3_pad_type_0 = const()[name = tensor<string, []>("hidden_states_3_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_3_pad_0 = const()[name = tensor<string, []>("hidden_states_3_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [320, 320, 3, 3]> down_blocks_0_resnets_0_conv2_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_resnets_0_conv2_weight_to_fp16"), val = tensor<fp16, [320, 320, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6795200)))];
            tensor<fp16, [320]> down_blocks_0_resnets_0_conv2_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_resnets_0_conv2_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8638464)))];
            tensor<fp16, [2, 320, 64, 64]> hidden_states_3_cast = conv(bias = down_blocks_0_resnets_0_conv2_bias_to_fp16, dilations = var_159, groups = var_115, pad = hidden_states_3_pad_0, pad_type = hidden_states_3_pad_type_0, strides = var_157, weight = down_blocks_0_resnets_0_conv2_weight_to_fp16, x = input_21_cast);
            tensor<fp16, [2, 320, 64, 64]> hidden_states_5_cast = add(x = input_7_cast_1, y = hidden_states_3_cast);
            tensor<int32, [5]> reshape_8_shape_0 = const()[name = tensor<string, []>("reshape_8_shape_0"), val = tensor<int32, [5]>([2, 32, 10, 64, 64])];
            tensor<fp16, [2, 32, 10, 64, 64]> reshape_8_cast = reshape(shape = reshape_8_shape_0, x = hidden_states_5_cast);
            tensor<int32, [3]> reduce_mean_6_axes_0 = const()[name = tensor<string, []>("reduce_mean_6_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_6_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_6_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_6_cast = reduce_mean(axes = reduce_mean_6_axes_0, keep_dims = reduce_mean_6_keep_dims_0, x = reshape_8_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> sub_4_cast = sub(x = reshape_8_cast, y = reduce_mean_6_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> square_2_cast = square(x = sub_4_cast);
            tensor<int32, [3]> reduce_mean_8_axes_0 = const()[name = tensor<string, []>("reduce_mean_8_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_8_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_8_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_8_cast = reduce_mean(axes = reduce_mean_8_axes_0, keep_dims = reduce_mean_8_keep_dims_0, x = square_2_cast);
            tensor<fp16, []> add_4_y_0_to_fp16 = const()[name = tensor<string, []>("add_4_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_4_cast = add(x = reduce_mean_8_cast, y = add_4_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_2_cast = sqrt(x = add_4_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> real_div_2_cast = real_div(x = sub_4_cast, y = sqrt_2_cast);
            tensor<int32, [4]> reshape_9_shape_0 = const()[name = tensor<string, []>("reshape_9_shape_0"), val = tensor<int32, [4]>([2, 320, 64, 64])];
            tensor<fp16, [2, 320, 64, 64]> reshape_9_cast = reshape(shape = reshape_9_shape_0, x = real_div_2_cast);
            tensor<fp16, [320]> add_5_mean_0_to_fp16 = const()[name = tensor<string, []>("add_5_mean_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8639168)))];
            tensor<fp16, [320]> add_5_variance_0_to_fp16 = const()[name = tensor<string, []>("add_5_variance_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8639872)))];
            tensor<fp16, [320]> add_5_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_5_gamma_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8640576)))];
            tensor<fp16, [320]> add_5_beta_0_to_fp16 = const()[name = tensor<string, []>("add_5_beta_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8641280)))];
            tensor<fp16, []> add_5_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_5_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 320, 64, 64]> add_5_cast = batch_norm(beta = add_5_beta_0_to_fp16, epsilon = add_5_epsilon_0_to_fp16, gamma = add_5_gamma_0_to_fp16, mean = add_5_mean_0_to_fp16, variance = add_5_variance_0_to_fp16, x = reshape_9_cast);
            tensor<int32, [2]> var_179 = const()[name = tensor<string, []>("op_179"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_181 = const()[name = tensor<string, []>("op_181"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_7_pad_type_0 = const()[name = tensor<string, []>("hidden_states_7_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_7_pad_0 = const()[name = tensor<string, []>("hidden_states_7_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> down_blocks_0_attentions_0_proj_in_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_0_proj_in_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8641984)))];
            tensor<fp16, [320]> down_blocks_0_attentions_0_proj_in_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_0_proj_in_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8846848)))];
            tensor<fp16, [2, 320, 64, 64]> hidden_states_7_cast = conv(bias = down_blocks_0_attentions_0_proj_in_bias_to_fp16, dilations = var_181, groups = var_115, pad = hidden_states_7_pad_0, pad_type = hidden_states_7_pad_type_0, strides = var_179, weight = down_blocks_0_attentions_0_proj_in_weight_to_fp16, x = add_5_cast);
            tensor<int32, [4]> var_186 = const()[name = tensor<string, []>("op_186"), val = tensor<int32, [4]>([2, 320, 1, 4096])];
            tensor<fp16, [2, 320, 1, 4096]> inputs_1_cast = reshape(shape = var_186, x = hidden_states_7_cast);
            tensor<int32, [1]> var_196 = const()[name = tensor<string, []>("op_196"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> channels_mean_1_cast = reduce_mean(axes = var_196, keep_dims = var_110, x = inputs_1_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_1_cast = sub(x = inputs_1_cast, y = channels_mean_1_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_sq_1_cast = mul(x = zero_mean_1_cast, y = zero_mean_1_cast);
            tensor<int32, [1]> var_200 = const()[name = tensor<string, []>("op_200"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> var_201_cast = reduce_mean(axes = var_200, keep_dims = var_110, x = zero_mean_sq_1_cast);
            tensor<fp16, []> var_202_to_fp16 = const()[name = tensor<string, []>("op_202_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 4096]> var_203_cast = add(x = var_201_cast, y = var_202_to_fp16);
            tensor<fp16, []> denom_1_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_1_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 4096]> denom_1_cast = rsqrt(epsilon = denom_1_epsilon_0_to_fp16, x = var_203_cast);
            tensor<fp16, [2, 320, 1, 4096]> out_1_cast = mul(x = zero_mean_1_cast, y = denom_1_cast);
            tensor<fp16, [1, 320, 1, 1]> var_207_to_fp16 = const()[name = tensor<string, []>("op_207_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8847552)))];
            tensor<fp16, [2, 320, 1, 4096]> var_208_cast = add(x = out_1_cast, y = var_207_to_fp16);
            tensor<fp16, [1, 320, 1, 1]> var_210_to_fp16 = const()[name = tensor<string, []>("op_210_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8848256)))];
            tensor<fp16, [2, 320, 1, 4096]> hidden_states_9_cast = mul(x = var_208_cast, y = var_210_to_fp16);
            tensor<int32, [2]> var_217 = const()[name = tensor<string, []>("op_217"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_219 = const()[name = tensor<string, []>("op_219"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_1_pad_type_0 = const()[name = tensor<string, []>("q_1_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_1_pad_0 = const()[name = tensor<string, []>("q_1_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> down_blocks_0_attentions_0_transformer_blocks_0_attn1_to_q_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_0_transformer_blocks_0_attn1_to_q_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8848960)))];
            tensor<fp16, [2, 320, 1, 4096]> q_1_cast = conv(dilations = var_219, groups = var_115, pad = q_1_pad_0, pad_type = q_1_pad_type_0, strides = var_217, weight = down_blocks_0_attentions_0_transformer_blocks_0_attn1_to_q_weight_to_fp16, x = hidden_states_9_cast);
            tensor<int32, [2]> var_223 = const()[name = tensor<string, []>("op_223"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_225 = const()[name = tensor<string, []>("op_225"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_1_pad_type_0 = const()[name = tensor<string, []>("k_1_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_1_pad_0 = const()[name = tensor<string, []>("k_1_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> down_blocks_0_attentions_0_transformer_blocks_0_attn1_to_k_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_0_transformer_blocks_0_attn1_to_k_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9053824)))];
            tensor<fp16, [2, 320, 1, 4096]> k_1_cast = conv(dilations = var_225, groups = var_115, pad = k_1_pad_0, pad_type = k_1_pad_type_0, strides = var_223, weight = down_blocks_0_attentions_0_transformer_blocks_0_attn1_to_k_weight_to_fp16, x = hidden_states_9_cast);
            tensor<int32, [2]> var_229 = const()[name = tensor<string, []>("op_229"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_231 = const()[name = tensor<string, []>("op_231"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_1_pad_type_0 = const()[name = tensor<string, []>("v_1_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_1_pad_0 = const()[name = tensor<string, []>("v_1_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> down_blocks_0_attentions_0_transformer_blocks_0_attn1_to_v_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_0_transformer_blocks_0_attn1_to_v_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9258688)))];
            tensor<fp16, [2, 320, 1, 4096]> v_1_cast = conv(dilations = var_231, groups = var_115, pad = v_1_pad_0, pad_type = v_1_pad_type_0, strides = var_229, weight = down_blocks_0_attentions_0_transformer_blocks_0_attn1_to_v_weight_to_fp16, x = hidden_states_9_cast);
            tensor<int32, [4]> var_235_begin_0 = const()[name = tensor<string, []>("op_235_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_235_end_0 = const()[name = tensor<string, []>("op_235_end_0"), val = tensor<int32, [4]>([2, 40, 1, 4096])];
            tensor<bool, [4]> var_235_end_mask_0 = const()[name = tensor<string, []>("op_235_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_235_cast = slice_by_index(begin = var_235_begin_0, end = var_235_end_0, end_mask = var_235_end_mask_0, x = q_1_cast);
            tensor<int32, [4]> var_239_begin_0 = const()[name = tensor<string, []>("op_239_begin_0"), val = tensor<int32, [4]>([0, 40, 0, 0])];
            tensor<int32, [4]> var_239_end_0 = const()[name = tensor<string, []>("op_239_end_0"), val = tensor<int32, [4]>([2, 80, 1, 4096])];
            tensor<bool, [4]> var_239_end_mask_0 = const()[name = tensor<string, []>("op_239_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_239_cast = slice_by_index(begin = var_239_begin_0, end = var_239_end_0, end_mask = var_239_end_mask_0, x = q_1_cast);
            tensor<int32, [4]> var_243_begin_0 = const()[name = tensor<string, []>("op_243_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_243_end_0 = const()[name = tensor<string, []>("op_243_end_0"), val = tensor<int32, [4]>([2, 120, 1, 4096])];
            tensor<bool, [4]> var_243_end_mask_0 = const()[name = tensor<string, []>("op_243_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_243_cast = slice_by_index(begin = var_243_begin_0, end = var_243_end_0, end_mask = var_243_end_mask_0, x = q_1_cast);
            tensor<int32, [4]> var_247_begin_0 = const()[name = tensor<string, []>("op_247_begin_0"), val = tensor<int32, [4]>([0, 120, 0, 0])];
            tensor<int32, [4]> var_247_end_0 = const()[name = tensor<string, []>("op_247_end_0"), val = tensor<int32, [4]>([2, 160, 1, 4096])];
            tensor<bool, [4]> var_247_end_mask_0 = const()[name = tensor<string, []>("op_247_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_247_cast = slice_by_index(begin = var_247_begin_0, end = var_247_end_0, end_mask = var_247_end_mask_0, x = q_1_cast);
            tensor<int32, [4]> var_251_begin_0 = const()[name = tensor<string, []>("op_251_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_251_end_0 = const()[name = tensor<string, []>("op_251_end_0"), val = tensor<int32, [4]>([2, 200, 1, 4096])];
            tensor<bool, [4]> var_251_end_mask_0 = const()[name = tensor<string, []>("op_251_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_251_cast = slice_by_index(begin = var_251_begin_0, end = var_251_end_0, end_mask = var_251_end_mask_0, x = q_1_cast);
            tensor<int32, [4]> var_255_begin_0 = const()[name = tensor<string, []>("op_255_begin_0"), val = tensor<int32, [4]>([0, 200, 0, 0])];
            tensor<int32, [4]> var_255_end_0 = const()[name = tensor<string, []>("op_255_end_0"), val = tensor<int32, [4]>([2, 240, 1, 4096])];
            tensor<bool, [4]> var_255_end_mask_0 = const()[name = tensor<string, []>("op_255_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_255_cast = slice_by_index(begin = var_255_begin_0, end = var_255_end_0, end_mask = var_255_end_mask_0, x = q_1_cast);
            tensor<int32, [4]> var_259_begin_0 = const()[name = tensor<string, []>("op_259_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_259_end_0 = const()[name = tensor<string, []>("op_259_end_0"), val = tensor<int32, [4]>([2, 280, 1, 4096])];
            tensor<bool, [4]> var_259_end_mask_0 = const()[name = tensor<string, []>("op_259_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_259_cast = slice_by_index(begin = var_259_begin_0, end = var_259_end_0, end_mask = var_259_end_mask_0, x = q_1_cast);
            tensor<int32, [4]> var_263_begin_0 = const()[name = tensor<string, []>("op_263_begin_0"), val = tensor<int32, [4]>([0, 280, 0, 0])];
            tensor<int32, [4]> var_263_end_0 = const()[name = tensor<string, []>("op_263_end_0"), val = tensor<int32, [4]>([2, 320, 1, 4096])];
            tensor<bool, [4]> var_263_end_mask_0 = const()[name = tensor<string, []>("op_263_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_263_cast = slice_by_index(begin = var_263_begin_0, end = var_263_end_0, end_mask = var_263_end_mask_0, x = q_1_cast);
            tensor<int32, [4]> k_3_perm_0 = const()[name = tensor<string, []>("k_3_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_270_begin_0 = const()[name = tensor<string, []>("op_270_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_270_end_0 = const()[name = tensor<string, []>("op_270_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 40])];
            tensor<bool, [4]> var_270_end_mask_0 = const()[name = tensor<string, []>("op_270_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 320]> transpose_77 = transpose(perm = k_3_perm_0, x = k_1_cast);
            tensor<fp16, [2, 4096, 1, 40]> var_270_cast = slice_by_index(begin = var_270_begin_0, end = var_270_end_0, end_mask = var_270_end_mask_0, x = transpose_77);
            tensor<int32, [4]> var_274_begin_0 = const()[name = tensor<string, []>("op_274_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 40])];
            tensor<int32, [4]> var_274_end_0 = const()[name = tensor<string, []>("op_274_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 80])];
            tensor<bool, [4]> var_274_end_mask_0 = const()[name = tensor<string, []>("op_274_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_274_cast = slice_by_index(begin = var_274_begin_0, end = var_274_end_0, end_mask = var_274_end_mask_0, x = transpose_77);
            tensor<int32, [4]> var_278_begin_0 = const()[name = tensor<string, []>("op_278_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 80])];
            tensor<int32, [4]> var_278_end_0 = const()[name = tensor<string, []>("op_278_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 120])];
            tensor<bool, [4]> var_278_end_mask_0 = const()[name = tensor<string, []>("op_278_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_278_cast = slice_by_index(begin = var_278_begin_0, end = var_278_end_0, end_mask = var_278_end_mask_0, x = transpose_77);
            tensor<int32, [4]> var_282_begin_0 = const()[name = tensor<string, []>("op_282_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 120])];
            tensor<int32, [4]> var_282_end_0 = const()[name = tensor<string, []>("op_282_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 160])];
            tensor<bool, [4]> var_282_end_mask_0 = const()[name = tensor<string, []>("op_282_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_282_cast = slice_by_index(begin = var_282_begin_0, end = var_282_end_0, end_mask = var_282_end_mask_0, x = transpose_77);
            tensor<int32, [4]> var_286_begin_0 = const()[name = tensor<string, []>("op_286_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 160])];
            tensor<int32, [4]> var_286_end_0 = const()[name = tensor<string, []>("op_286_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 200])];
            tensor<bool, [4]> var_286_end_mask_0 = const()[name = tensor<string, []>("op_286_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_286_cast = slice_by_index(begin = var_286_begin_0, end = var_286_end_0, end_mask = var_286_end_mask_0, x = transpose_77);
            tensor<int32, [4]> var_290_begin_0 = const()[name = tensor<string, []>("op_290_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 200])];
            tensor<int32, [4]> var_290_end_0 = const()[name = tensor<string, []>("op_290_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 240])];
            tensor<bool, [4]> var_290_end_mask_0 = const()[name = tensor<string, []>("op_290_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_290_cast = slice_by_index(begin = var_290_begin_0, end = var_290_end_0, end_mask = var_290_end_mask_0, x = transpose_77);
            tensor<int32, [4]> var_294_begin_0 = const()[name = tensor<string, []>("op_294_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 240])];
            tensor<int32, [4]> var_294_end_0 = const()[name = tensor<string, []>("op_294_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 280])];
            tensor<bool, [4]> var_294_end_mask_0 = const()[name = tensor<string, []>("op_294_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_294_cast = slice_by_index(begin = var_294_begin_0, end = var_294_end_0, end_mask = var_294_end_mask_0, x = transpose_77);
            tensor<int32, [4]> var_298_begin_0 = const()[name = tensor<string, []>("op_298_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 280])];
            tensor<int32, [4]> var_298_end_0 = const()[name = tensor<string, []>("op_298_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 320])];
            tensor<bool, [4]> var_298_end_mask_0 = const()[name = tensor<string, []>("op_298_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_298_cast = slice_by_index(begin = var_298_begin_0, end = var_298_end_0, end_mask = var_298_end_mask_0, x = transpose_77);
            tensor<int32, [4]> var_300_begin_0 = const()[name = tensor<string, []>("op_300_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_300_end_0 = const()[name = tensor<string, []>("op_300_end_0"), val = tensor<int32, [4]>([2, 40, 1, 4096])];
            tensor<bool, [4]> var_300_end_mask_0 = const()[name = tensor<string, []>("op_300_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_300_cast = slice_by_index(begin = var_300_begin_0, end = var_300_end_0, end_mask = var_300_end_mask_0, x = v_1_cast);
            tensor<int32, [4]> var_304_begin_0 = const()[name = tensor<string, []>("op_304_begin_0"), val = tensor<int32, [4]>([0, 40, 0, 0])];
            tensor<int32, [4]> var_304_end_0 = const()[name = tensor<string, []>("op_304_end_0"), val = tensor<int32, [4]>([2, 80, 1, 4096])];
            tensor<bool, [4]> var_304_end_mask_0 = const()[name = tensor<string, []>("op_304_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_304_cast = slice_by_index(begin = var_304_begin_0, end = var_304_end_0, end_mask = var_304_end_mask_0, x = v_1_cast);
            tensor<int32, [4]> var_308_begin_0 = const()[name = tensor<string, []>("op_308_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_308_end_0 = const()[name = tensor<string, []>("op_308_end_0"), val = tensor<int32, [4]>([2, 120, 1, 4096])];
            tensor<bool, [4]> var_308_end_mask_0 = const()[name = tensor<string, []>("op_308_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_308_cast = slice_by_index(begin = var_308_begin_0, end = var_308_end_0, end_mask = var_308_end_mask_0, x = v_1_cast);
            tensor<int32, [4]> var_312_begin_0 = const()[name = tensor<string, []>("op_312_begin_0"), val = tensor<int32, [4]>([0, 120, 0, 0])];
            tensor<int32, [4]> var_312_end_0 = const()[name = tensor<string, []>("op_312_end_0"), val = tensor<int32, [4]>([2, 160, 1, 4096])];
            tensor<bool, [4]> var_312_end_mask_0 = const()[name = tensor<string, []>("op_312_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_312_cast = slice_by_index(begin = var_312_begin_0, end = var_312_end_0, end_mask = var_312_end_mask_0, x = v_1_cast);
            tensor<int32, [4]> var_316_begin_0 = const()[name = tensor<string, []>("op_316_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_316_end_0 = const()[name = tensor<string, []>("op_316_end_0"), val = tensor<int32, [4]>([2, 200, 1, 4096])];
            tensor<bool, [4]> var_316_end_mask_0 = const()[name = tensor<string, []>("op_316_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_316_cast = slice_by_index(begin = var_316_begin_0, end = var_316_end_0, end_mask = var_316_end_mask_0, x = v_1_cast);
            tensor<int32, [4]> var_320_begin_0 = const()[name = tensor<string, []>("op_320_begin_0"), val = tensor<int32, [4]>([0, 200, 0, 0])];
            tensor<int32, [4]> var_320_end_0 = const()[name = tensor<string, []>("op_320_end_0"), val = tensor<int32, [4]>([2, 240, 1, 4096])];
            tensor<bool, [4]> var_320_end_mask_0 = const()[name = tensor<string, []>("op_320_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_320_cast = slice_by_index(begin = var_320_begin_0, end = var_320_end_0, end_mask = var_320_end_mask_0, x = v_1_cast);
            tensor<int32, [4]> var_324_begin_0 = const()[name = tensor<string, []>("op_324_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_324_end_0 = const()[name = tensor<string, []>("op_324_end_0"), val = tensor<int32, [4]>([2, 280, 1, 4096])];
            tensor<bool, [4]> var_324_end_mask_0 = const()[name = tensor<string, []>("op_324_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_324_cast = slice_by_index(begin = var_324_begin_0, end = var_324_end_0, end_mask = var_324_end_mask_0, x = v_1_cast);
            tensor<int32, [4]> var_328_begin_0 = const()[name = tensor<string, []>("op_328_begin_0"), val = tensor<int32, [4]>([0, 280, 0, 0])];
            tensor<int32, [4]> var_328_end_0 = const()[name = tensor<string, []>("op_328_end_0"), val = tensor<int32, [4]>([2, 320, 1, 4096])];
            tensor<bool, [4]> var_328_end_mask_0 = const()[name = tensor<string, []>("op_328_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_328_cast = slice_by_index(begin = var_328_begin_0, end = var_328_end_0, end_mask = var_328_end_mask_0, x = v_1_cast);
            tensor<string, []> var_332_equation_0 = const()[name = tensor<string, []>("op_332_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_332_cast = einsum(equation = var_332_equation_0, values = (var_270_cast, var_235_cast));
            tensor<fp16, []> var_333_to_fp16 = const()[name = tensor<string, []>("op_333_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_1_cast = mul(x = var_332_cast, y = var_333_to_fp16);
            tensor<string, []> var_336_equation_0 = const()[name = tensor<string, []>("op_336_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_336_cast = einsum(equation = var_336_equation_0, values = (var_274_cast, var_239_cast));
            tensor<fp16, []> var_337_to_fp16 = const()[name = tensor<string, []>("op_337_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_3_cast = mul(x = var_336_cast, y = var_337_to_fp16);
            tensor<string, []> var_340_equation_0 = const()[name = tensor<string, []>("op_340_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_340_cast = einsum(equation = var_340_equation_0, values = (var_278_cast, var_243_cast));
            tensor<fp16, []> var_341_to_fp16 = const()[name = tensor<string, []>("op_341_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_5_cast = mul(x = var_340_cast, y = var_341_to_fp16);
            tensor<string, []> var_344_equation_0 = const()[name = tensor<string, []>("op_344_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_344_cast = einsum(equation = var_344_equation_0, values = (var_282_cast, var_247_cast));
            tensor<fp16, []> var_345_to_fp16 = const()[name = tensor<string, []>("op_345_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_7_cast = mul(x = var_344_cast, y = var_345_to_fp16);
            tensor<string, []> var_348_equation_0 = const()[name = tensor<string, []>("op_348_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_348_cast = einsum(equation = var_348_equation_0, values = (var_286_cast, var_251_cast));
            tensor<fp16, []> var_349_to_fp16 = const()[name = tensor<string, []>("op_349_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_9_cast = mul(x = var_348_cast, y = var_349_to_fp16);
            tensor<string, []> var_352_equation_0 = const()[name = tensor<string, []>("op_352_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_352_cast = einsum(equation = var_352_equation_0, values = (var_290_cast, var_255_cast));
            tensor<fp16, []> var_353_to_fp16 = const()[name = tensor<string, []>("op_353_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_11_cast = mul(x = var_352_cast, y = var_353_to_fp16);
            tensor<string, []> var_356_equation_0 = const()[name = tensor<string, []>("op_356_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_356_cast = einsum(equation = var_356_equation_0, values = (var_294_cast, var_259_cast));
            tensor<fp16, []> var_357_to_fp16 = const()[name = tensor<string, []>("op_357_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_13_cast = mul(x = var_356_cast, y = var_357_to_fp16);
            tensor<string, []> var_360_equation_0 = const()[name = tensor<string, []>("op_360_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_360_cast = einsum(equation = var_360_equation_0, values = (var_298_cast, var_263_cast));
            tensor<fp16, []> var_361_to_fp16 = const()[name = tensor<string, []>("op_361_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_15_cast = mul(x = var_360_cast, y = var_361_to_fp16);
            tensor<fp16, [2, 4096, 1, 4096]> var_363_cast = softmax(axis = var_115, x = aw_1_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_364_cast = softmax(axis = var_115, x = aw_3_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_365_cast = softmax(axis = var_115, x = aw_5_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_366_cast = softmax(axis = var_115, x = aw_7_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_367_cast = softmax(axis = var_115, x = aw_9_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_368_cast = softmax(axis = var_115, x = aw_11_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_369_cast = softmax(axis = var_115, x = aw_13_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_370_cast = softmax(axis = var_115, x = aw_15_cast);
            tensor<string, []> var_372_equation_0 = const()[name = tensor<string, []>("op_372_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_372_cast = einsum(equation = var_372_equation_0, values = (var_300_cast, var_363_cast));
            tensor<string, []> var_374_equation_0 = const()[name = tensor<string, []>("op_374_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_374_cast = einsum(equation = var_374_equation_0, values = (var_304_cast, var_364_cast));
            tensor<string, []> var_376_equation_0 = const()[name = tensor<string, []>("op_376_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_376_cast = einsum(equation = var_376_equation_0, values = (var_308_cast, var_365_cast));
            tensor<string, []> var_378_equation_0 = const()[name = tensor<string, []>("op_378_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_378_cast = einsum(equation = var_378_equation_0, values = (var_312_cast, var_366_cast));
            tensor<string, []> var_380_equation_0 = const()[name = tensor<string, []>("op_380_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_380_cast = einsum(equation = var_380_equation_0, values = (var_316_cast, var_367_cast));
            tensor<string, []> var_382_equation_0 = const()[name = tensor<string, []>("op_382_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_382_cast = einsum(equation = var_382_equation_0, values = (var_320_cast, var_368_cast));
            tensor<string, []> var_384_equation_0 = const()[name = tensor<string, []>("op_384_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_384_cast = einsum(equation = var_384_equation_0, values = (var_324_cast, var_369_cast));
            tensor<string, []> var_386_equation_0 = const()[name = tensor<string, []>("op_386_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_386_cast = einsum(equation = var_386_equation_0, values = (var_328_cast, var_370_cast));
            tensor<bool, []> input_25_interleave_0 = const()[name = tensor<string, []>("input_25_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 320, 1, 4096]> input_25_cast = concat(axis = var_115, interleave = input_25_interleave_0, values = (var_372_cast, var_374_cast, var_376_cast, var_378_cast, var_380_cast, var_382_cast, var_384_cast, var_386_cast));
            tensor<int32, [2]> var_392 = const()[name = tensor<string, []>("op_392"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_394 = const()[name = tensor<string, []>("op_394"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_396_pad_type_0 = const()[name = tensor<string, []>("op_396_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_396_pad_0 = const()[name = tensor<string, []>("op_396_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> down_blocks_0_attentions_0_transformer_blocks_0_attn1_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_0_transformer_blocks_0_attn1_to_out_0_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9463552)))];
            tensor<fp16, [320]> down_blocks_0_attentions_0_transformer_blocks_0_attn1_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_0_transformer_blocks_0_attn1_to_out_0_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9668416)))];
            tensor<fp16, [2, 320, 1, 4096]> var_396_cast = conv(bias = down_blocks_0_attentions_0_transformer_blocks_0_attn1_to_out_0_bias_to_fp16, dilations = var_394, groups = var_115, pad = var_396_pad_0, pad_type = var_396_pad_type_0, strides = var_392, weight = down_blocks_0_attentions_0_transformer_blocks_0_attn1_to_out_0_weight_to_fp16, x = input_25_cast);
            tensor<fp16, [2, 320, 1, 4096]> inputs_3_cast = add(x = var_396_cast, y = inputs_1_cast);
            tensor<int32, [1]> var_400 = const()[name = tensor<string, []>("op_400"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> channels_mean_3_cast = reduce_mean(axes = var_400, keep_dims = var_110, x = inputs_3_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_3_cast = sub(x = inputs_3_cast, y = channels_mean_3_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_sq_3_cast = mul(x = zero_mean_3_cast, y = zero_mean_3_cast);
            tensor<int32, [1]> var_404 = const()[name = tensor<string, []>("op_404"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> var_405_cast = reduce_mean(axes = var_404, keep_dims = var_110, x = zero_mean_sq_3_cast);
            tensor<fp16, []> var_406_to_fp16 = const()[name = tensor<string, []>("op_406_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 4096]> var_407_cast = add(x = var_405_cast, y = var_406_to_fp16);
            tensor<fp16, []> denom_3_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_3_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 4096]> denom_3_cast = rsqrt(epsilon = denom_3_epsilon_0_to_fp16, x = var_407_cast);
            tensor<fp16, [2, 320, 1, 4096]> out_3_cast = mul(x = zero_mean_3_cast, y = denom_3_cast);
            tensor<fp16, [1, 320, 1, 1]> var_411_to_fp16 = const()[name = tensor<string, []>("op_411_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9669120)))];
            tensor<fp16, [2, 320, 1, 4096]> var_412_cast = add(x = out_3_cast, y = var_411_to_fp16);
            tensor<fp16, [1, 320, 1, 1]> var_414_to_fp16 = const()[name = tensor<string, []>("op_414_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9669824)))];
            tensor<fp16, [2, 320, 1, 4096]> hidden_states_11_cast = mul(x = var_412_cast, y = var_414_to_fp16);
            tensor<int32, [2]> var_421 = const()[name = tensor<string, []>("op_421"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_423 = const()[name = tensor<string, []>("op_423"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_3_pad_type_0 = const()[name = tensor<string, []>("q_3_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_3_pad_0 = const()[name = tensor<string, []>("q_3_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> down_blocks_0_attentions_0_transformer_blocks_0_attn2_to_q_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_0_transformer_blocks_0_attn2_to_q_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9670528)))];
            tensor<fp16, [2, 320, 1, 4096]> q_3_cast = conv(dilations = var_423, groups = var_115, pad = q_3_pad_0, pad_type = q_3_pad_type_0, strides = var_421, weight = down_blocks_0_attentions_0_transformer_blocks_0_attn2_to_q_weight_to_fp16, x = hidden_states_11_cast);
            tensor<int32, [2]> var_427 = const()[name = tensor<string, []>("op_427"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_429 = const()[name = tensor<string, []>("op_429"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_5_pad_type_0 = const()[name = tensor<string, []>("k_5_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_5_pad_0 = const()[name = tensor<string, []>("k_5_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 768, 1, 1]> down_blocks_0_attentions_0_transformer_blocks_0_attn2_to_k_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_0_transformer_blocks_0_attn2_to_k_weight_to_fp16"), val = tensor<fp16, [320, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9875392)))];
            tensor<fp16, [2, 320, 1, 77]> k_5_cast = conv(dilations = var_429, groups = var_115, pad = k_5_pad_0, pad_type = k_5_pad_type_0, strides = var_427, weight = down_blocks_0_attentions_0_transformer_blocks_0_attn2_to_k_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [2]> var_433 = const()[name = tensor<string, []>("op_433"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_435 = const()[name = tensor<string, []>("op_435"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_3_pad_type_0 = const()[name = tensor<string, []>("v_3_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_3_pad_0 = const()[name = tensor<string, []>("v_3_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 768, 1, 1]> down_blocks_0_attentions_0_transformer_blocks_0_attn2_to_v_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_0_transformer_blocks_0_attn2_to_v_weight_to_fp16"), val = tensor<fp16, [320, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10366976)))];
            tensor<fp16, [2, 320, 1, 77]> v_3_cast = conv(dilations = var_435, groups = var_115, pad = v_3_pad_0, pad_type = v_3_pad_type_0, strides = var_433, weight = down_blocks_0_attentions_0_transformer_blocks_0_attn2_to_v_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [4]> var_439_begin_0 = const()[name = tensor<string, []>("op_439_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_439_end_0 = const()[name = tensor<string, []>("op_439_end_0"), val = tensor<int32, [4]>([2, 40, 1, 4096])];
            tensor<bool, [4]> var_439_end_mask_0 = const()[name = tensor<string, []>("op_439_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_439_cast = slice_by_index(begin = var_439_begin_0, end = var_439_end_0, end_mask = var_439_end_mask_0, x = q_3_cast);
            tensor<int32, [4]> var_443_begin_0 = const()[name = tensor<string, []>("op_443_begin_0"), val = tensor<int32, [4]>([0, 40, 0, 0])];
            tensor<int32, [4]> var_443_end_0 = const()[name = tensor<string, []>("op_443_end_0"), val = tensor<int32, [4]>([2, 80, 1, 4096])];
            tensor<bool, [4]> var_443_end_mask_0 = const()[name = tensor<string, []>("op_443_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_443_cast = slice_by_index(begin = var_443_begin_0, end = var_443_end_0, end_mask = var_443_end_mask_0, x = q_3_cast);
            tensor<int32, [4]> var_447_begin_0 = const()[name = tensor<string, []>("op_447_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_447_end_0 = const()[name = tensor<string, []>("op_447_end_0"), val = tensor<int32, [4]>([2, 120, 1, 4096])];
            tensor<bool, [4]> var_447_end_mask_0 = const()[name = tensor<string, []>("op_447_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_447_cast = slice_by_index(begin = var_447_begin_0, end = var_447_end_0, end_mask = var_447_end_mask_0, x = q_3_cast);
            tensor<int32, [4]> var_451_begin_0 = const()[name = tensor<string, []>("op_451_begin_0"), val = tensor<int32, [4]>([0, 120, 0, 0])];
            tensor<int32, [4]> var_451_end_0 = const()[name = tensor<string, []>("op_451_end_0"), val = tensor<int32, [4]>([2, 160, 1, 4096])];
            tensor<bool, [4]> var_451_end_mask_0 = const()[name = tensor<string, []>("op_451_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_451_cast = slice_by_index(begin = var_451_begin_0, end = var_451_end_0, end_mask = var_451_end_mask_0, x = q_3_cast);
            tensor<int32, [4]> var_455_begin_0 = const()[name = tensor<string, []>("op_455_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_455_end_0 = const()[name = tensor<string, []>("op_455_end_0"), val = tensor<int32, [4]>([2, 200, 1, 4096])];
            tensor<bool, [4]> var_455_end_mask_0 = const()[name = tensor<string, []>("op_455_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_455_cast = slice_by_index(begin = var_455_begin_0, end = var_455_end_0, end_mask = var_455_end_mask_0, x = q_3_cast);
            tensor<int32, [4]> var_459_begin_0 = const()[name = tensor<string, []>("op_459_begin_0"), val = tensor<int32, [4]>([0, 200, 0, 0])];
            tensor<int32, [4]> var_459_end_0 = const()[name = tensor<string, []>("op_459_end_0"), val = tensor<int32, [4]>([2, 240, 1, 4096])];
            tensor<bool, [4]> var_459_end_mask_0 = const()[name = tensor<string, []>("op_459_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_459_cast = slice_by_index(begin = var_459_begin_0, end = var_459_end_0, end_mask = var_459_end_mask_0, x = q_3_cast);
            tensor<int32, [4]> var_463_begin_0 = const()[name = tensor<string, []>("op_463_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_463_end_0 = const()[name = tensor<string, []>("op_463_end_0"), val = tensor<int32, [4]>([2, 280, 1, 4096])];
            tensor<bool, [4]> var_463_end_mask_0 = const()[name = tensor<string, []>("op_463_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_463_cast = slice_by_index(begin = var_463_begin_0, end = var_463_end_0, end_mask = var_463_end_mask_0, x = q_3_cast);
            tensor<int32, [4]> var_467_begin_0 = const()[name = tensor<string, []>("op_467_begin_0"), val = tensor<int32, [4]>([0, 280, 0, 0])];
            tensor<int32, [4]> var_467_end_0 = const()[name = tensor<string, []>("op_467_end_0"), val = tensor<int32, [4]>([2, 320, 1, 4096])];
            tensor<bool, [4]> var_467_end_mask_0 = const()[name = tensor<string, []>("op_467_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_467_cast = slice_by_index(begin = var_467_begin_0, end = var_467_end_0, end_mask = var_467_end_mask_0, x = q_3_cast);
            tensor<int32, [4]> k_7_perm_0 = const()[name = tensor<string, []>("k_7_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_474_begin_0 = const()[name = tensor<string, []>("op_474_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_474_end_0 = const()[name = tensor<string, []>("op_474_end_0"), val = tensor<int32, [4]>([2, 77, 1, 40])];
            tensor<bool, [4]> var_474_end_mask_0 = const()[name = tensor<string, []>("op_474_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 320]> transpose_76 = transpose(perm = k_7_perm_0, x = k_5_cast);
            tensor<fp16, [2, 77, 1, 40]> var_474_cast = slice_by_index(begin = var_474_begin_0, end = var_474_end_0, end_mask = var_474_end_mask_0, x = transpose_76);
            tensor<int32, [4]> var_478_begin_0 = const()[name = tensor<string, []>("op_478_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 40])];
            tensor<int32, [4]> var_478_end_0 = const()[name = tensor<string, []>("op_478_end_0"), val = tensor<int32, [4]>([2, 77, 1, 80])];
            tensor<bool, [4]> var_478_end_mask_0 = const()[name = tensor<string, []>("op_478_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_478_cast = slice_by_index(begin = var_478_begin_0, end = var_478_end_0, end_mask = var_478_end_mask_0, x = transpose_76);
            tensor<int32, [4]> var_482_begin_0 = const()[name = tensor<string, []>("op_482_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 80])];
            tensor<int32, [4]> var_482_end_0 = const()[name = tensor<string, []>("op_482_end_0"), val = tensor<int32, [4]>([2, 77, 1, 120])];
            tensor<bool, [4]> var_482_end_mask_0 = const()[name = tensor<string, []>("op_482_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_482_cast = slice_by_index(begin = var_482_begin_0, end = var_482_end_0, end_mask = var_482_end_mask_0, x = transpose_76);
            tensor<int32, [4]> var_486_begin_0 = const()[name = tensor<string, []>("op_486_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 120])];
            tensor<int32, [4]> var_486_end_0 = const()[name = tensor<string, []>("op_486_end_0"), val = tensor<int32, [4]>([2, 77, 1, 160])];
            tensor<bool, [4]> var_486_end_mask_0 = const()[name = tensor<string, []>("op_486_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_486_cast = slice_by_index(begin = var_486_begin_0, end = var_486_end_0, end_mask = var_486_end_mask_0, x = transpose_76);
            tensor<int32, [4]> var_490_begin_0 = const()[name = tensor<string, []>("op_490_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 160])];
            tensor<int32, [4]> var_490_end_0 = const()[name = tensor<string, []>("op_490_end_0"), val = tensor<int32, [4]>([2, 77, 1, 200])];
            tensor<bool, [4]> var_490_end_mask_0 = const()[name = tensor<string, []>("op_490_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_490_cast = slice_by_index(begin = var_490_begin_0, end = var_490_end_0, end_mask = var_490_end_mask_0, x = transpose_76);
            tensor<int32, [4]> var_494_begin_0 = const()[name = tensor<string, []>("op_494_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 200])];
            tensor<int32, [4]> var_494_end_0 = const()[name = tensor<string, []>("op_494_end_0"), val = tensor<int32, [4]>([2, 77, 1, 240])];
            tensor<bool, [4]> var_494_end_mask_0 = const()[name = tensor<string, []>("op_494_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_494_cast = slice_by_index(begin = var_494_begin_0, end = var_494_end_0, end_mask = var_494_end_mask_0, x = transpose_76);
            tensor<int32, [4]> var_498_begin_0 = const()[name = tensor<string, []>("op_498_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 240])];
            tensor<int32, [4]> var_498_end_0 = const()[name = tensor<string, []>("op_498_end_0"), val = tensor<int32, [4]>([2, 77, 1, 280])];
            tensor<bool, [4]> var_498_end_mask_0 = const()[name = tensor<string, []>("op_498_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_498_cast = slice_by_index(begin = var_498_begin_0, end = var_498_end_0, end_mask = var_498_end_mask_0, x = transpose_76);
            tensor<int32, [4]> var_502_begin_0 = const()[name = tensor<string, []>("op_502_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 280])];
            tensor<int32, [4]> var_502_end_0 = const()[name = tensor<string, []>("op_502_end_0"), val = tensor<int32, [4]>([2, 77, 1, 320])];
            tensor<bool, [4]> var_502_end_mask_0 = const()[name = tensor<string, []>("op_502_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_502_cast = slice_by_index(begin = var_502_begin_0, end = var_502_end_0, end_mask = var_502_end_mask_0, x = transpose_76);
            tensor<int32, [4]> var_504_begin_0 = const()[name = tensor<string, []>("op_504_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_504_end_0 = const()[name = tensor<string, []>("op_504_end_0"), val = tensor<int32, [4]>([2, 40, 1, 77])];
            tensor<bool, [4]> var_504_end_mask_0 = const()[name = tensor<string, []>("op_504_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_504_cast = slice_by_index(begin = var_504_begin_0, end = var_504_end_0, end_mask = var_504_end_mask_0, x = v_3_cast);
            tensor<int32, [4]> var_508_begin_0 = const()[name = tensor<string, []>("op_508_begin_0"), val = tensor<int32, [4]>([0, 40, 0, 0])];
            tensor<int32, [4]> var_508_end_0 = const()[name = tensor<string, []>("op_508_end_0"), val = tensor<int32, [4]>([2, 80, 1, 77])];
            tensor<bool, [4]> var_508_end_mask_0 = const()[name = tensor<string, []>("op_508_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_508_cast = slice_by_index(begin = var_508_begin_0, end = var_508_end_0, end_mask = var_508_end_mask_0, x = v_3_cast);
            tensor<int32, [4]> var_512_begin_0 = const()[name = tensor<string, []>("op_512_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_512_end_0 = const()[name = tensor<string, []>("op_512_end_0"), val = tensor<int32, [4]>([2, 120, 1, 77])];
            tensor<bool, [4]> var_512_end_mask_0 = const()[name = tensor<string, []>("op_512_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_512_cast = slice_by_index(begin = var_512_begin_0, end = var_512_end_0, end_mask = var_512_end_mask_0, x = v_3_cast);
            tensor<int32, [4]> var_516_begin_0 = const()[name = tensor<string, []>("op_516_begin_0"), val = tensor<int32, [4]>([0, 120, 0, 0])];
            tensor<int32, [4]> var_516_end_0 = const()[name = tensor<string, []>("op_516_end_0"), val = tensor<int32, [4]>([2, 160, 1, 77])];
            tensor<bool, [4]> var_516_end_mask_0 = const()[name = tensor<string, []>("op_516_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_516_cast = slice_by_index(begin = var_516_begin_0, end = var_516_end_0, end_mask = var_516_end_mask_0, x = v_3_cast);
            tensor<int32, [4]> var_520_begin_0 = const()[name = tensor<string, []>("op_520_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_520_end_0 = const()[name = tensor<string, []>("op_520_end_0"), val = tensor<int32, [4]>([2, 200, 1, 77])];
            tensor<bool, [4]> var_520_end_mask_0 = const()[name = tensor<string, []>("op_520_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_520_cast = slice_by_index(begin = var_520_begin_0, end = var_520_end_0, end_mask = var_520_end_mask_0, x = v_3_cast);
            tensor<int32, [4]> var_524_begin_0 = const()[name = tensor<string, []>("op_524_begin_0"), val = tensor<int32, [4]>([0, 200, 0, 0])];
            tensor<int32, [4]> var_524_end_0 = const()[name = tensor<string, []>("op_524_end_0"), val = tensor<int32, [4]>([2, 240, 1, 77])];
            tensor<bool, [4]> var_524_end_mask_0 = const()[name = tensor<string, []>("op_524_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_524_cast = slice_by_index(begin = var_524_begin_0, end = var_524_end_0, end_mask = var_524_end_mask_0, x = v_3_cast);
            tensor<int32, [4]> var_528_begin_0 = const()[name = tensor<string, []>("op_528_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_528_end_0 = const()[name = tensor<string, []>("op_528_end_0"), val = tensor<int32, [4]>([2, 280, 1, 77])];
            tensor<bool, [4]> var_528_end_mask_0 = const()[name = tensor<string, []>("op_528_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_528_cast = slice_by_index(begin = var_528_begin_0, end = var_528_end_0, end_mask = var_528_end_mask_0, x = v_3_cast);
            tensor<int32, [4]> var_532_begin_0 = const()[name = tensor<string, []>("op_532_begin_0"), val = tensor<int32, [4]>([0, 280, 0, 0])];
            tensor<int32, [4]> var_532_end_0 = const()[name = tensor<string, []>("op_532_end_0"), val = tensor<int32, [4]>([2, 320, 1, 77])];
            tensor<bool, [4]> var_532_end_mask_0 = const()[name = tensor<string, []>("op_532_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_532_cast = slice_by_index(begin = var_532_begin_0, end = var_532_end_0, end_mask = var_532_end_mask_0, x = v_3_cast);
            tensor<string, []> var_536_equation_0 = const()[name = tensor<string, []>("op_536_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_536_cast = einsum(equation = var_536_equation_0, values = (var_474_cast, var_439_cast));
            tensor<fp16, []> var_537_to_fp16 = const()[name = tensor<string, []>("op_537_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_17_cast = mul(x = var_536_cast, y = var_537_to_fp16);
            tensor<string, []> var_540_equation_0 = const()[name = tensor<string, []>("op_540_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_540_cast = einsum(equation = var_540_equation_0, values = (var_478_cast, var_443_cast));
            tensor<fp16, []> var_541_to_fp16 = const()[name = tensor<string, []>("op_541_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_19_cast = mul(x = var_540_cast, y = var_541_to_fp16);
            tensor<string, []> var_544_equation_0 = const()[name = tensor<string, []>("op_544_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_544_cast = einsum(equation = var_544_equation_0, values = (var_482_cast, var_447_cast));
            tensor<fp16, []> var_545_to_fp16 = const()[name = tensor<string, []>("op_545_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_21_cast = mul(x = var_544_cast, y = var_545_to_fp16);
            tensor<string, []> var_548_equation_0 = const()[name = tensor<string, []>("op_548_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_548_cast = einsum(equation = var_548_equation_0, values = (var_486_cast, var_451_cast));
            tensor<fp16, []> var_549_to_fp16 = const()[name = tensor<string, []>("op_549_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_23_cast = mul(x = var_548_cast, y = var_549_to_fp16);
            tensor<string, []> var_552_equation_0 = const()[name = tensor<string, []>("op_552_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_552_cast = einsum(equation = var_552_equation_0, values = (var_490_cast, var_455_cast));
            tensor<fp16, []> var_553_to_fp16 = const()[name = tensor<string, []>("op_553_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_25_cast = mul(x = var_552_cast, y = var_553_to_fp16);
            tensor<string, []> var_556_equation_0 = const()[name = tensor<string, []>("op_556_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_556_cast = einsum(equation = var_556_equation_0, values = (var_494_cast, var_459_cast));
            tensor<fp16, []> var_557_to_fp16 = const()[name = tensor<string, []>("op_557_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_27_cast = mul(x = var_556_cast, y = var_557_to_fp16);
            tensor<string, []> var_560_equation_0 = const()[name = tensor<string, []>("op_560_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_560_cast = einsum(equation = var_560_equation_0, values = (var_498_cast, var_463_cast));
            tensor<fp16, []> var_561_to_fp16 = const()[name = tensor<string, []>("op_561_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_29_cast = mul(x = var_560_cast, y = var_561_to_fp16);
            tensor<string, []> var_564_equation_0 = const()[name = tensor<string, []>("op_564_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_564_cast = einsum(equation = var_564_equation_0, values = (var_502_cast, var_467_cast));
            tensor<fp16, []> var_565_to_fp16 = const()[name = tensor<string, []>("op_565_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_31_cast = mul(x = var_564_cast, y = var_565_to_fp16);
            tensor<fp16, [2, 77, 1, 4096]> var_567_cast = softmax(axis = var_115, x = aw_17_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_568_cast = softmax(axis = var_115, x = aw_19_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_569_cast = softmax(axis = var_115, x = aw_21_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_570_cast = softmax(axis = var_115, x = aw_23_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_571_cast = softmax(axis = var_115, x = aw_25_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_572_cast = softmax(axis = var_115, x = aw_27_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_573_cast = softmax(axis = var_115, x = aw_29_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_574_cast = softmax(axis = var_115, x = aw_31_cast);
            tensor<string, []> var_576_equation_0 = const()[name = tensor<string, []>("op_576_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_576_cast = einsum(equation = var_576_equation_0, values = (var_504_cast, var_567_cast));
            tensor<string, []> var_578_equation_0 = const()[name = tensor<string, []>("op_578_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_578_cast = einsum(equation = var_578_equation_0, values = (var_508_cast, var_568_cast));
            tensor<string, []> var_580_equation_0 = const()[name = tensor<string, []>("op_580_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_580_cast = einsum(equation = var_580_equation_0, values = (var_512_cast, var_569_cast));
            tensor<string, []> var_582_equation_0 = const()[name = tensor<string, []>("op_582_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_582_cast = einsum(equation = var_582_equation_0, values = (var_516_cast, var_570_cast));
            tensor<string, []> var_584_equation_0 = const()[name = tensor<string, []>("op_584_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_584_cast = einsum(equation = var_584_equation_0, values = (var_520_cast, var_571_cast));
            tensor<string, []> var_586_equation_0 = const()[name = tensor<string, []>("op_586_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_586_cast = einsum(equation = var_586_equation_0, values = (var_524_cast, var_572_cast));
            tensor<string, []> var_588_equation_0 = const()[name = tensor<string, []>("op_588_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_588_cast = einsum(equation = var_588_equation_0, values = (var_528_cast, var_573_cast));
            tensor<string, []> var_590_equation_0 = const()[name = tensor<string, []>("op_590_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_590_cast = einsum(equation = var_590_equation_0, values = (var_532_cast, var_574_cast));
            tensor<bool, []> input_27_interleave_0 = const()[name = tensor<string, []>("input_27_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 320, 1, 4096]> input_27_cast = concat(axis = var_115, interleave = input_27_interleave_0, values = (var_576_cast, var_578_cast, var_580_cast, var_582_cast, var_584_cast, var_586_cast, var_588_cast, var_590_cast));
            tensor<int32, [2]> var_596 = const()[name = tensor<string, []>("op_596"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_598 = const()[name = tensor<string, []>("op_598"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_600_pad_type_0 = const()[name = tensor<string, []>("op_600_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_600_pad_0 = const()[name = tensor<string, []>("op_600_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> down_blocks_0_attentions_0_transformer_blocks_0_attn2_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_0_transformer_blocks_0_attn2_to_out_0_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10858560)))];
            tensor<fp16, [320]> down_blocks_0_attentions_0_transformer_blocks_0_attn2_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_0_transformer_blocks_0_attn2_to_out_0_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11063424)))];
            tensor<fp16, [2, 320, 1, 4096]> var_600_cast = conv(bias = down_blocks_0_attentions_0_transformer_blocks_0_attn2_to_out_0_bias_to_fp16, dilations = var_598, groups = var_115, pad = var_600_pad_0, pad_type = var_600_pad_type_0, strides = var_596, weight = down_blocks_0_attentions_0_transformer_blocks_0_attn2_to_out_0_weight_to_fp16, x = input_27_cast);
            tensor<fp16, [2, 320, 1, 4096]> inputs_5_cast = add(x = var_600_cast, y = inputs_3_cast);
            tensor<int32, [1]> var_604 = const()[name = tensor<string, []>("op_604"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> channels_mean_5_cast = reduce_mean(axes = var_604, keep_dims = var_110, x = inputs_5_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_5_cast = sub(x = inputs_5_cast, y = channels_mean_5_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_sq_5_cast = mul(x = zero_mean_5_cast, y = zero_mean_5_cast);
            tensor<int32, [1]> var_608 = const()[name = tensor<string, []>("op_608"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> var_609_cast = reduce_mean(axes = var_608, keep_dims = var_110, x = zero_mean_sq_5_cast);
            tensor<fp16, []> var_610_to_fp16 = const()[name = tensor<string, []>("op_610_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 4096]> var_611_cast = add(x = var_609_cast, y = var_610_to_fp16);
            tensor<fp16, []> denom_5_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_5_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 4096]> denom_5_cast = rsqrt(epsilon = denom_5_epsilon_0_to_fp16, x = var_611_cast);
            tensor<fp16, [2, 320, 1, 4096]> out_5_cast = mul(x = zero_mean_5_cast, y = denom_5_cast);
            tensor<fp16, [1, 320, 1, 1]> var_615_to_fp16 = const()[name = tensor<string, []>("op_615_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11064128)))];
            tensor<fp16, [2, 320, 1, 4096]> var_616_cast = add(x = out_5_cast, y = var_615_to_fp16);
            tensor<fp16, [1, 320, 1, 1]> var_618_to_fp16 = const()[name = tensor<string, []>("op_618_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11064832)))];
            tensor<fp16, [2, 320, 1, 4096]> input_29_cast = mul(x = var_616_cast, y = var_618_to_fp16);
            tensor<int32, [2]> var_626 = const()[name = tensor<string, []>("op_626"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_628 = const()[name = tensor<string, []>("op_628"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_630_pad_type_0 = const()[name = tensor<string, []>("op_630_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_630_pad_0 = const()[name = tensor<string, []>("op_630_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [2560, 320, 1, 1]> down_blocks_0_attentions_0_transformer_blocks_0_ff_net_0_proj_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_0_transformer_blocks_0_ff_net_0_proj_weight_to_fp16"), val = tensor<fp16, [2560, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11065536)))];
            tensor<fp16, [2560]> down_blocks_0_attentions_0_transformer_blocks_0_ff_net_0_proj_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_0_transformer_blocks_0_ff_net_0_proj_bias_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12704000)))];
            tensor<fp16, [2, 2560, 1, 4096]> var_630_cast = conv(bias = down_blocks_0_attentions_0_transformer_blocks_0_ff_net_0_proj_bias_to_fp16, dilations = var_628, groups = var_115, pad = var_630_pad_0, pad_type = var_630_pad_type_0, strides = var_626, weight = down_blocks_0_attentions_0_transformer_blocks_0_ff_net_0_proj_weight_to_fp16, x = input_29_cast);
            tensor<int32, [2]> var_631_split_sizes_0 = const()[name = tensor<string, []>("op_631_split_sizes_0"), val = tensor<int32, [2]>([1280, 1280])];
            tensor<int32, []> var_631_axis_0 = const()[name = tensor<string, []>("op_631_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [2, 1280, 1, 4096]> var_631_cast_0, tensor<fp16, [2, 1280, 1, 4096]> var_631_cast_1 = split(axis = var_631_axis_0, split_sizes = var_631_split_sizes_0, x = var_630_cast);
            tensor<string, []> var_633_mode_0 = const()[name = tensor<string, []>("op_633_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [2, 1280, 1, 4096]> var_633_cast = gelu(mode = var_633_mode_0, x = var_631_cast_1);
            tensor<fp16, [2, 1280, 1, 4096]> input_31_cast = mul(x = var_631_cast_0, y = var_633_cast);
            tensor<int32, [2]> var_637 = const()[name = tensor<string, []>("op_637"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_639 = const()[name = tensor<string, []>("op_639"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_641_pad_type_0 = const()[name = tensor<string, []>("op_641_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_641_pad_0 = const()[name = tensor<string, []>("op_641_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 1280, 1, 1]> down_blocks_0_attentions_0_transformer_blocks_0_ff_net_2_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_0_transformer_blocks_0_ff_net_2_weight_to_fp16"), val = tensor<fp16, [320, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12709184)))];
            tensor<fp16, [320]> down_blocks_0_attentions_0_transformer_blocks_0_ff_net_2_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_0_transformer_blocks_0_ff_net_2_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13528448)))];
            tensor<fp16, [2, 320, 1, 4096]> var_641_cast = conv(bias = down_blocks_0_attentions_0_transformer_blocks_0_ff_net_2_bias_to_fp16, dilations = var_639, groups = var_115, pad = var_641_pad_0, pad_type = var_641_pad_type_0, strides = var_637, weight = down_blocks_0_attentions_0_transformer_blocks_0_ff_net_2_weight_to_fp16, x = input_31_cast);
            tensor<fp16, [2, 320, 1, 4096]> hidden_states_15_cast = add(x = var_641_cast, y = inputs_5_cast);
            tensor<int32, [4]> var_643 = const()[name = tensor<string, []>("op_643"), val = tensor<int32, [4]>([2, 320, 64, 64])];
            tensor<fp16, [2, 320, 64, 64]> input_33_cast = reshape(shape = var_643, x = hidden_states_15_cast);
            tensor<int32, [2]> var_647 = const()[name = tensor<string, []>("op_647"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_649 = const()[name = tensor<string, []>("op_649"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_17_pad_type_0 = const()[name = tensor<string, []>("hidden_states_17_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_17_pad_0 = const()[name = tensor<string, []>("hidden_states_17_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> down_blocks_0_attentions_0_proj_out_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_0_proj_out_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13529152)))];
            tensor<fp16, [320]> down_blocks_0_attentions_0_proj_out_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_0_proj_out_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13734016)))];
            tensor<fp16, [2, 320, 64, 64]> hidden_states_17_cast = conv(bias = down_blocks_0_attentions_0_proj_out_bias_to_fp16, dilations = var_649, groups = var_115, pad = hidden_states_17_pad_0, pad_type = hidden_states_17_pad_type_0, strides = var_647, weight = down_blocks_0_attentions_0_proj_out_weight_to_fp16, x = input_33_cast);
            tensor<fp16, [2, 320, 64, 64]> input_35_cast_1 = add(x = hidden_states_17_cast, y = hidden_states_5_cast);
            tensor<int32, [5]> reshape_12_shape_0 = const()[name = tensor<string, []>("reshape_12_shape_0"), val = tensor<int32, [5]>([2, 32, 10, 64, 64])];
            tensor<fp16, [2, 32, 10, 64, 64]> reshape_12_cast = reshape(shape = reshape_12_shape_0, x = input_35_cast_1);
            tensor<int32, [3]> reduce_mean_9_axes_0 = const()[name = tensor<string, []>("reduce_mean_9_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_9_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_9_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_9_cast = reduce_mean(axes = reduce_mean_9_axes_0, keep_dims = reduce_mean_9_keep_dims_0, x = reshape_12_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> sub_6_cast = sub(x = reshape_12_cast, y = reduce_mean_9_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> square_3_cast = square(x = sub_6_cast);
            tensor<int32, [3]> reduce_mean_11_axes_0 = const()[name = tensor<string, []>("reduce_mean_11_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_11_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_11_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_11_cast = reduce_mean(axes = reduce_mean_11_axes_0, keep_dims = reduce_mean_11_keep_dims_0, x = square_3_cast);
            tensor<fp16, []> add_6_y_0_to_fp16 = const()[name = tensor<string, []>("add_6_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_6_cast = add(x = reduce_mean_11_cast, y = add_6_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_3_cast = sqrt(x = add_6_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> real_div_3_cast = real_div(x = sub_6_cast, y = sqrt_3_cast);
            tensor<int32, [4]> reshape_13_shape_0 = const()[name = tensor<string, []>("reshape_13_shape_0"), val = tensor<int32, [4]>([2, 320, 64, 64])];
            tensor<fp16, [2, 320, 64, 64]> reshape_13_cast = reshape(shape = reshape_13_shape_0, x = real_div_3_cast);
            tensor<fp16, [320]> add_7_mean_0_to_fp16 = const()[name = tensor<string, []>("add_7_mean_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13734720)))];
            tensor<fp16, [320]> add_7_variance_0_to_fp16 = const()[name = tensor<string, []>("add_7_variance_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13735424)))];
            tensor<fp16, [320]> add_7_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_7_gamma_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13736128)))];
            tensor<fp16, [320]> add_7_beta_0_to_fp16 = const()[name = tensor<string, []>("add_7_beta_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13736832)))];
            tensor<fp16, []> add_7_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_7_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 320, 64, 64]> add_7_cast = batch_norm(beta = add_7_beta_0_to_fp16, epsilon = add_7_epsilon_0_to_fp16, gamma = add_7_gamma_0_to_fp16, mean = add_7_mean_0_to_fp16, variance = add_7_variance_0_to_fp16, x = reshape_13_cast);
            tensor<fp16, [2, 320, 64, 64]> input_39_cast = silu(x = add_7_cast);
            tensor<int32, [2]> var_664 = const()[name = tensor<string, []>("op_664"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_666 = const()[name = tensor<string, []>("op_666"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_19_pad_type_0 = const()[name = tensor<string, []>("hidden_states_19_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_19_pad_0 = const()[name = tensor<string, []>("hidden_states_19_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [320, 320, 3, 3]> down_blocks_0_resnets_1_conv1_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_resnets_1_conv1_weight_to_fp16"), val = tensor<fp16, [320, 320, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13737536)))];
            tensor<fp16, [320]> down_blocks_0_resnets_1_conv1_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_resnets_1_conv1_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(15580800)))];
            tensor<fp16, [2, 320, 64, 64]> hidden_states_19_cast = conv(bias = down_blocks_0_resnets_1_conv1_bias_to_fp16, dilations = var_666, groups = var_115, pad = hidden_states_19_pad_0, pad_type = hidden_states_19_pad_type_0, strides = var_664, weight = down_blocks_0_resnets_1_conv1_weight_to_fp16, x = input_39_cast);
            tensor<int32, [2]> var_672 = const()[name = tensor<string, []>("op_672"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_674 = const()[name = tensor<string, []>("op_674"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> temb_3_pad_type_0 = const()[name = tensor<string, []>("temb_3_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> temb_3_pad_0 = const()[name = tensor<string, []>("temb_3_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 1280, 1, 1]> down_blocks_0_resnets_1_time_emb_proj_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_resnets_1_time_emb_proj_weight_to_fp16"), val = tensor<fp16, [320, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(15581504)))];
            tensor<fp16, [320]> down_blocks_0_resnets_1_time_emb_proj_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_resnets_1_time_emb_proj_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(16400768)))];
            tensor<fp16, [2, 320, 1, 1]> temb_3_cast = conv(bias = down_blocks_0_resnets_1_time_emb_proj_bias_to_fp16, dilations = var_674, groups = var_115, pad = temb_3_pad_0, pad_type = temb_3_pad_type_0, strides = var_672, weight = down_blocks_0_resnets_1_time_emb_proj_weight_to_fp16, x = input_15_cast_1);
            tensor<fp16, [2, 320, 64, 64]> input_43_cast = add(x = hidden_states_19_cast, y = temb_3_cast);
            tensor<int32, [5]> reshape_16_shape_0 = const()[name = tensor<string, []>("reshape_16_shape_0"), val = tensor<int32, [5]>([2, 32, 10, 64, 64])];
            tensor<fp16, [2, 32, 10, 64, 64]> reshape_16_cast = reshape(shape = reshape_16_shape_0, x = input_43_cast);
            tensor<int32, [3]> reduce_mean_12_axes_0 = const()[name = tensor<string, []>("reduce_mean_12_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_12_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_12_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_12_cast = reduce_mean(axes = reduce_mean_12_axes_0, keep_dims = reduce_mean_12_keep_dims_0, x = reshape_16_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> sub_8_cast = sub(x = reshape_16_cast, y = reduce_mean_12_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> square_4_cast = square(x = sub_8_cast);
            tensor<int32, [3]> reduce_mean_14_axes_0 = const()[name = tensor<string, []>("reduce_mean_14_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_14_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_14_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_14_cast = reduce_mean(axes = reduce_mean_14_axes_0, keep_dims = reduce_mean_14_keep_dims_0, x = square_4_cast);
            tensor<fp16, []> add_8_y_0_to_fp16 = const()[name = tensor<string, []>("add_8_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_8_cast = add(x = reduce_mean_14_cast, y = add_8_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_4_cast = sqrt(x = add_8_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> real_div_4_cast = real_div(x = sub_8_cast, y = sqrt_4_cast);
            tensor<int32, [4]> reshape_17_shape_0 = const()[name = tensor<string, []>("reshape_17_shape_0"), val = tensor<int32, [4]>([2, 320, 64, 64])];
            tensor<fp16, [2, 320, 64, 64]> reshape_17_cast = reshape(shape = reshape_17_shape_0, x = real_div_4_cast);
            tensor<fp16, [320]> add_9_mean_0_to_fp16 = const()[name = tensor<string, []>("add_9_mean_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(16401472)))];
            tensor<fp16, [320]> add_9_variance_0_to_fp16 = const()[name = tensor<string, []>("add_9_variance_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(16402176)))];
            tensor<fp16, [320]> add_9_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_9_gamma_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(16402880)))];
            tensor<fp16, [320]> add_9_beta_0_to_fp16 = const()[name = tensor<string, []>("add_9_beta_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(16403584)))];
            tensor<fp16, []> add_9_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_9_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 320, 64, 64]> add_9_cast = batch_norm(beta = add_9_beta_0_to_fp16, epsilon = add_9_epsilon_0_to_fp16, gamma = add_9_gamma_0_to_fp16, mean = add_9_mean_0_to_fp16, variance = add_9_variance_0_to_fp16, x = reshape_17_cast);
            tensor<fp16, [2, 320, 64, 64]> input_47_cast = silu(x = add_9_cast);
            tensor<int32, [2]> var_684 = const()[name = tensor<string, []>("op_684"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_686 = const()[name = tensor<string, []>("op_686"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_21_pad_type_0 = const()[name = tensor<string, []>("hidden_states_21_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_21_pad_0 = const()[name = tensor<string, []>("hidden_states_21_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [320, 320, 3, 3]> down_blocks_0_resnets_1_conv2_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_resnets_1_conv2_weight_to_fp16"), val = tensor<fp16, [320, 320, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(16404288)))];
            tensor<fp16, [320]> down_blocks_0_resnets_1_conv2_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_resnets_1_conv2_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18247552)))];
            tensor<fp16, [2, 320, 64, 64]> hidden_states_21_cast = conv(bias = down_blocks_0_resnets_1_conv2_bias_to_fp16, dilations = var_686, groups = var_115, pad = hidden_states_21_pad_0, pad_type = hidden_states_21_pad_type_0, strides = var_684, weight = down_blocks_0_resnets_1_conv2_weight_to_fp16, x = input_47_cast);
            tensor<fp16, [2, 320, 64, 64]> hidden_states_23_cast = add(x = input_35_cast_1, y = hidden_states_21_cast);
            tensor<int32, [5]> reshape_20_shape_0 = const()[name = tensor<string, []>("reshape_20_shape_0"), val = tensor<int32, [5]>([2, 32, 10, 64, 64])];
            tensor<fp16, [2, 32, 10, 64, 64]> reshape_20_cast = reshape(shape = reshape_20_shape_0, x = hidden_states_23_cast);
            tensor<int32, [3]> reduce_mean_15_axes_0 = const()[name = tensor<string, []>("reduce_mean_15_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_15_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_15_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_15_cast = reduce_mean(axes = reduce_mean_15_axes_0, keep_dims = reduce_mean_15_keep_dims_0, x = reshape_20_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> sub_10_cast = sub(x = reshape_20_cast, y = reduce_mean_15_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> square_5_cast = square(x = sub_10_cast);
            tensor<int32, [3]> reduce_mean_17_axes_0 = const()[name = tensor<string, []>("reduce_mean_17_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_17_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_17_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_17_cast = reduce_mean(axes = reduce_mean_17_axes_0, keep_dims = reduce_mean_17_keep_dims_0, x = square_5_cast);
            tensor<fp16, []> add_10_y_0_to_fp16 = const()[name = tensor<string, []>("add_10_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_10_cast = add(x = reduce_mean_17_cast, y = add_10_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_5_cast = sqrt(x = add_10_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> real_div_5_cast = real_div(x = sub_10_cast, y = sqrt_5_cast);
            tensor<int32, [4]> reshape_21_shape_0 = const()[name = tensor<string, []>("reshape_21_shape_0"), val = tensor<int32, [4]>([2, 320, 64, 64])];
            tensor<fp16, [2, 320, 64, 64]> reshape_21_cast = reshape(shape = reshape_21_shape_0, x = real_div_5_cast);
            tensor<fp16, [320]> add_11_mean_0_to_fp16 = const()[name = tensor<string, []>("add_11_mean_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18248256)))];
            tensor<fp16, [320]> add_11_variance_0_to_fp16 = const()[name = tensor<string, []>("add_11_variance_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18248960)))];
            tensor<fp16, [320]> add_11_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_11_gamma_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18249664)))];
            tensor<fp16, [320]> add_11_beta_0_to_fp16 = const()[name = tensor<string, []>("add_11_beta_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18250368)))];
            tensor<fp16, []> add_11_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_11_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 320, 64, 64]> add_11_cast = batch_norm(beta = add_11_beta_0_to_fp16, epsilon = add_11_epsilon_0_to_fp16, gamma = add_11_gamma_0_to_fp16, mean = add_11_mean_0_to_fp16, variance = add_11_variance_0_to_fp16, x = reshape_21_cast);
            tensor<int32, [2]> var_706 = const()[name = tensor<string, []>("op_706"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_708 = const()[name = tensor<string, []>("op_708"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_25_pad_type_0 = const()[name = tensor<string, []>("hidden_states_25_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_25_pad_0 = const()[name = tensor<string, []>("hidden_states_25_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> down_blocks_0_attentions_1_proj_in_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_1_proj_in_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18251072)))];
            tensor<fp16, [320]> down_blocks_0_attentions_1_proj_in_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_1_proj_in_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18455936)))];
            tensor<fp16, [2, 320, 64, 64]> hidden_states_25_cast = conv(bias = down_blocks_0_attentions_1_proj_in_bias_to_fp16, dilations = var_708, groups = var_115, pad = hidden_states_25_pad_0, pad_type = hidden_states_25_pad_type_0, strides = var_706, weight = down_blocks_0_attentions_1_proj_in_weight_to_fp16, x = add_11_cast);
            tensor<int32, [4]> var_713 = const()[name = tensor<string, []>("op_713"), val = tensor<int32, [4]>([2, 320, 1, 4096])];
            tensor<fp16, [2, 320, 1, 4096]> inputs_7_cast = reshape(shape = var_713, x = hidden_states_25_cast);
            tensor<int32, [1]> var_723 = const()[name = tensor<string, []>("op_723"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> channels_mean_7_cast = reduce_mean(axes = var_723, keep_dims = var_110, x = inputs_7_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_7_cast = sub(x = inputs_7_cast, y = channels_mean_7_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_sq_7_cast = mul(x = zero_mean_7_cast, y = zero_mean_7_cast);
            tensor<int32, [1]> var_727 = const()[name = tensor<string, []>("op_727"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> var_728_cast = reduce_mean(axes = var_727, keep_dims = var_110, x = zero_mean_sq_7_cast);
            tensor<fp16, []> var_729_to_fp16 = const()[name = tensor<string, []>("op_729_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 4096]> var_730_cast = add(x = var_728_cast, y = var_729_to_fp16);
            tensor<fp16, []> denom_7_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_7_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 4096]> denom_7_cast = rsqrt(epsilon = denom_7_epsilon_0_to_fp16, x = var_730_cast);
            tensor<fp16, [2, 320, 1, 4096]> out_7_cast = mul(x = zero_mean_7_cast, y = denom_7_cast);
            tensor<fp16, [1, 320, 1, 1]> var_734_to_fp16 = const()[name = tensor<string, []>("op_734_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18456640)))];
            tensor<fp16, [2, 320, 1, 4096]> var_735_cast = add(x = out_7_cast, y = var_734_to_fp16);
            tensor<fp16, [1, 320, 1, 1]> var_737_to_fp16 = const()[name = tensor<string, []>("op_737_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18457344)))];
            tensor<fp16, [2, 320, 1, 4096]> hidden_states_27_cast = mul(x = var_735_cast, y = var_737_to_fp16);
            tensor<int32, [2]> var_744 = const()[name = tensor<string, []>("op_744"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_746 = const()[name = tensor<string, []>("op_746"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_5_pad_type_0 = const()[name = tensor<string, []>("q_5_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_5_pad_0 = const()[name = tensor<string, []>("q_5_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> down_blocks_0_attentions_1_transformer_blocks_0_attn1_to_q_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_1_transformer_blocks_0_attn1_to_q_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18458048)))];
            tensor<fp16, [2, 320, 1, 4096]> q_5_cast = conv(dilations = var_746, groups = var_115, pad = q_5_pad_0, pad_type = q_5_pad_type_0, strides = var_744, weight = down_blocks_0_attentions_1_transformer_blocks_0_attn1_to_q_weight_to_fp16, x = hidden_states_27_cast);
            tensor<int32, [2]> var_750 = const()[name = tensor<string, []>("op_750"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_752 = const()[name = tensor<string, []>("op_752"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_9_pad_type_0 = const()[name = tensor<string, []>("k_9_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_9_pad_0 = const()[name = tensor<string, []>("k_9_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> down_blocks_0_attentions_1_transformer_blocks_0_attn1_to_k_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_1_transformer_blocks_0_attn1_to_k_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18662912)))];
            tensor<fp16, [2, 320, 1, 4096]> k_9_cast = conv(dilations = var_752, groups = var_115, pad = k_9_pad_0, pad_type = k_9_pad_type_0, strides = var_750, weight = down_blocks_0_attentions_1_transformer_blocks_0_attn1_to_k_weight_to_fp16, x = hidden_states_27_cast);
            tensor<int32, [2]> var_756 = const()[name = tensor<string, []>("op_756"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_758 = const()[name = tensor<string, []>("op_758"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_5_pad_type_0 = const()[name = tensor<string, []>("v_5_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_5_pad_0 = const()[name = tensor<string, []>("v_5_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> down_blocks_0_attentions_1_transformer_blocks_0_attn1_to_v_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_1_transformer_blocks_0_attn1_to_v_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18867776)))];
            tensor<fp16, [2, 320, 1, 4096]> v_5_cast = conv(dilations = var_758, groups = var_115, pad = v_5_pad_0, pad_type = v_5_pad_type_0, strides = var_756, weight = down_blocks_0_attentions_1_transformer_blocks_0_attn1_to_v_weight_to_fp16, x = hidden_states_27_cast);
            tensor<int32, [4]> var_762_begin_0 = const()[name = tensor<string, []>("op_762_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_762_end_0 = const()[name = tensor<string, []>("op_762_end_0"), val = tensor<int32, [4]>([2, 40, 1, 4096])];
            tensor<bool, [4]> var_762_end_mask_0 = const()[name = tensor<string, []>("op_762_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_762_cast = slice_by_index(begin = var_762_begin_0, end = var_762_end_0, end_mask = var_762_end_mask_0, x = q_5_cast);
            tensor<int32, [4]> var_766_begin_0 = const()[name = tensor<string, []>("op_766_begin_0"), val = tensor<int32, [4]>([0, 40, 0, 0])];
            tensor<int32, [4]> var_766_end_0 = const()[name = tensor<string, []>("op_766_end_0"), val = tensor<int32, [4]>([2, 80, 1, 4096])];
            tensor<bool, [4]> var_766_end_mask_0 = const()[name = tensor<string, []>("op_766_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_766_cast = slice_by_index(begin = var_766_begin_0, end = var_766_end_0, end_mask = var_766_end_mask_0, x = q_5_cast);
            tensor<int32, [4]> var_770_begin_0 = const()[name = tensor<string, []>("op_770_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_770_end_0 = const()[name = tensor<string, []>("op_770_end_0"), val = tensor<int32, [4]>([2, 120, 1, 4096])];
            tensor<bool, [4]> var_770_end_mask_0 = const()[name = tensor<string, []>("op_770_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_770_cast = slice_by_index(begin = var_770_begin_0, end = var_770_end_0, end_mask = var_770_end_mask_0, x = q_5_cast);
            tensor<int32, [4]> var_774_begin_0 = const()[name = tensor<string, []>("op_774_begin_0"), val = tensor<int32, [4]>([0, 120, 0, 0])];
            tensor<int32, [4]> var_774_end_0 = const()[name = tensor<string, []>("op_774_end_0"), val = tensor<int32, [4]>([2, 160, 1, 4096])];
            tensor<bool, [4]> var_774_end_mask_0 = const()[name = tensor<string, []>("op_774_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_774_cast = slice_by_index(begin = var_774_begin_0, end = var_774_end_0, end_mask = var_774_end_mask_0, x = q_5_cast);
            tensor<int32, [4]> var_778_begin_0 = const()[name = tensor<string, []>("op_778_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_778_end_0 = const()[name = tensor<string, []>("op_778_end_0"), val = tensor<int32, [4]>([2, 200, 1, 4096])];
            tensor<bool, [4]> var_778_end_mask_0 = const()[name = tensor<string, []>("op_778_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_778_cast = slice_by_index(begin = var_778_begin_0, end = var_778_end_0, end_mask = var_778_end_mask_0, x = q_5_cast);
            tensor<int32, [4]> var_782_begin_0 = const()[name = tensor<string, []>("op_782_begin_0"), val = tensor<int32, [4]>([0, 200, 0, 0])];
            tensor<int32, [4]> var_782_end_0 = const()[name = tensor<string, []>("op_782_end_0"), val = tensor<int32, [4]>([2, 240, 1, 4096])];
            tensor<bool, [4]> var_782_end_mask_0 = const()[name = tensor<string, []>("op_782_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_782_cast = slice_by_index(begin = var_782_begin_0, end = var_782_end_0, end_mask = var_782_end_mask_0, x = q_5_cast);
            tensor<int32, [4]> var_786_begin_0 = const()[name = tensor<string, []>("op_786_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_786_end_0 = const()[name = tensor<string, []>("op_786_end_0"), val = tensor<int32, [4]>([2, 280, 1, 4096])];
            tensor<bool, [4]> var_786_end_mask_0 = const()[name = tensor<string, []>("op_786_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_786_cast = slice_by_index(begin = var_786_begin_0, end = var_786_end_0, end_mask = var_786_end_mask_0, x = q_5_cast);
            tensor<int32, [4]> var_790_begin_0 = const()[name = tensor<string, []>("op_790_begin_0"), val = tensor<int32, [4]>([0, 280, 0, 0])];
            tensor<int32, [4]> var_790_end_0 = const()[name = tensor<string, []>("op_790_end_0"), val = tensor<int32, [4]>([2, 320, 1, 4096])];
            tensor<bool, [4]> var_790_end_mask_0 = const()[name = tensor<string, []>("op_790_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_790_cast = slice_by_index(begin = var_790_begin_0, end = var_790_end_0, end_mask = var_790_end_mask_0, x = q_5_cast);
            tensor<int32, [4]> k_11_perm_0 = const()[name = tensor<string, []>("k_11_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_797_begin_0 = const()[name = tensor<string, []>("op_797_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_797_end_0 = const()[name = tensor<string, []>("op_797_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 40])];
            tensor<bool, [4]> var_797_end_mask_0 = const()[name = tensor<string, []>("op_797_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 320]> transpose_75 = transpose(perm = k_11_perm_0, x = k_9_cast);
            tensor<fp16, [2, 4096, 1, 40]> var_797_cast = slice_by_index(begin = var_797_begin_0, end = var_797_end_0, end_mask = var_797_end_mask_0, x = transpose_75);
            tensor<int32, [4]> var_801_begin_0 = const()[name = tensor<string, []>("op_801_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 40])];
            tensor<int32, [4]> var_801_end_0 = const()[name = tensor<string, []>("op_801_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 80])];
            tensor<bool, [4]> var_801_end_mask_0 = const()[name = tensor<string, []>("op_801_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_801_cast = slice_by_index(begin = var_801_begin_0, end = var_801_end_0, end_mask = var_801_end_mask_0, x = transpose_75);
            tensor<int32, [4]> var_805_begin_0 = const()[name = tensor<string, []>("op_805_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 80])];
            tensor<int32, [4]> var_805_end_0 = const()[name = tensor<string, []>("op_805_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 120])];
            tensor<bool, [4]> var_805_end_mask_0 = const()[name = tensor<string, []>("op_805_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_805_cast = slice_by_index(begin = var_805_begin_0, end = var_805_end_0, end_mask = var_805_end_mask_0, x = transpose_75);
            tensor<int32, [4]> var_809_begin_0 = const()[name = tensor<string, []>("op_809_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 120])];
            tensor<int32, [4]> var_809_end_0 = const()[name = tensor<string, []>("op_809_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 160])];
            tensor<bool, [4]> var_809_end_mask_0 = const()[name = tensor<string, []>("op_809_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_809_cast = slice_by_index(begin = var_809_begin_0, end = var_809_end_0, end_mask = var_809_end_mask_0, x = transpose_75);
            tensor<int32, [4]> var_813_begin_0 = const()[name = tensor<string, []>("op_813_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 160])];
            tensor<int32, [4]> var_813_end_0 = const()[name = tensor<string, []>("op_813_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 200])];
            tensor<bool, [4]> var_813_end_mask_0 = const()[name = tensor<string, []>("op_813_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_813_cast = slice_by_index(begin = var_813_begin_0, end = var_813_end_0, end_mask = var_813_end_mask_0, x = transpose_75);
            tensor<int32, [4]> var_817_begin_0 = const()[name = tensor<string, []>("op_817_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 200])];
            tensor<int32, [4]> var_817_end_0 = const()[name = tensor<string, []>("op_817_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 240])];
            tensor<bool, [4]> var_817_end_mask_0 = const()[name = tensor<string, []>("op_817_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_817_cast = slice_by_index(begin = var_817_begin_0, end = var_817_end_0, end_mask = var_817_end_mask_0, x = transpose_75);
            tensor<int32, [4]> var_821_begin_0 = const()[name = tensor<string, []>("op_821_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 240])];
            tensor<int32, [4]> var_821_end_0 = const()[name = tensor<string, []>("op_821_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 280])];
            tensor<bool, [4]> var_821_end_mask_0 = const()[name = tensor<string, []>("op_821_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_821_cast = slice_by_index(begin = var_821_begin_0, end = var_821_end_0, end_mask = var_821_end_mask_0, x = transpose_75);
            tensor<int32, [4]> var_825_begin_0 = const()[name = tensor<string, []>("op_825_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 280])];
            tensor<int32, [4]> var_825_end_0 = const()[name = tensor<string, []>("op_825_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 320])];
            tensor<bool, [4]> var_825_end_mask_0 = const()[name = tensor<string, []>("op_825_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_825_cast = slice_by_index(begin = var_825_begin_0, end = var_825_end_0, end_mask = var_825_end_mask_0, x = transpose_75);
            tensor<int32, [4]> var_827_begin_0 = const()[name = tensor<string, []>("op_827_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_827_end_0 = const()[name = tensor<string, []>("op_827_end_0"), val = tensor<int32, [4]>([2, 40, 1, 4096])];
            tensor<bool, [4]> var_827_end_mask_0 = const()[name = tensor<string, []>("op_827_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_827_cast = slice_by_index(begin = var_827_begin_0, end = var_827_end_0, end_mask = var_827_end_mask_0, x = v_5_cast);
            tensor<int32, [4]> var_831_begin_0 = const()[name = tensor<string, []>("op_831_begin_0"), val = tensor<int32, [4]>([0, 40, 0, 0])];
            tensor<int32, [4]> var_831_end_0 = const()[name = tensor<string, []>("op_831_end_0"), val = tensor<int32, [4]>([2, 80, 1, 4096])];
            tensor<bool, [4]> var_831_end_mask_0 = const()[name = tensor<string, []>("op_831_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_831_cast = slice_by_index(begin = var_831_begin_0, end = var_831_end_0, end_mask = var_831_end_mask_0, x = v_5_cast);
            tensor<int32, [4]> var_835_begin_0 = const()[name = tensor<string, []>("op_835_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_835_end_0 = const()[name = tensor<string, []>("op_835_end_0"), val = tensor<int32, [4]>([2, 120, 1, 4096])];
            tensor<bool, [4]> var_835_end_mask_0 = const()[name = tensor<string, []>("op_835_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_835_cast = slice_by_index(begin = var_835_begin_0, end = var_835_end_0, end_mask = var_835_end_mask_0, x = v_5_cast);
            tensor<int32, [4]> var_839_begin_0 = const()[name = tensor<string, []>("op_839_begin_0"), val = tensor<int32, [4]>([0, 120, 0, 0])];
            tensor<int32, [4]> var_839_end_0 = const()[name = tensor<string, []>("op_839_end_0"), val = tensor<int32, [4]>([2, 160, 1, 4096])];
            tensor<bool, [4]> var_839_end_mask_0 = const()[name = tensor<string, []>("op_839_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_839_cast = slice_by_index(begin = var_839_begin_0, end = var_839_end_0, end_mask = var_839_end_mask_0, x = v_5_cast);
            tensor<int32, [4]> var_843_begin_0 = const()[name = tensor<string, []>("op_843_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_843_end_0 = const()[name = tensor<string, []>("op_843_end_0"), val = tensor<int32, [4]>([2, 200, 1, 4096])];
            tensor<bool, [4]> var_843_end_mask_0 = const()[name = tensor<string, []>("op_843_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_843_cast = slice_by_index(begin = var_843_begin_0, end = var_843_end_0, end_mask = var_843_end_mask_0, x = v_5_cast);
            tensor<int32, [4]> var_847_begin_0 = const()[name = tensor<string, []>("op_847_begin_0"), val = tensor<int32, [4]>([0, 200, 0, 0])];
            tensor<int32, [4]> var_847_end_0 = const()[name = tensor<string, []>("op_847_end_0"), val = tensor<int32, [4]>([2, 240, 1, 4096])];
            tensor<bool, [4]> var_847_end_mask_0 = const()[name = tensor<string, []>("op_847_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_847_cast = slice_by_index(begin = var_847_begin_0, end = var_847_end_0, end_mask = var_847_end_mask_0, x = v_5_cast);
            tensor<int32, [4]> var_851_begin_0 = const()[name = tensor<string, []>("op_851_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_851_end_0 = const()[name = tensor<string, []>("op_851_end_0"), val = tensor<int32, [4]>([2, 280, 1, 4096])];
            tensor<bool, [4]> var_851_end_mask_0 = const()[name = tensor<string, []>("op_851_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_851_cast = slice_by_index(begin = var_851_begin_0, end = var_851_end_0, end_mask = var_851_end_mask_0, x = v_5_cast);
            tensor<int32, [4]> var_855_begin_0 = const()[name = tensor<string, []>("op_855_begin_0"), val = tensor<int32, [4]>([0, 280, 0, 0])];
            tensor<int32, [4]> var_855_end_0 = const()[name = tensor<string, []>("op_855_end_0"), val = tensor<int32, [4]>([2, 320, 1, 4096])];
            tensor<bool, [4]> var_855_end_mask_0 = const()[name = tensor<string, []>("op_855_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_855_cast = slice_by_index(begin = var_855_begin_0, end = var_855_end_0, end_mask = var_855_end_mask_0, x = v_5_cast);
            tensor<string, []> var_859_equation_0 = const()[name = tensor<string, []>("op_859_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_859_cast = einsum(equation = var_859_equation_0, values = (var_797_cast, var_762_cast));
            tensor<fp16, []> var_860_to_fp16 = const()[name = tensor<string, []>("op_860_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_33_cast = mul(x = var_859_cast, y = var_860_to_fp16);
            tensor<string, []> var_863_equation_0 = const()[name = tensor<string, []>("op_863_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_863_cast = einsum(equation = var_863_equation_0, values = (var_801_cast, var_766_cast));
            tensor<fp16, []> var_864_to_fp16 = const()[name = tensor<string, []>("op_864_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_35_cast = mul(x = var_863_cast, y = var_864_to_fp16);
            tensor<string, []> var_867_equation_0 = const()[name = tensor<string, []>("op_867_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_867_cast = einsum(equation = var_867_equation_0, values = (var_805_cast, var_770_cast));
            tensor<fp16, []> var_868_to_fp16 = const()[name = tensor<string, []>("op_868_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_37_cast = mul(x = var_867_cast, y = var_868_to_fp16);
            tensor<string, []> var_871_equation_0 = const()[name = tensor<string, []>("op_871_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_871_cast = einsum(equation = var_871_equation_0, values = (var_809_cast, var_774_cast));
            tensor<fp16, []> var_872_to_fp16 = const()[name = tensor<string, []>("op_872_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_39_cast = mul(x = var_871_cast, y = var_872_to_fp16);
            tensor<string, []> var_875_equation_0 = const()[name = tensor<string, []>("op_875_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_875_cast = einsum(equation = var_875_equation_0, values = (var_813_cast, var_778_cast));
            tensor<fp16, []> var_876_to_fp16 = const()[name = tensor<string, []>("op_876_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_41_cast = mul(x = var_875_cast, y = var_876_to_fp16);
            tensor<string, []> var_879_equation_0 = const()[name = tensor<string, []>("op_879_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_879_cast = einsum(equation = var_879_equation_0, values = (var_817_cast, var_782_cast));
            tensor<fp16, []> var_880_to_fp16 = const()[name = tensor<string, []>("op_880_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_43_cast = mul(x = var_879_cast, y = var_880_to_fp16);
            tensor<string, []> var_883_equation_0 = const()[name = tensor<string, []>("op_883_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_883_cast = einsum(equation = var_883_equation_0, values = (var_821_cast, var_786_cast));
            tensor<fp16, []> var_884_to_fp16 = const()[name = tensor<string, []>("op_884_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_45_cast = mul(x = var_883_cast, y = var_884_to_fp16);
            tensor<string, []> var_887_equation_0 = const()[name = tensor<string, []>("op_887_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_887_cast = einsum(equation = var_887_equation_0, values = (var_825_cast, var_790_cast));
            tensor<fp16, []> var_888_to_fp16 = const()[name = tensor<string, []>("op_888_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_47_cast = mul(x = var_887_cast, y = var_888_to_fp16);
            tensor<fp16, [2, 4096, 1, 4096]> var_890_cast = softmax(axis = var_115, x = aw_33_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_891_cast = softmax(axis = var_115, x = aw_35_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_892_cast = softmax(axis = var_115, x = aw_37_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_893_cast = softmax(axis = var_115, x = aw_39_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_894_cast = softmax(axis = var_115, x = aw_41_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_895_cast = softmax(axis = var_115, x = aw_43_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_896_cast = softmax(axis = var_115, x = aw_45_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_897_cast = softmax(axis = var_115, x = aw_47_cast);
            tensor<string, []> var_899_equation_0 = const()[name = tensor<string, []>("op_899_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_899_cast = einsum(equation = var_899_equation_0, values = (var_827_cast, var_890_cast));
            tensor<string, []> var_901_equation_0 = const()[name = tensor<string, []>("op_901_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_901_cast = einsum(equation = var_901_equation_0, values = (var_831_cast, var_891_cast));
            tensor<string, []> var_903_equation_0 = const()[name = tensor<string, []>("op_903_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_903_cast = einsum(equation = var_903_equation_0, values = (var_835_cast, var_892_cast));
            tensor<string, []> var_905_equation_0 = const()[name = tensor<string, []>("op_905_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_905_cast = einsum(equation = var_905_equation_0, values = (var_839_cast, var_893_cast));
            tensor<string, []> var_907_equation_0 = const()[name = tensor<string, []>("op_907_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_907_cast = einsum(equation = var_907_equation_0, values = (var_843_cast, var_894_cast));
            tensor<string, []> var_909_equation_0 = const()[name = tensor<string, []>("op_909_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_909_cast = einsum(equation = var_909_equation_0, values = (var_847_cast, var_895_cast));
            tensor<string, []> var_911_equation_0 = const()[name = tensor<string, []>("op_911_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_911_cast = einsum(equation = var_911_equation_0, values = (var_851_cast, var_896_cast));
            tensor<string, []> var_913_equation_0 = const()[name = tensor<string, []>("op_913_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_913_cast = einsum(equation = var_913_equation_0, values = (var_855_cast, var_897_cast));
            tensor<bool, []> input_51_interleave_0 = const()[name = tensor<string, []>("input_51_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 320, 1, 4096]> input_51_cast = concat(axis = var_115, interleave = input_51_interleave_0, values = (var_899_cast, var_901_cast, var_903_cast, var_905_cast, var_907_cast, var_909_cast, var_911_cast, var_913_cast));
            tensor<int32, [2]> var_919 = const()[name = tensor<string, []>("op_919"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_921 = const()[name = tensor<string, []>("op_921"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_923_pad_type_0 = const()[name = tensor<string, []>("op_923_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_923_pad_0 = const()[name = tensor<string, []>("op_923_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> down_blocks_0_attentions_1_transformer_blocks_0_attn1_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_1_transformer_blocks_0_attn1_to_out_0_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19072640)))];
            tensor<fp16, [320]> down_blocks_0_attentions_1_transformer_blocks_0_attn1_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_1_transformer_blocks_0_attn1_to_out_0_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19277504)))];
            tensor<fp16, [2, 320, 1, 4096]> var_923_cast = conv(bias = down_blocks_0_attentions_1_transformer_blocks_0_attn1_to_out_0_bias_to_fp16, dilations = var_921, groups = var_115, pad = var_923_pad_0, pad_type = var_923_pad_type_0, strides = var_919, weight = down_blocks_0_attentions_1_transformer_blocks_0_attn1_to_out_0_weight_to_fp16, x = input_51_cast);
            tensor<fp16, [2, 320, 1, 4096]> inputs_9_cast = add(x = var_923_cast, y = inputs_7_cast);
            tensor<int32, [1]> var_927 = const()[name = tensor<string, []>("op_927"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> channels_mean_9_cast = reduce_mean(axes = var_927, keep_dims = var_110, x = inputs_9_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_9_cast = sub(x = inputs_9_cast, y = channels_mean_9_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_sq_9_cast = mul(x = zero_mean_9_cast, y = zero_mean_9_cast);
            tensor<int32, [1]> var_931 = const()[name = tensor<string, []>("op_931"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> var_932_cast = reduce_mean(axes = var_931, keep_dims = var_110, x = zero_mean_sq_9_cast);
            tensor<fp16, []> var_933_to_fp16 = const()[name = tensor<string, []>("op_933_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 4096]> var_934_cast = add(x = var_932_cast, y = var_933_to_fp16);
            tensor<fp16, []> denom_9_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_9_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 4096]> denom_9_cast = rsqrt(epsilon = denom_9_epsilon_0_to_fp16, x = var_934_cast);
            tensor<fp16, [2, 320, 1, 4096]> out_9_cast = mul(x = zero_mean_9_cast, y = denom_9_cast);
            tensor<fp16, [1, 320, 1, 1]> var_938_to_fp16 = const()[name = tensor<string, []>("op_938_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19278208)))];
            tensor<fp16, [2, 320, 1, 4096]> var_939_cast = add(x = out_9_cast, y = var_938_to_fp16);
            tensor<fp16, [1, 320, 1, 1]> var_941_to_fp16 = const()[name = tensor<string, []>("op_941_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19278912)))];
            tensor<fp16, [2, 320, 1, 4096]> hidden_states_29_cast = mul(x = var_939_cast, y = var_941_to_fp16);
            tensor<int32, [2]> var_948 = const()[name = tensor<string, []>("op_948"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_950 = const()[name = tensor<string, []>("op_950"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_7_pad_type_0 = const()[name = tensor<string, []>("q_7_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_7_pad_0 = const()[name = tensor<string, []>("q_7_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> down_blocks_0_attentions_1_transformer_blocks_0_attn2_to_q_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_1_transformer_blocks_0_attn2_to_q_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19279616)))];
            tensor<fp16, [2, 320, 1, 4096]> q_7_cast = conv(dilations = var_950, groups = var_115, pad = q_7_pad_0, pad_type = q_7_pad_type_0, strides = var_948, weight = down_blocks_0_attentions_1_transformer_blocks_0_attn2_to_q_weight_to_fp16, x = hidden_states_29_cast);
            tensor<int32, [2]> var_954 = const()[name = tensor<string, []>("op_954"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_956 = const()[name = tensor<string, []>("op_956"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_13_pad_type_0 = const()[name = tensor<string, []>("k_13_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_13_pad_0 = const()[name = tensor<string, []>("k_13_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 768, 1, 1]> down_blocks_0_attentions_1_transformer_blocks_0_attn2_to_k_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_1_transformer_blocks_0_attn2_to_k_weight_to_fp16"), val = tensor<fp16, [320, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19484480)))];
            tensor<fp16, [2, 320, 1, 77]> k_13_cast = conv(dilations = var_956, groups = var_115, pad = k_13_pad_0, pad_type = k_13_pad_type_0, strides = var_954, weight = down_blocks_0_attentions_1_transformer_blocks_0_attn2_to_k_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [2]> var_960 = const()[name = tensor<string, []>("op_960"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_962 = const()[name = tensor<string, []>("op_962"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_7_pad_type_0 = const()[name = tensor<string, []>("v_7_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_7_pad_0 = const()[name = tensor<string, []>("v_7_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 768, 1, 1]> down_blocks_0_attentions_1_transformer_blocks_0_attn2_to_v_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_1_transformer_blocks_0_attn2_to_v_weight_to_fp16"), val = tensor<fp16, [320, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19976064)))];
            tensor<fp16, [2, 320, 1, 77]> v_7_cast = conv(dilations = var_962, groups = var_115, pad = v_7_pad_0, pad_type = v_7_pad_type_0, strides = var_960, weight = down_blocks_0_attentions_1_transformer_blocks_0_attn2_to_v_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [4]> var_966_begin_0 = const()[name = tensor<string, []>("op_966_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_966_end_0 = const()[name = tensor<string, []>("op_966_end_0"), val = tensor<int32, [4]>([2, 40, 1, 4096])];
            tensor<bool, [4]> var_966_end_mask_0 = const()[name = tensor<string, []>("op_966_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_966_cast = slice_by_index(begin = var_966_begin_0, end = var_966_end_0, end_mask = var_966_end_mask_0, x = q_7_cast);
            tensor<int32, [4]> var_970_begin_0 = const()[name = tensor<string, []>("op_970_begin_0"), val = tensor<int32, [4]>([0, 40, 0, 0])];
            tensor<int32, [4]> var_970_end_0 = const()[name = tensor<string, []>("op_970_end_0"), val = tensor<int32, [4]>([2, 80, 1, 4096])];
            tensor<bool, [4]> var_970_end_mask_0 = const()[name = tensor<string, []>("op_970_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_970_cast = slice_by_index(begin = var_970_begin_0, end = var_970_end_0, end_mask = var_970_end_mask_0, x = q_7_cast);
            tensor<int32, [4]> var_974_begin_0 = const()[name = tensor<string, []>("op_974_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_974_end_0 = const()[name = tensor<string, []>("op_974_end_0"), val = tensor<int32, [4]>([2, 120, 1, 4096])];
            tensor<bool, [4]> var_974_end_mask_0 = const()[name = tensor<string, []>("op_974_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_974_cast = slice_by_index(begin = var_974_begin_0, end = var_974_end_0, end_mask = var_974_end_mask_0, x = q_7_cast);
            tensor<int32, [4]> var_978_begin_0 = const()[name = tensor<string, []>("op_978_begin_0"), val = tensor<int32, [4]>([0, 120, 0, 0])];
            tensor<int32, [4]> var_978_end_0 = const()[name = tensor<string, []>("op_978_end_0"), val = tensor<int32, [4]>([2, 160, 1, 4096])];
            tensor<bool, [4]> var_978_end_mask_0 = const()[name = tensor<string, []>("op_978_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_978_cast = slice_by_index(begin = var_978_begin_0, end = var_978_end_0, end_mask = var_978_end_mask_0, x = q_7_cast);
            tensor<int32, [4]> var_982_begin_0 = const()[name = tensor<string, []>("op_982_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_982_end_0 = const()[name = tensor<string, []>("op_982_end_0"), val = tensor<int32, [4]>([2, 200, 1, 4096])];
            tensor<bool, [4]> var_982_end_mask_0 = const()[name = tensor<string, []>("op_982_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_982_cast = slice_by_index(begin = var_982_begin_0, end = var_982_end_0, end_mask = var_982_end_mask_0, x = q_7_cast);
            tensor<int32, [4]> var_986_begin_0 = const()[name = tensor<string, []>("op_986_begin_0"), val = tensor<int32, [4]>([0, 200, 0, 0])];
            tensor<int32, [4]> var_986_end_0 = const()[name = tensor<string, []>("op_986_end_0"), val = tensor<int32, [4]>([2, 240, 1, 4096])];
            tensor<bool, [4]> var_986_end_mask_0 = const()[name = tensor<string, []>("op_986_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_986_cast = slice_by_index(begin = var_986_begin_0, end = var_986_end_0, end_mask = var_986_end_mask_0, x = q_7_cast);
            tensor<int32, [4]> var_990_begin_0 = const()[name = tensor<string, []>("op_990_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_990_end_0 = const()[name = tensor<string, []>("op_990_end_0"), val = tensor<int32, [4]>([2, 280, 1, 4096])];
            tensor<bool, [4]> var_990_end_mask_0 = const()[name = tensor<string, []>("op_990_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_990_cast = slice_by_index(begin = var_990_begin_0, end = var_990_end_0, end_mask = var_990_end_mask_0, x = q_7_cast);
            tensor<int32, [4]> var_994_begin_0 = const()[name = tensor<string, []>("op_994_begin_0"), val = tensor<int32, [4]>([0, 280, 0, 0])];
            tensor<int32, [4]> var_994_end_0 = const()[name = tensor<string, []>("op_994_end_0"), val = tensor<int32, [4]>([2, 320, 1, 4096])];
            tensor<bool, [4]> var_994_end_mask_0 = const()[name = tensor<string, []>("op_994_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_994_cast = slice_by_index(begin = var_994_begin_0, end = var_994_end_0, end_mask = var_994_end_mask_0, x = q_7_cast);
            tensor<int32, [4]> k_15_perm_0 = const()[name = tensor<string, []>("k_15_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_1001_begin_0 = const()[name = tensor<string, []>("op_1001_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1001_end_0 = const()[name = tensor<string, []>("op_1001_end_0"), val = tensor<int32, [4]>([2, 77, 1, 40])];
            tensor<bool, [4]> var_1001_end_mask_0 = const()[name = tensor<string, []>("op_1001_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 320]> transpose_74 = transpose(perm = k_15_perm_0, x = k_13_cast);
            tensor<fp16, [2, 77, 1, 40]> var_1001_cast = slice_by_index(begin = var_1001_begin_0, end = var_1001_end_0, end_mask = var_1001_end_mask_0, x = transpose_74);
            tensor<int32, [4]> var_1005_begin_0 = const()[name = tensor<string, []>("op_1005_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 40])];
            tensor<int32, [4]> var_1005_end_0 = const()[name = tensor<string, []>("op_1005_end_0"), val = tensor<int32, [4]>([2, 77, 1, 80])];
            tensor<bool, [4]> var_1005_end_mask_0 = const()[name = tensor<string, []>("op_1005_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_1005_cast = slice_by_index(begin = var_1005_begin_0, end = var_1005_end_0, end_mask = var_1005_end_mask_0, x = transpose_74);
            tensor<int32, [4]> var_1009_begin_0 = const()[name = tensor<string, []>("op_1009_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 80])];
            tensor<int32, [4]> var_1009_end_0 = const()[name = tensor<string, []>("op_1009_end_0"), val = tensor<int32, [4]>([2, 77, 1, 120])];
            tensor<bool, [4]> var_1009_end_mask_0 = const()[name = tensor<string, []>("op_1009_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_1009_cast = slice_by_index(begin = var_1009_begin_0, end = var_1009_end_0, end_mask = var_1009_end_mask_0, x = transpose_74);
            tensor<int32, [4]> var_1013_begin_0 = const()[name = tensor<string, []>("op_1013_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 120])];
            tensor<int32, [4]> var_1013_end_0 = const()[name = tensor<string, []>("op_1013_end_0"), val = tensor<int32, [4]>([2, 77, 1, 160])];
            tensor<bool, [4]> var_1013_end_mask_0 = const()[name = tensor<string, []>("op_1013_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_1013_cast = slice_by_index(begin = var_1013_begin_0, end = var_1013_end_0, end_mask = var_1013_end_mask_0, x = transpose_74);
            tensor<int32, [4]> var_1017_begin_0 = const()[name = tensor<string, []>("op_1017_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 160])];
            tensor<int32, [4]> var_1017_end_0 = const()[name = tensor<string, []>("op_1017_end_0"), val = tensor<int32, [4]>([2, 77, 1, 200])];
            tensor<bool, [4]> var_1017_end_mask_0 = const()[name = tensor<string, []>("op_1017_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_1017_cast = slice_by_index(begin = var_1017_begin_0, end = var_1017_end_0, end_mask = var_1017_end_mask_0, x = transpose_74);
            tensor<int32, [4]> var_1021_begin_0 = const()[name = tensor<string, []>("op_1021_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 200])];
            tensor<int32, [4]> var_1021_end_0 = const()[name = tensor<string, []>("op_1021_end_0"), val = tensor<int32, [4]>([2, 77, 1, 240])];
            tensor<bool, [4]> var_1021_end_mask_0 = const()[name = tensor<string, []>("op_1021_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_1021_cast = slice_by_index(begin = var_1021_begin_0, end = var_1021_end_0, end_mask = var_1021_end_mask_0, x = transpose_74);
            tensor<int32, [4]> var_1025_begin_0 = const()[name = tensor<string, []>("op_1025_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 240])];
            tensor<int32, [4]> var_1025_end_0 = const()[name = tensor<string, []>("op_1025_end_0"), val = tensor<int32, [4]>([2, 77, 1, 280])];
            tensor<bool, [4]> var_1025_end_mask_0 = const()[name = tensor<string, []>("op_1025_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_1025_cast = slice_by_index(begin = var_1025_begin_0, end = var_1025_end_0, end_mask = var_1025_end_mask_0, x = transpose_74);
            tensor<int32, [4]> var_1029_begin_0 = const()[name = tensor<string, []>("op_1029_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 280])];
            tensor<int32, [4]> var_1029_end_0 = const()[name = tensor<string, []>("op_1029_end_0"), val = tensor<int32, [4]>([2, 77, 1, 320])];
            tensor<bool, [4]> var_1029_end_mask_0 = const()[name = tensor<string, []>("op_1029_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_1029_cast = slice_by_index(begin = var_1029_begin_0, end = var_1029_end_0, end_mask = var_1029_end_mask_0, x = transpose_74);
            tensor<int32, [4]> var_1031_begin_0 = const()[name = tensor<string, []>("op_1031_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1031_end_0 = const()[name = tensor<string, []>("op_1031_end_0"), val = tensor<int32, [4]>([2, 40, 1, 77])];
            tensor<bool, [4]> var_1031_end_mask_0 = const()[name = tensor<string, []>("op_1031_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_1031_cast = slice_by_index(begin = var_1031_begin_0, end = var_1031_end_0, end_mask = var_1031_end_mask_0, x = v_7_cast);
            tensor<int32, [4]> var_1035_begin_0 = const()[name = tensor<string, []>("op_1035_begin_0"), val = tensor<int32, [4]>([0, 40, 0, 0])];
            tensor<int32, [4]> var_1035_end_0 = const()[name = tensor<string, []>("op_1035_end_0"), val = tensor<int32, [4]>([2, 80, 1, 77])];
            tensor<bool, [4]> var_1035_end_mask_0 = const()[name = tensor<string, []>("op_1035_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_1035_cast = slice_by_index(begin = var_1035_begin_0, end = var_1035_end_0, end_mask = var_1035_end_mask_0, x = v_7_cast);
            tensor<int32, [4]> var_1039_begin_0 = const()[name = tensor<string, []>("op_1039_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_1039_end_0 = const()[name = tensor<string, []>("op_1039_end_0"), val = tensor<int32, [4]>([2, 120, 1, 77])];
            tensor<bool, [4]> var_1039_end_mask_0 = const()[name = tensor<string, []>("op_1039_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_1039_cast = slice_by_index(begin = var_1039_begin_0, end = var_1039_end_0, end_mask = var_1039_end_mask_0, x = v_7_cast);
            tensor<int32, [4]> var_1043_begin_0 = const()[name = tensor<string, []>("op_1043_begin_0"), val = tensor<int32, [4]>([0, 120, 0, 0])];
            tensor<int32, [4]> var_1043_end_0 = const()[name = tensor<string, []>("op_1043_end_0"), val = tensor<int32, [4]>([2, 160, 1, 77])];
            tensor<bool, [4]> var_1043_end_mask_0 = const()[name = tensor<string, []>("op_1043_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_1043_cast = slice_by_index(begin = var_1043_begin_0, end = var_1043_end_0, end_mask = var_1043_end_mask_0, x = v_7_cast);
            tensor<int32, [4]> var_1047_begin_0 = const()[name = tensor<string, []>("op_1047_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_1047_end_0 = const()[name = tensor<string, []>("op_1047_end_0"), val = tensor<int32, [4]>([2, 200, 1, 77])];
            tensor<bool, [4]> var_1047_end_mask_0 = const()[name = tensor<string, []>("op_1047_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_1047_cast = slice_by_index(begin = var_1047_begin_0, end = var_1047_end_0, end_mask = var_1047_end_mask_0, x = v_7_cast);
            tensor<int32, [4]> var_1051_begin_0 = const()[name = tensor<string, []>("op_1051_begin_0"), val = tensor<int32, [4]>([0, 200, 0, 0])];
            tensor<int32, [4]> var_1051_end_0 = const()[name = tensor<string, []>("op_1051_end_0"), val = tensor<int32, [4]>([2, 240, 1, 77])];
            tensor<bool, [4]> var_1051_end_mask_0 = const()[name = tensor<string, []>("op_1051_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_1051_cast = slice_by_index(begin = var_1051_begin_0, end = var_1051_end_0, end_mask = var_1051_end_mask_0, x = v_7_cast);
            tensor<int32, [4]> var_1055_begin_0 = const()[name = tensor<string, []>("op_1055_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_1055_end_0 = const()[name = tensor<string, []>("op_1055_end_0"), val = tensor<int32, [4]>([2, 280, 1, 77])];
            tensor<bool, [4]> var_1055_end_mask_0 = const()[name = tensor<string, []>("op_1055_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_1055_cast = slice_by_index(begin = var_1055_begin_0, end = var_1055_end_0, end_mask = var_1055_end_mask_0, x = v_7_cast);
            tensor<int32, [4]> var_1059_begin_0 = const()[name = tensor<string, []>("op_1059_begin_0"), val = tensor<int32, [4]>([0, 280, 0, 0])];
            tensor<int32, [4]> var_1059_end_0 = const()[name = tensor<string, []>("op_1059_end_0"), val = tensor<int32, [4]>([2, 320, 1, 77])];
            tensor<bool, [4]> var_1059_end_mask_0 = const()[name = tensor<string, []>("op_1059_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_1059_cast = slice_by_index(begin = var_1059_begin_0, end = var_1059_end_0, end_mask = var_1059_end_mask_0, x = v_7_cast);
            tensor<string, []> var_1063_equation_0 = const()[name = tensor<string, []>("op_1063_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_1063_cast = einsum(equation = var_1063_equation_0, values = (var_1001_cast, var_966_cast));
            tensor<fp16, []> var_1064_to_fp16 = const()[name = tensor<string, []>("op_1064_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_49_cast = mul(x = var_1063_cast, y = var_1064_to_fp16);
            tensor<string, []> var_1067_equation_0 = const()[name = tensor<string, []>("op_1067_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_1067_cast = einsum(equation = var_1067_equation_0, values = (var_1005_cast, var_970_cast));
            tensor<fp16, []> var_1068_to_fp16 = const()[name = tensor<string, []>("op_1068_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_51_cast = mul(x = var_1067_cast, y = var_1068_to_fp16);
            tensor<string, []> var_1071_equation_0 = const()[name = tensor<string, []>("op_1071_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_1071_cast = einsum(equation = var_1071_equation_0, values = (var_1009_cast, var_974_cast));
            tensor<fp16, []> var_1072_to_fp16 = const()[name = tensor<string, []>("op_1072_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_53_cast = mul(x = var_1071_cast, y = var_1072_to_fp16);
            tensor<string, []> var_1075_equation_0 = const()[name = tensor<string, []>("op_1075_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_1075_cast = einsum(equation = var_1075_equation_0, values = (var_1013_cast, var_978_cast));
            tensor<fp16, []> var_1076_to_fp16 = const()[name = tensor<string, []>("op_1076_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_55_cast = mul(x = var_1075_cast, y = var_1076_to_fp16);
            tensor<string, []> var_1079_equation_0 = const()[name = tensor<string, []>("op_1079_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_1079_cast = einsum(equation = var_1079_equation_0, values = (var_1017_cast, var_982_cast));
            tensor<fp16, []> var_1080_to_fp16 = const()[name = tensor<string, []>("op_1080_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_57_cast = mul(x = var_1079_cast, y = var_1080_to_fp16);
            tensor<string, []> var_1083_equation_0 = const()[name = tensor<string, []>("op_1083_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_1083_cast = einsum(equation = var_1083_equation_0, values = (var_1021_cast, var_986_cast));
            tensor<fp16, []> var_1084_to_fp16 = const()[name = tensor<string, []>("op_1084_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_59_cast = mul(x = var_1083_cast, y = var_1084_to_fp16);
            tensor<string, []> var_1087_equation_0 = const()[name = tensor<string, []>("op_1087_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_1087_cast = einsum(equation = var_1087_equation_0, values = (var_1025_cast, var_990_cast));
            tensor<fp16, []> var_1088_to_fp16 = const()[name = tensor<string, []>("op_1088_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_61_cast = mul(x = var_1087_cast, y = var_1088_to_fp16);
            tensor<string, []> var_1091_equation_0 = const()[name = tensor<string, []>("op_1091_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_1091_cast = einsum(equation = var_1091_equation_0, values = (var_1029_cast, var_994_cast));
            tensor<fp16, []> var_1092_to_fp16 = const()[name = tensor<string, []>("op_1092_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_63_cast = mul(x = var_1091_cast, y = var_1092_to_fp16);
            tensor<fp16, [2, 77, 1, 4096]> var_1094_cast = softmax(axis = var_115, x = aw_49_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_1095_cast = softmax(axis = var_115, x = aw_51_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_1096_cast = softmax(axis = var_115, x = aw_53_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_1097_cast = softmax(axis = var_115, x = aw_55_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_1098_cast = softmax(axis = var_115, x = aw_57_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_1099_cast = softmax(axis = var_115, x = aw_59_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_1100_cast = softmax(axis = var_115, x = aw_61_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_1101_cast = softmax(axis = var_115, x = aw_63_cast);
            tensor<string, []> var_1103_equation_0 = const()[name = tensor<string, []>("op_1103_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_1103_cast = einsum(equation = var_1103_equation_0, values = (var_1031_cast, var_1094_cast));
            tensor<string, []> var_1105_equation_0 = const()[name = tensor<string, []>("op_1105_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_1105_cast = einsum(equation = var_1105_equation_0, values = (var_1035_cast, var_1095_cast));
            tensor<string, []> var_1107_equation_0 = const()[name = tensor<string, []>("op_1107_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_1107_cast = einsum(equation = var_1107_equation_0, values = (var_1039_cast, var_1096_cast));
            tensor<string, []> var_1109_equation_0 = const()[name = tensor<string, []>("op_1109_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_1109_cast = einsum(equation = var_1109_equation_0, values = (var_1043_cast, var_1097_cast));
            tensor<string, []> var_1111_equation_0 = const()[name = tensor<string, []>("op_1111_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_1111_cast = einsum(equation = var_1111_equation_0, values = (var_1047_cast, var_1098_cast));
            tensor<string, []> var_1113_equation_0 = const()[name = tensor<string, []>("op_1113_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_1113_cast = einsum(equation = var_1113_equation_0, values = (var_1051_cast, var_1099_cast));
            tensor<string, []> var_1115_equation_0 = const()[name = tensor<string, []>("op_1115_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_1115_cast = einsum(equation = var_1115_equation_0, values = (var_1055_cast, var_1100_cast));
            tensor<string, []> var_1117_equation_0 = const()[name = tensor<string, []>("op_1117_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_1117_cast = einsum(equation = var_1117_equation_0, values = (var_1059_cast, var_1101_cast));
            tensor<bool, []> input_53_interleave_0 = const()[name = tensor<string, []>("input_53_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 320, 1, 4096]> input_53_cast = concat(axis = var_115, interleave = input_53_interleave_0, values = (var_1103_cast, var_1105_cast, var_1107_cast, var_1109_cast, var_1111_cast, var_1113_cast, var_1115_cast, var_1117_cast));
            tensor<int32, [2]> var_1123 = const()[name = tensor<string, []>("op_1123"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1125 = const()[name = tensor<string, []>("op_1125"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_1127_pad_type_0 = const()[name = tensor<string, []>("op_1127_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_1127_pad_0 = const()[name = tensor<string, []>("op_1127_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> down_blocks_0_attentions_1_transformer_blocks_0_attn2_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_1_transformer_blocks_0_attn2_to_out_0_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20467648)))];
            tensor<fp16, [320]> down_blocks_0_attentions_1_transformer_blocks_0_attn2_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_1_transformer_blocks_0_attn2_to_out_0_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20672512)))];
            tensor<fp16, [2, 320, 1, 4096]> var_1127_cast = conv(bias = down_blocks_0_attentions_1_transformer_blocks_0_attn2_to_out_0_bias_to_fp16, dilations = var_1125, groups = var_115, pad = var_1127_pad_0, pad_type = var_1127_pad_type_0, strides = var_1123, weight = down_blocks_0_attentions_1_transformer_blocks_0_attn2_to_out_0_weight_to_fp16, x = input_53_cast);
            tensor<fp16, [2, 320, 1, 4096]> inputs_11_cast = add(x = var_1127_cast, y = inputs_9_cast);
            tensor<int32, [1]> var_1131 = const()[name = tensor<string, []>("op_1131"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> channels_mean_11_cast = reduce_mean(axes = var_1131, keep_dims = var_110, x = inputs_11_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_11_cast = sub(x = inputs_11_cast, y = channels_mean_11_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_sq_11_cast = mul(x = zero_mean_11_cast, y = zero_mean_11_cast);
            tensor<int32, [1]> var_1135 = const()[name = tensor<string, []>("op_1135"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> var_1136_cast = reduce_mean(axes = var_1135, keep_dims = var_110, x = zero_mean_sq_11_cast);
            tensor<fp16, []> var_1137_to_fp16 = const()[name = tensor<string, []>("op_1137_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 4096]> var_1138_cast = add(x = var_1136_cast, y = var_1137_to_fp16);
            tensor<fp16, []> denom_11_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_11_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 4096]> denom_11_cast = rsqrt(epsilon = denom_11_epsilon_0_to_fp16, x = var_1138_cast);
            tensor<fp16, [2, 320, 1, 4096]> out_11_cast = mul(x = zero_mean_11_cast, y = denom_11_cast);
            tensor<fp16, [1, 320, 1, 1]> var_1142_to_fp16 = const()[name = tensor<string, []>("op_1142_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20673216)))];
            tensor<fp16, [2, 320, 1, 4096]> var_1143_cast = add(x = out_11_cast, y = var_1142_to_fp16);
            tensor<fp16, [1, 320, 1, 1]> var_1145_to_fp16 = const()[name = tensor<string, []>("op_1145_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20673920)))];
            tensor<fp16, [2, 320, 1, 4096]> input_55_cast = mul(x = var_1143_cast, y = var_1145_to_fp16);
            tensor<int32, [2]> var_1153 = const()[name = tensor<string, []>("op_1153"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1155 = const()[name = tensor<string, []>("op_1155"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_1157_pad_type_0 = const()[name = tensor<string, []>("op_1157_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_1157_pad_0 = const()[name = tensor<string, []>("op_1157_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [2560, 320, 1, 1]> down_blocks_0_attentions_1_transformer_blocks_0_ff_net_0_proj_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_1_transformer_blocks_0_ff_net_0_proj_weight_to_fp16"), val = tensor<fp16, [2560, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20674624)))];
            tensor<fp16, [2560]> down_blocks_0_attentions_1_transformer_blocks_0_ff_net_0_proj_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_1_transformer_blocks_0_ff_net_0_proj_bias_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(22313088)))];
            tensor<fp16, [2, 2560, 1, 4096]> var_1157_cast = conv(bias = down_blocks_0_attentions_1_transformer_blocks_0_ff_net_0_proj_bias_to_fp16, dilations = var_1155, groups = var_115, pad = var_1157_pad_0, pad_type = var_1157_pad_type_0, strides = var_1153, weight = down_blocks_0_attentions_1_transformer_blocks_0_ff_net_0_proj_weight_to_fp16, x = input_55_cast);
            tensor<int32, [2]> var_1158_split_sizes_0 = const()[name = tensor<string, []>("op_1158_split_sizes_0"), val = tensor<int32, [2]>([1280, 1280])];
            tensor<int32, []> var_1158_axis_0 = const()[name = tensor<string, []>("op_1158_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [2, 1280, 1, 4096]> var_1158_cast_0, tensor<fp16, [2, 1280, 1, 4096]> var_1158_cast_1 = split(axis = var_1158_axis_0, split_sizes = var_1158_split_sizes_0, x = var_1157_cast);
            tensor<string, []> var_1160_mode_0 = const()[name = tensor<string, []>("op_1160_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [2, 1280, 1, 4096]> var_1160_cast = gelu(mode = var_1160_mode_0, x = var_1158_cast_1);
            tensor<fp16, [2, 1280, 1, 4096]> input_57_cast = mul(x = var_1158_cast_0, y = var_1160_cast);
            tensor<int32, [2]> var_1164 = const()[name = tensor<string, []>("op_1164"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1166 = const()[name = tensor<string, []>("op_1166"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_1168_pad_type_0 = const()[name = tensor<string, []>("op_1168_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_1168_pad_0 = const()[name = tensor<string, []>("op_1168_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 1280, 1, 1]> down_blocks_0_attentions_1_transformer_blocks_0_ff_net_2_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_1_transformer_blocks_0_ff_net_2_weight_to_fp16"), val = tensor<fp16, [320, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(22318272)))];
            tensor<fp16, [320]> down_blocks_0_attentions_1_transformer_blocks_0_ff_net_2_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_1_transformer_blocks_0_ff_net_2_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(23137536)))];
            tensor<fp16, [2, 320, 1, 4096]> var_1168_cast = conv(bias = down_blocks_0_attentions_1_transformer_blocks_0_ff_net_2_bias_to_fp16, dilations = var_1166, groups = var_115, pad = var_1168_pad_0, pad_type = var_1168_pad_type_0, strides = var_1164, weight = down_blocks_0_attentions_1_transformer_blocks_0_ff_net_2_weight_to_fp16, x = input_57_cast);
            tensor<fp16, [2, 320, 1, 4096]> hidden_states_33_cast = add(x = var_1168_cast, y = inputs_11_cast);
            tensor<int32, [4]> var_1170 = const()[name = tensor<string, []>("op_1170"), val = tensor<int32, [4]>([2, 320, 64, 64])];
            tensor<fp16, [2, 320, 64, 64]> input_59_cast = reshape(shape = var_1170, x = hidden_states_33_cast);
            tensor<int32, [2]> var_1174 = const()[name = tensor<string, []>("op_1174"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1176 = const()[name = tensor<string, []>("op_1176"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_35_pad_type_0 = const()[name = tensor<string, []>("hidden_states_35_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_35_pad_0 = const()[name = tensor<string, []>("hidden_states_35_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> down_blocks_0_attentions_1_proj_out_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_1_proj_out_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(23138240)))];
            tensor<fp16, [320]> down_blocks_0_attentions_1_proj_out_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_1_proj_out_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(23343104)))];
            tensor<fp16, [2, 320, 64, 64]> hidden_states_35_cast = conv(bias = down_blocks_0_attentions_1_proj_out_bias_to_fp16, dilations = var_1176, groups = var_115, pad = hidden_states_35_pad_0, pad_type = hidden_states_35_pad_type_0, strides = var_1174, weight = down_blocks_0_attentions_1_proj_out_weight_to_fp16, x = input_59_cast);
            tensor<fp16, [2, 320, 64, 64]> input_61_cast_1 = add(x = hidden_states_35_cast, y = hidden_states_23_cast);
            tensor<int32, [2]> var_1183 = const()[name = tensor<string, []>("op_1183"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> var_1185 = const()[name = tensor<string, []>("op_1185"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_63_pad_type_0 = const()[name = tensor<string, []>("input_63_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_63_pad_0 = const()[name = tensor<string, []>("input_63_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [320, 320, 3, 3]> down_blocks_0_downsamplers_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_downsamplers_0_conv_weight_to_fp16"), val = tensor<fp16, [320, 320, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(23343808)))];
            tensor<fp16, [320]> down_blocks_0_downsamplers_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_downsamplers_0_conv_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(25187072)))];
            tensor<fp16, [2, 320, 32, 32]> input_63_cast_1 = conv(bias = down_blocks_0_downsamplers_0_conv_bias_to_fp16, dilations = var_1185, groups = var_115, pad = input_63_pad_0, pad_type = input_63_pad_type_0, strides = var_1183, weight = down_blocks_0_downsamplers_0_conv_weight_to_fp16, x = input_61_cast_1);
            tensor<bool, []> var_1208 = const()[name = tensor<string, []>("op_1208"), val = tensor<bool, []>(true)];
            tensor<int32, []> var_1213 = const()[name = tensor<string, []>("op_1213"), val = tensor<int32, []>(1)];
            tensor<int32, [5]> reshape_24_shape_0 = const()[name = tensor<string, []>("reshape_24_shape_0"), val = tensor<int32, [5]>([2, 32, 10, 32, 32])];
            tensor<fp16, [2, 32, 10, 32, 32]> reshape_24_cast = reshape(shape = reshape_24_shape_0, x = input_63_cast_1);
            tensor<int32, [3]> reduce_mean_18_axes_0 = const()[name = tensor<string, []>("reduce_mean_18_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_18_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_18_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_18_cast = reduce_mean(axes = reduce_mean_18_axes_0, keep_dims = reduce_mean_18_keep_dims_0, x = reshape_24_cast);
            tensor<fp16, [2, 32, 10, 32, 32]> sub_12_cast = sub(x = reshape_24_cast, y = reduce_mean_18_cast);
            tensor<fp16, [2, 32, 10, 32, 32]> square_6_cast = square(x = sub_12_cast);
            tensor<int32, [3]> reduce_mean_20_axes_0 = const()[name = tensor<string, []>("reduce_mean_20_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_20_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_20_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_20_cast = reduce_mean(axes = reduce_mean_20_axes_0, keep_dims = reduce_mean_20_keep_dims_0, x = square_6_cast);
            tensor<fp16, []> add_12_y_0_to_fp16 = const()[name = tensor<string, []>("add_12_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_12_cast = add(x = reduce_mean_20_cast, y = add_12_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_6_cast = sqrt(x = add_12_cast);
            tensor<fp16, [2, 32, 10, 32, 32]> real_div_6_cast = real_div(x = sub_12_cast, y = sqrt_6_cast);
            tensor<int32, [4]> reshape_25_shape_0 = const()[name = tensor<string, []>("reshape_25_shape_0"), val = tensor<int32, [4]>([2, 320, 32, 32])];
            tensor<fp16, [2, 320, 32, 32]> reshape_25_cast = reshape(shape = reshape_25_shape_0, x = real_div_6_cast);
            tensor<fp16, [320]> add_13_mean_0_to_fp16 = const()[name = tensor<string, []>("add_13_mean_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(25187776)))];
            tensor<fp16, [320]> add_13_variance_0_to_fp16 = const()[name = tensor<string, []>("add_13_variance_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(25188480)))];
            tensor<fp16, [320]> add_13_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_13_gamma_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(25189184)))];
            tensor<fp16, [320]> add_13_beta_0_to_fp16 = const()[name = tensor<string, []>("add_13_beta_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(25189888)))];
            tensor<fp16, []> add_13_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_13_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 320, 32, 32]> add_13_cast = batch_norm(beta = add_13_beta_0_to_fp16, epsilon = add_13_epsilon_0_to_fp16, gamma = add_13_gamma_0_to_fp16, mean = add_13_mean_0_to_fp16, variance = add_13_variance_0_to_fp16, x = reshape_25_cast);
            tensor<fp16, [2, 320, 32, 32]> input_67_cast = silu(x = add_13_cast);
            tensor<int32, [2]> var_1236 = const()[name = tensor<string, []>("op_1236"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1238 = const()[name = tensor<string, []>("op_1238"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_37_pad_type_0 = const()[name = tensor<string, []>("hidden_states_37_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_37_pad_0 = const()[name = tensor<string, []>("hidden_states_37_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [640, 320, 3, 3]> down_blocks_1_resnets_0_conv1_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_resnets_0_conv1_weight_to_fp16"), val = tensor<fp16, [640, 320, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(25190592)))];
            tensor<fp16, [640]> down_blocks_1_resnets_0_conv1_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_resnets_0_conv1_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(28877056)))];
            tensor<fp16, [2, 640, 32, 32]> hidden_states_37_cast = conv(bias = down_blocks_1_resnets_0_conv1_bias_to_fp16, dilations = var_1238, groups = var_1213, pad = hidden_states_37_pad_0, pad_type = hidden_states_37_pad_type_0, strides = var_1236, weight = down_blocks_1_resnets_0_conv1_weight_to_fp16, x = input_67_cast);
            tensor<int32, [2]> var_1244 = const()[name = tensor<string, []>("op_1244"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1246 = const()[name = tensor<string, []>("op_1246"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> temb_5_pad_type_0 = const()[name = tensor<string, []>("temb_5_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> temb_5_pad_0 = const()[name = tensor<string, []>("temb_5_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 1280, 1, 1]> down_blocks_1_resnets_0_time_emb_proj_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_resnets_0_time_emb_proj_weight_to_fp16"), val = tensor<fp16, [640, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(28878400)))];
            tensor<fp16, [640]> down_blocks_1_resnets_0_time_emb_proj_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_resnets_0_time_emb_proj_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(30516864)))];
            tensor<fp16, [2, 640, 1, 1]> temb_5_cast = conv(bias = down_blocks_1_resnets_0_time_emb_proj_bias_to_fp16, dilations = var_1246, groups = var_1213, pad = temb_5_pad_0, pad_type = temb_5_pad_type_0, strides = var_1244, weight = down_blocks_1_resnets_0_time_emb_proj_weight_to_fp16, x = input_15_cast_1);
            tensor<fp16, [2, 640, 32, 32]> input_71_cast = add(x = hidden_states_37_cast, y = temb_5_cast);
            tensor<int32, [5]> reshape_28_shape_0 = const()[name = tensor<string, []>("reshape_28_shape_0"), val = tensor<int32, [5]>([2, 32, 20, 32, 32])];
            tensor<fp16, [2, 32, 20, 32, 32]> reshape_28_cast = reshape(shape = reshape_28_shape_0, x = input_71_cast);
            tensor<int32, [3]> reduce_mean_21_axes_0 = const()[name = tensor<string, []>("reduce_mean_21_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_21_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_21_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_21_cast = reduce_mean(axes = reduce_mean_21_axes_0, keep_dims = reduce_mean_21_keep_dims_0, x = reshape_28_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> sub_14_cast = sub(x = reshape_28_cast, y = reduce_mean_21_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> square_7_cast = square(x = sub_14_cast);
            tensor<int32, [3]> reduce_mean_23_axes_0 = const()[name = tensor<string, []>("reduce_mean_23_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_23_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_23_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_23_cast = reduce_mean(axes = reduce_mean_23_axes_0, keep_dims = reduce_mean_23_keep_dims_0, x = square_7_cast);
            tensor<fp16, []> add_14_y_0_to_fp16 = const()[name = tensor<string, []>("add_14_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_14_cast = add(x = reduce_mean_23_cast, y = add_14_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_7_cast = sqrt(x = add_14_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> real_div_7_cast = real_div(x = sub_14_cast, y = sqrt_7_cast);
            tensor<int32, [4]> reshape_29_shape_0 = const()[name = tensor<string, []>("reshape_29_shape_0"), val = tensor<int32, [4]>([2, 640, 32, 32])];
            tensor<fp16, [2, 640, 32, 32]> reshape_29_cast = reshape(shape = reshape_29_shape_0, x = real_div_7_cast);
            tensor<fp16, [640]> add_15_mean_0_to_fp16 = const()[name = tensor<string, []>("add_15_mean_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(30518208)))];
            tensor<fp16, [640]> add_15_variance_0_to_fp16 = const()[name = tensor<string, []>("add_15_variance_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(30519552)))];
            tensor<fp16, [640]> add_15_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_15_gamma_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(30520896)))];
            tensor<fp16, [640]> add_15_beta_0_to_fp16 = const()[name = tensor<string, []>("add_15_beta_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(30522240)))];
            tensor<fp16, []> add_15_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_15_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 640, 32, 32]> add_15_cast = batch_norm(beta = add_15_beta_0_to_fp16, epsilon = add_15_epsilon_0_to_fp16, gamma = add_15_gamma_0_to_fp16, mean = add_15_mean_0_to_fp16, variance = add_15_variance_0_to_fp16, x = reshape_29_cast);
            tensor<fp16, [2, 640, 32, 32]> input_75_cast = silu(x = add_15_cast);
            tensor<int32, [2]> var_1256 = const()[name = tensor<string, []>("op_1256"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1258 = const()[name = tensor<string, []>("op_1258"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_39_pad_type_0 = const()[name = tensor<string, []>("hidden_states_39_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_39_pad_0 = const()[name = tensor<string, []>("hidden_states_39_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [640, 640, 3, 3]> down_blocks_1_resnets_0_conv2_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_resnets_0_conv2_weight_to_fp16"), val = tensor<fp16, [640, 640, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(30523584)))];
            tensor<fp16, [640]> down_blocks_1_resnets_0_conv2_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_resnets_0_conv2_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(37896448)))];
            tensor<fp16, [2, 640, 32, 32]> hidden_states_39_cast = conv(bias = down_blocks_1_resnets_0_conv2_bias_to_fp16, dilations = var_1258, groups = var_1213, pad = hidden_states_39_pad_0, pad_type = hidden_states_39_pad_type_0, strides = var_1256, weight = down_blocks_1_resnets_0_conv2_weight_to_fp16, x = input_75_cast);
            tensor<int32, [2]> var_1263 = const()[name = tensor<string, []>("op_1263"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1265 = const()[name = tensor<string, []>("op_1265"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_1_pad_type_0 = const()[name = tensor<string, []>("x_1_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_1_pad_0 = const()[name = tensor<string, []>("x_1_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 320, 1, 1]> down_blocks_1_resnets_0_conv_shortcut_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_resnets_0_conv_shortcut_weight_to_fp16"), val = tensor<fp16, [640, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(37897792)))];
            tensor<fp16, [640]> down_blocks_1_resnets_0_conv_shortcut_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_resnets_0_conv_shortcut_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(38307456)))];
            tensor<fp16, [2, 640, 32, 32]> x_1_cast = conv(bias = down_blocks_1_resnets_0_conv_shortcut_bias_to_fp16, dilations = var_1265, groups = var_1213, pad = x_1_pad_0, pad_type = x_1_pad_type_0, strides = var_1263, weight = down_blocks_1_resnets_0_conv_shortcut_weight_to_fp16, x = input_63_cast_1);
            tensor<fp16, [2, 640, 32, 32]> hidden_states_41_cast = add(x = x_1_cast, y = hidden_states_39_cast);
            tensor<int32, [5]> reshape_32_shape_0 = const()[name = tensor<string, []>("reshape_32_shape_0"), val = tensor<int32, [5]>([2, 32, 20, 32, 32])];
            tensor<fp16, [2, 32, 20, 32, 32]> reshape_32_cast = reshape(shape = reshape_32_shape_0, x = hidden_states_41_cast);
            tensor<int32, [3]> reduce_mean_24_axes_0 = const()[name = tensor<string, []>("reduce_mean_24_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_24_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_24_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_24_cast = reduce_mean(axes = reduce_mean_24_axes_0, keep_dims = reduce_mean_24_keep_dims_0, x = reshape_32_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> sub_16_cast = sub(x = reshape_32_cast, y = reduce_mean_24_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> square_8_cast = square(x = sub_16_cast);
            tensor<int32, [3]> reduce_mean_26_axes_0 = const()[name = tensor<string, []>("reduce_mean_26_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_26_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_26_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_26_cast = reduce_mean(axes = reduce_mean_26_axes_0, keep_dims = reduce_mean_26_keep_dims_0, x = square_8_cast);
            tensor<fp16, []> add_16_y_0_to_fp16 = const()[name = tensor<string, []>("add_16_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_16_cast = add(x = reduce_mean_26_cast, y = add_16_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_8_cast = sqrt(x = add_16_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> real_div_8_cast = real_div(x = sub_16_cast, y = sqrt_8_cast);
            tensor<int32, [4]> reshape_33_shape_0 = const()[name = tensor<string, []>("reshape_33_shape_0"), val = tensor<int32, [4]>([2, 640, 32, 32])];
            tensor<fp16, [2, 640, 32, 32]> reshape_33_cast = reshape(shape = reshape_33_shape_0, x = real_div_8_cast);
            tensor<fp16, [640]> add_17_mean_0_to_fp16 = const()[name = tensor<string, []>("add_17_mean_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(38308800)))];
            tensor<fp16, [640]> add_17_variance_0_to_fp16 = const()[name = tensor<string, []>("add_17_variance_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(38310144)))];
            tensor<fp16, [640]> add_17_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_17_gamma_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(38311488)))];
            tensor<fp16, [640]> add_17_beta_0_to_fp16 = const()[name = tensor<string, []>("add_17_beta_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(38312832)))];
            tensor<fp16, []> add_17_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_17_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 640, 32, 32]> add_17_cast = batch_norm(beta = add_17_beta_0_to_fp16, epsilon = add_17_epsilon_0_to_fp16, gamma = add_17_gamma_0_to_fp16, mean = add_17_mean_0_to_fp16, variance = add_17_variance_0_to_fp16, x = reshape_33_cast);
            tensor<int32, [2]> var_1285 = const()[name = tensor<string, []>("op_1285"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1287 = const()[name = tensor<string, []>("op_1287"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_43_pad_type_0 = const()[name = tensor<string, []>("hidden_states_43_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_43_pad_0 = const()[name = tensor<string, []>("hidden_states_43_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> down_blocks_1_attentions_0_proj_in_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_0_proj_in_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(38314176)))];
            tensor<fp16, [640]> down_blocks_1_attentions_0_proj_in_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_0_proj_in_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(39133440)))];
            tensor<fp16, [2, 640, 32, 32]> hidden_states_43_cast = conv(bias = down_blocks_1_attentions_0_proj_in_bias_to_fp16, dilations = var_1287, groups = var_1213, pad = hidden_states_43_pad_0, pad_type = hidden_states_43_pad_type_0, strides = var_1285, weight = down_blocks_1_attentions_0_proj_in_weight_to_fp16, x = add_17_cast);
            tensor<int32, [4]> var_1292 = const()[name = tensor<string, []>("op_1292"), val = tensor<int32, [4]>([2, 640, 1, 1024])];
            tensor<fp16, [2, 640, 1, 1024]> inputs_13_cast = reshape(shape = var_1292, x = hidden_states_43_cast);
            tensor<int32, [1]> var_1302 = const()[name = tensor<string, []>("op_1302"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> channels_mean_13_cast = reduce_mean(axes = var_1302, keep_dims = var_1208, x = inputs_13_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_13_cast = sub(x = inputs_13_cast, y = channels_mean_13_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_sq_13_cast = mul(x = zero_mean_13_cast, y = zero_mean_13_cast);
            tensor<int32, [1]> var_1306 = const()[name = tensor<string, []>("op_1306"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> var_1307_cast = reduce_mean(axes = var_1306, keep_dims = var_1208, x = zero_mean_sq_13_cast);
            tensor<fp16, []> var_1308_to_fp16 = const()[name = tensor<string, []>("op_1308_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 1024]> var_1309_cast = add(x = var_1307_cast, y = var_1308_to_fp16);
            tensor<fp16, []> denom_13_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_13_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 1024]> denom_13_cast = rsqrt(epsilon = denom_13_epsilon_0_to_fp16, x = var_1309_cast);
            tensor<fp16, [2, 640, 1, 1024]> out_13_cast = mul(x = zero_mean_13_cast, y = denom_13_cast);
            tensor<fp16, [1, 640, 1, 1]> var_1313_to_fp16 = const()[name = tensor<string, []>("op_1313_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(39134784)))];
            tensor<fp16, [2, 640, 1, 1024]> var_1314_cast = add(x = out_13_cast, y = var_1313_to_fp16);
            tensor<fp16, [1, 640, 1, 1]> var_1316_to_fp16 = const()[name = tensor<string, []>("op_1316_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(39136128)))];
            tensor<fp16, [2, 640, 1, 1024]> hidden_states_45_cast = mul(x = var_1314_cast, y = var_1316_to_fp16);
            tensor<int32, [2]> var_1323 = const()[name = tensor<string, []>("op_1323"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1325 = const()[name = tensor<string, []>("op_1325"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_9_pad_type_0 = const()[name = tensor<string, []>("q_9_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_9_pad_0 = const()[name = tensor<string, []>("q_9_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> down_blocks_1_attentions_0_transformer_blocks_0_attn1_to_q_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_0_transformer_blocks_0_attn1_to_q_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(39137472)))];
            tensor<fp16, [2, 640, 1, 1024]> q_9_cast = conv(dilations = var_1325, groups = var_1213, pad = q_9_pad_0, pad_type = q_9_pad_type_0, strides = var_1323, weight = down_blocks_1_attentions_0_transformer_blocks_0_attn1_to_q_weight_to_fp16, x = hidden_states_45_cast);
            tensor<int32, [2]> var_1329 = const()[name = tensor<string, []>("op_1329"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1331 = const()[name = tensor<string, []>("op_1331"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_17_pad_type_0 = const()[name = tensor<string, []>("k_17_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_17_pad_0 = const()[name = tensor<string, []>("k_17_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> down_blocks_1_attentions_0_transformer_blocks_0_attn1_to_k_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_0_transformer_blocks_0_attn1_to_k_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(39956736)))];
            tensor<fp16, [2, 640, 1, 1024]> k_17_cast = conv(dilations = var_1331, groups = var_1213, pad = k_17_pad_0, pad_type = k_17_pad_type_0, strides = var_1329, weight = down_blocks_1_attentions_0_transformer_blocks_0_attn1_to_k_weight_to_fp16, x = hidden_states_45_cast);
            tensor<int32, [2]> var_1335 = const()[name = tensor<string, []>("op_1335"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1337 = const()[name = tensor<string, []>("op_1337"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_9_pad_type_0 = const()[name = tensor<string, []>("v_9_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_9_pad_0 = const()[name = tensor<string, []>("v_9_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> down_blocks_1_attentions_0_transformer_blocks_0_attn1_to_v_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_0_transformer_blocks_0_attn1_to_v_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(40776000)))];
            tensor<fp16, [2, 640, 1, 1024]> v_9_cast = conv(dilations = var_1337, groups = var_1213, pad = v_9_pad_0, pad_type = v_9_pad_type_0, strides = var_1335, weight = down_blocks_1_attentions_0_transformer_blocks_0_attn1_to_v_weight_to_fp16, x = hidden_states_45_cast);
            tensor<int32, [4]> var_1341_begin_0 = const()[name = tensor<string, []>("op_1341_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1341_end_0 = const()[name = tensor<string, []>("op_1341_end_0"), val = tensor<int32, [4]>([2, 80, 1, 1024])];
            tensor<bool, [4]> var_1341_end_mask_0 = const()[name = tensor<string, []>("op_1341_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1341_cast = slice_by_index(begin = var_1341_begin_0, end = var_1341_end_0, end_mask = var_1341_end_mask_0, x = q_9_cast);
            tensor<int32, [4]> var_1345_begin_0 = const()[name = tensor<string, []>("op_1345_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_1345_end_0 = const()[name = tensor<string, []>("op_1345_end_0"), val = tensor<int32, [4]>([2, 160, 1, 1024])];
            tensor<bool, [4]> var_1345_end_mask_0 = const()[name = tensor<string, []>("op_1345_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1345_cast = slice_by_index(begin = var_1345_begin_0, end = var_1345_end_0, end_mask = var_1345_end_mask_0, x = q_9_cast);
            tensor<int32, [4]> var_1349_begin_0 = const()[name = tensor<string, []>("op_1349_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_1349_end_0 = const()[name = tensor<string, []>("op_1349_end_0"), val = tensor<int32, [4]>([2, 240, 1, 1024])];
            tensor<bool, [4]> var_1349_end_mask_0 = const()[name = tensor<string, []>("op_1349_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1349_cast = slice_by_index(begin = var_1349_begin_0, end = var_1349_end_0, end_mask = var_1349_end_mask_0, x = q_9_cast);
            tensor<int32, [4]> var_1353_begin_0 = const()[name = tensor<string, []>("op_1353_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_1353_end_0 = const()[name = tensor<string, []>("op_1353_end_0"), val = tensor<int32, [4]>([2, 320, 1, 1024])];
            tensor<bool, [4]> var_1353_end_mask_0 = const()[name = tensor<string, []>("op_1353_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1353_cast = slice_by_index(begin = var_1353_begin_0, end = var_1353_end_0, end_mask = var_1353_end_mask_0, x = q_9_cast);
            tensor<int32, [4]> var_1357_begin_0 = const()[name = tensor<string, []>("op_1357_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_1357_end_0 = const()[name = tensor<string, []>("op_1357_end_0"), val = tensor<int32, [4]>([2, 400, 1, 1024])];
            tensor<bool, [4]> var_1357_end_mask_0 = const()[name = tensor<string, []>("op_1357_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1357_cast = slice_by_index(begin = var_1357_begin_0, end = var_1357_end_0, end_mask = var_1357_end_mask_0, x = q_9_cast);
            tensor<int32, [4]> var_1361_begin_0 = const()[name = tensor<string, []>("op_1361_begin_0"), val = tensor<int32, [4]>([0, 400, 0, 0])];
            tensor<int32, [4]> var_1361_end_0 = const()[name = tensor<string, []>("op_1361_end_0"), val = tensor<int32, [4]>([2, 480, 1, 1024])];
            tensor<bool, [4]> var_1361_end_mask_0 = const()[name = tensor<string, []>("op_1361_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1361_cast = slice_by_index(begin = var_1361_begin_0, end = var_1361_end_0, end_mask = var_1361_end_mask_0, x = q_9_cast);
            tensor<int32, [4]> var_1365_begin_0 = const()[name = tensor<string, []>("op_1365_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_1365_end_0 = const()[name = tensor<string, []>("op_1365_end_0"), val = tensor<int32, [4]>([2, 560, 1, 1024])];
            tensor<bool, [4]> var_1365_end_mask_0 = const()[name = tensor<string, []>("op_1365_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1365_cast = slice_by_index(begin = var_1365_begin_0, end = var_1365_end_0, end_mask = var_1365_end_mask_0, x = q_9_cast);
            tensor<int32, [4]> var_1369_begin_0 = const()[name = tensor<string, []>("op_1369_begin_0"), val = tensor<int32, [4]>([0, 560, 0, 0])];
            tensor<int32, [4]> var_1369_end_0 = const()[name = tensor<string, []>("op_1369_end_0"), val = tensor<int32, [4]>([2, 640, 1, 1024])];
            tensor<bool, [4]> var_1369_end_mask_0 = const()[name = tensor<string, []>("op_1369_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1369_cast = slice_by_index(begin = var_1369_begin_0, end = var_1369_end_0, end_mask = var_1369_end_mask_0, x = q_9_cast);
            tensor<int32, [4]> k_19_perm_0 = const()[name = tensor<string, []>("k_19_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_1376_begin_0 = const()[name = tensor<string, []>("op_1376_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1376_end_0 = const()[name = tensor<string, []>("op_1376_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 80])];
            tensor<bool, [4]> var_1376_end_mask_0 = const()[name = tensor<string, []>("op_1376_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 640]> transpose_73 = transpose(perm = k_19_perm_0, x = k_17_cast);
            tensor<fp16, [2, 1024, 1, 80]> var_1376_cast = slice_by_index(begin = var_1376_begin_0, end = var_1376_end_0, end_mask = var_1376_end_mask_0, x = transpose_73);
            tensor<int32, [4]> var_1380_begin_0 = const()[name = tensor<string, []>("op_1380_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 80])];
            tensor<int32, [4]> var_1380_end_0 = const()[name = tensor<string, []>("op_1380_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 160])];
            tensor<bool, [4]> var_1380_end_mask_0 = const()[name = tensor<string, []>("op_1380_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_1380_cast = slice_by_index(begin = var_1380_begin_0, end = var_1380_end_0, end_mask = var_1380_end_mask_0, x = transpose_73);
            tensor<int32, [4]> var_1384_begin_0 = const()[name = tensor<string, []>("op_1384_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 160])];
            tensor<int32, [4]> var_1384_end_0 = const()[name = tensor<string, []>("op_1384_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 240])];
            tensor<bool, [4]> var_1384_end_mask_0 = const()[name = tensor<string, []>("op_1384_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_1384_cast = slice_by_index(begin = var_1384_begin_0, end = var_1384_end_0, end_mask = var_1384_end_mask_0, x = transpose_73);
            tensor<int32, [4]> var_1388_begin_0 = const()[name = tensor<string, []>("op_1388_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 240])];
            tensor<int32, [4]> var_1388_end_0 = const()[name = tensor<string, []>("op_1388_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 320])];
            tensor<bool, [4]> var_1388_end_mask_0 = const()[name = tensor<string, []>("op_1388_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_1388_cast = slice_by_index(begin = var_1388_begin_0, end = var_1388_end_0, end_mask = var_1388_end_mask_0, x = transpose_73);
            tensor<int32, [4]> var_1392_begin_0 = const()[name = tensor<string, []>("op_1392_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_1392_end_0 = const()[name = tensor<string, []>("op_1392_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 400])];
            tensor<bool, [4]> var_1392_end_mask_0 = const()[name = tensor<string, []>("op_1392_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_1392_cast = slice_by_index(begin = var_1392_begin_0, end = var_1392_end_0, end_mask = var_1392_end_mask_0, x = transpose_73);
            tensor<int32, [4]> var_1396_begin_0 = const()[name = tensor<string, []>("op_1396_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 400])];
            tensor<int32, [4]> var_1396_end_0 = const()[name = tensor<string, []>("op_1396_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 480])];
            tensor<bool, [4]> var_1396_end_mask_0 = const()[name = tensor<string, []>("op_1396_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_1396_cast = slice_by_index(begin = var_1396_begin_0, end = var_1396_end_0, end_mask = var_1396_end_mask_0, x = transpose_73);
            tensor<int32, [4]> var_1400_begin_0 = const()[name = tensor<string, []>("op_1400_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 480])];
            tensor<int32, [4]> var_1400_end_0 = const()[name = tensor<string, []>("op_1400_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 560])];
            tensor<bool, [4]> var_1400_end_mask_0 = const()[name = tensor<string, []>("op_1400_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_1400_cast = slice_by_index(begin = var_1400_begin_0, end = var_1400_end_0, end_mask = var_1400_end_mask_0, x = transpose_73);
            tensor<int32, [4]> var_1404_begin_0 = const()[name = tensor<string, []>("op_1404_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 560])];
            tensor<int32, [4]> var_1404_end_0 = const()[name = tensor<string, []>("op_1404_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 640])];
            tensor<bool, [4]> var_1404_end_mask_0 = const()[name = tensor<string, []>("op_1404_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_1404_cast = slice_by_index(begin = var_1404_begin_0, end = var_1404_end_0, end_mask = var_1404_end_mask_0, x = transpose_73);
            tensor<int32, [4]> var_1406_begin_0 = const()[name = tensor<string, []>("op_1406_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1406_end_0 = const()[name = tensor<string, []>("op_1406_end_0"), val = tensor<int32, [4]>([2, 80, 1, 1024])];
            tensor<bool, [4]> var_1406_end_mask_0 = const()[name = tensor<string, []>("op_1406_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1406_cast = slice_by_index(begin = var_1406_begin_0, end = var_1406_end_0, end_mask = var_1406_end_mask_0, x = v_9_cast);
            tensor<int32, [4]> var_1410_begin_0 = const()[name = tensor<string, []>("op_1410_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_1410_end_0 = const()[name = tensor<string, []>("op_1410_end_0"), val = tensor<int32, [4]>([2, 160, 1, 1024])];
            tensor<bool, [4]> var_1410_end_mask_0 = const()[name = tensor<string, []>("op_1410_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1410_cast = slice_by_index(begin = var_1410_begin_0, end = var_1410_end_0, end_mask = var_1410_end_mask_0, x = v_9_cast);
            tensor<int32, [4]> var_1414_begin_0 = const()[name = tensor<string, []>("op_1414_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_1414_end_0 = const()[name = tensor<string, []>("op_1414_end_0"), val = tensor<int32, [4]>([2, 240, 1, 1024])];
            tensor<bool, [4]> var_1414_end_mask_0 = const()[name = tensor<string, []>("op_1414_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1414_cast = slice_by_index(begin = var_1414_begin_0, end = var_1414_end_0, end_mask = var_1414_end_mask_0, x = v_9_cast);
            tensor<int32, [4]> var_1418_begin_0 = const()[name = tensor<string, []>("op_1418_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_1418_end_0 = const()[name = tensor<string, []>("op_1418_end_0"), val = tensor<int32, [4]>([2, 320, 1, 1024])];
            tensor<bool, [4]> var_1418_end_mask_0 = const()[name = tensor<string, []>("op_1418_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1418_cast = slice_by_index(begin = var_1418_begin_0, end = var_1418_end_0, end_mask = var_1418_end_mask_0, x = v_9_cast);
            tensor<int32, [4]> var_1422_begin_0 = const()[name = tensor<string, []>("op_1422_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_1422_end_0 = const()[name = tensor<string, []>("op_1422_end_0"), val = tensor<int32, [4]>([2, 400, 1, 1024])];
            tensor<bool, [4]> var_1422_end_mask_0 = const()[name = tensor<string, []>("op_1422_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1422_cast = slice_by_index(begin = var_1422_begin_0, end = var_1422_end_0, end_mask = var_1422_end_mask_0, x = v_9_cast);
            tensor<int32, [4]> var_1426_begin_0 = const()[name = tensor<string, []>("op_1426_begin_0"), val = tensor<int32, [4]>([0, 400, 0, 0])];
            tensor<int32, [4]> var_1426_end_0 = const()[name = tensor<string, []>("op_1426_end_0"), val = tensor<int32, [4]>([2, 480, 1, 1024])];
            tensor<bool, [4]> var_1426_end_mask_0 = const()[name = tensor<string, []>("op_1426_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1426_cast = slice_by_index(begin = var_1426_begin_0, end = var_1426_end_0, end_mask = var_1426_end_mask_0, x = v_9_cast);
            tensor<int32, [4]> var_1430_begin_0 = const()[name = tensor<string, []>("op_1430_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_1430_end_0 = const()[name = tensor<string, []>("op_1430_end_0"), val = tensor<int32, [4]>([2, 560, 1, 1024])];
            tensor<bool, [4]> var_1430_end_mask_0 = const()[name = tensor<string, []>("op_1430_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1430_cast = slice_by_index(begin = var_1430_begin_0, end = var_1430_end_0, end_mask = var_1430_end_mask_0, x = v_9_cast);
            tensor<int32, [4]> var_1434_begin_0 = const()[name = tensor<string, []>("op_1434_begin_0"), val = tensor<int32, [4]>([0, 560, 0, 0])];
            tensor<int32, [4]> var_1434_end_0 = const()[name = tensor<string, []>("op_1434_end_0"), val = tensor<int32, [4]>([2, 640, 1, 1024])];
            tensor<bool, [4]> var_1434_end_mask_0 = const()[name = tensor<string, []>("op_1434_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1434_cast = slice_by_index(begin = var_1434_begin_0, end = var_1434_end_0, end_mask = var_1434_end_mask_0, x = v_9_cast);
            tensor<string, []> var_1438_equation_0 = const()[name = tensor<string, []>("op_1438_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_1438_cast = einsum(equation = var_1438_equation_0, values = (var_1376_cast, var_1341_cast));
            tensor<fp16, []> var_1439_to_fp16 = const()[name = tensor<string, []>("op_1439_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_65_cast = mul(x = var_1438_cast, y = var_1439_to_fp16);
            tensor<string, []> var_1442_equation_0 = const()[name = tensor<string, []>("op_1442_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_1442_cast = einsum(equation = var_1442_equation_0, values = (var_1380_cast, var_1345_cast));
            tensor<fp16, []> var_1443_to_fp16 = const()[name = tensor<string, []>("op_1443_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_67_cast = mul(x = var_1442_cast, y = var_1443_to_fp16);
            tensor<string, []> var_1446_equation_0 = const()[name = tensor<string, []>("op_1446_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_1446_cast = einsum(equation = var_1446_equation_0, values = (var_1384_cast, var_1349_cast));
            tensor<fp16, []> var_1447_to_fp16 = const()[name = tensor<string, []>("op_1447_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_69_cast = mul(x = var_1446_cast, y = var_1447_to_fp16);
            tensor<string, []> var_1450_equation_0 = const()[name = tensor<string, []>("op_1450_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_1450_cast = einsum(equation = var_1450_equation_0, values = (var_1388_cast, var_1353_cast));
            tensor<fp16, []> var_1451_to_fp16 = const()[name = tensor<string, []>("op_1451_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_71_cast = mul(x = var_1450_cast, y = var_1451_to_fp16);
            tensor<string, []> var_1454_equation_0 = const()[name = tensor<string, []>("op_1454_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_1454_cast = einsum(equation = var_1454_equation_0, values = (var_1392_cast, var_1357_cast));
            tensor<fp16, []> var_1455_to_fp16 = const()[name = tensor<string, []>("op_1455_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_73_cast = mul(x = var_1454_cast, y = var_1455_to_fp16);
            tensor<string, []> var_1458_equation_0 = const()[name = tensor<string, []>("op_1458_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_1458_cast = einsum(equation = var_1458_equation_0, values = (var_1396_cast, var_1361_cast));
            tensor<fp16, []> var_1459_to_fp16 = const()[name = tensor<string, []>("op_1459_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_75_cast = mul(x = var_1458_cast, y = var_1459_to_fp16);
            tensor<string, []> var_1462_equation_0 = const()[name = tensor<string, []>("op_1462_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_1462_cast = einsum(equation = var_1462_equation_0, values = (var_1400_cast, var_1365_cast));
            tensor<fp16, []> var_1463_to_fp16 = const()[name = tensor<string, []>("op_1463_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_77_cast = mul(x = var_1462_cast, y = var_1463_to_fp16);
            tensor<string, []> var_1466_equation_0 = const()[name = tensor<string, []>("op_1466_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_1466_cast = einsum(equation = var_1466_equation_0, values = (var_1404_cast, var_1369_cast));
            tensor<fp16, []> var_1467_to_fp16 = const()[name = tensor<string, []>("op_1467_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_79_cast = mul(x = var_1466_cast, y = var_1467_to_fp16);
            tensor<fp16, [2, 1024, 1, 1024]> var_1469_cast = softmax(axis = var_1213, x = aw_65_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_1470_cast = softmax(axis = var_1213, x = aw_67_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_1471_cast = softmax(axis = var_1213, x = aw_69_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_1472_cast = softmax(axis = var_1213, x = aw_71_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_1473_cast = softmax(axis = var_1213, x = aw_73_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_1474_cast = softmax(axis = var_1213, x = aw_75_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_1475_cast = softmax(axis = var_1213, x = aw_77_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_1476_cast = softmax(axis = var_1213, x = aw_79_cast);
            tensor<string, []> var_1478_equation_0 = const()[name = tensor<string, []>("op_1478_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_1478_cast = einsum(equation = var_1478_equation_0, values = (var_1406_cast, var_1469_cast));
            tensor<string, []> var_1480_equation_0 = const()[name = tensor<string, []>("op_1480_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_1480_cast = einsum(equation = var_1480_equation_0, values = (var_1410_cast, var_1470_cast));
            tensor<string, []> var_1482_equation_0 = const()[name = tensor<string, []>("op_1482_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_1482_cast = einsum(equation = var_1482_equation_0, values = (var_1414_cast, var_1471_cast));
            tensor<string, []> var_1484_equation_0 = const()[name = tensor<string, []>("op_1484_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_1484_cast = einsum(equation = var_1484_equation_0, values = (var_1418_cast, var_1472_cast));
            tensor<string, []> var_1486_equation_0 = const()[name = tensor<string, []>("op_1486_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_1486_cast = einsum(equation = var_1486_equation_0, values = (var_1422_cast, var_1473_cast));
            tensor<string, []> var_1488_equation_0 = const()[name = tensor<string, []>("op_1488_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_1488_cast = einsum(equation = var_1488_equation_0, values = (var_1426_cast, var_1474_cast));
            tensor<string, []> var_1490_equation_0 = const()[name = tensor<string, []>("op_1490_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_1490_cast = einsum(equation = var_1490_equation_0, values = (var_1430_cast, var_1475_cast));
            tensor<string, []> var_1492_equation_0 = const()[name = tensor<string, []>("op_1492_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_1492_cast = einsum(equation = var_1492_equation_0, values = (var_1434_cast, var_1476_cast));
            tensor<bool, []> input_79_interleave_0 = const()[name = tensor<string, []>("input_79_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 640, 1, 1024]> input_79_cast = concat(axis = var_1213, interleave = input_79_interleave_0, values = (var_1478_cast, var_1480_cast, var_1482_cast, var_1484_cast, var_1486_cast, var_1488_cast, var_1490_cast, var_1492_cast));
            tensor<int32, [2]> var_1498 = const()[name = tensor<string, []>("op_1498"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1500 = const()[name = tensor<string, []>("op_1500"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_1502_pad_type_0 = const()[name = tensor<string, []>("op_1502_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_1502_pad_0 = const()[name = tensor<string, []>("op_1502_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> down_blocks_1_attentions_0_transformer_blocks_0_attn1_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_0_transformer_blocks_0_attn1_to_out_0_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(41595264)))];
            tensor<fp16, [640]> down_blocks_1_attentions_0_transformer_blocks_0_attn1_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_0_transformer_blocks_0_attn1_to_out_0_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(42414528)))];
            tensor<fp16, [2, 640, 1, 1024]> var_1502_cast = conv(bias = down_blocks_1_attentions_0_transformer_blocks_0_attn1_to_out_0_bias_to_fp16, dilations = var_1500, groups = var_1213, pad = var_1502_pad_0, pad_type = var_1502_pad_type_0, strides = var_1498, weight = down_blocks_1_attentions_0_transformer_blocks_0_attn1_to_out_0_weight_to_fp16, x = input_79_cast);
            tensor<fp16, [2, 640, 1, 1024]> inputs_15_cast = add(x = var_1502_cast, y = inputs_13_cast);
            tensor<int32, [1]> var_1506 = const()[name = tensor<string, []>("op_1506"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> channels_mean_15_cast = reduce_mean(axes = var_1506, keep_dims = var_1208, x = inputs_15_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_15_cast = sub(x = inputs_15_cast, y = channels_mean_15_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_sq_15_cast = mul(x = zero_mean_15_cast, y = zero_mean_15_cast);
            tensor<int32, [1]> var_1510 = const()[name = tensor<string, []>("op_1510"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> var_1511_cast = reduce_mean(axes = var_1510, keep_dims = var_1208, x = zero_mean_sq_15_cast);
            tensor<fp16, []> var_1512_to_fp16 = const()[name = tensor<string, []>("op_1512_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 1024]> var_1513_cast = add(x = var_1511_cast, y = var_1512_to_fp16);
            tensor<fp16, []> denom_15_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_15_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 1024]> denom_15_cast = rsqrt(epsilon = denom_15_epsilon_0_to_fp16, x = var_1513_cast);
            tensor<fp16, [2, 640, 1, 1024]> out_15_cast = mul(x = zero_mean_15_cast, y = denom_15_cast);
            tensor<fp16, [1, 640, 1, 1]> var_1517_to_fp16 = const()[name = tensor<string, []>("op_1517_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(42415872)))];
            tensor<fp16, [2, 640, 1, 1024]> var_1518_cast = add(x = out_15_cast, y = var_1517_to_fp16);
            tensor<fp16, [1, 640, 1, 1]> var_1520_to_fp16 = const()[name = tensor<string, []>("op_1520_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(42417216)))];
            tensor<fp16, [2, 640, 1, 1024]> hidden_states_47_cast = mul(x = var_1518_cast, y = var_1520_to_fp16);
            tensor<int32, [2]> var_1527 = const()[name = tensor<string, []>("op_1527"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1529 = const()[name = tensor<string, []>("op_1529"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_11_pad_type_0 = const()[name = tensor<string, []>("q_11_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_11_pad_0 = const()[name = tensor<string, []>("q_11_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> down_blocks_1_attentions_0_transformer_blocks_0_attn2_to_q_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_0_transformer_blocks_0_attn2_to_q_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(42418560)))];
            tensor<fp16, [2, 640, 1, 1024]> q_11_cast = conv(dilations = var_1529, groups = var_1213, pad = q_11_pad_0, pad_type = q_11_pad_type_0, strides = var_1527, weight = down_blocks_1_attentions_0_transformer_blocks_0_attn2_to_q_weight_to_fp16, x = hidden_states_47_cast);
            tensor<int32, [2]> var_1533 = const()[name = tensor<string, []>("op_1533"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1535 = const()[name = tensor<string, []>("op_1535"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_21_pad_type_0 = const()[name = tensor<string, []>("k_21_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_21_pad_0 = const()[name = tensor<string, []>("k_21_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 768, 1, 1]> down_blocks_1_attentions_0_transformer_blocks_0_attn2_to_k_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_0_transformer_blocks_0_attn2_to_k_weight_to_fp16"), val = tensor<fp16, [640, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(43237824)))];
            tensor<fp16, [2, 640, 1, 77]> k_21_cast = conv(dilations = var_1535, groups = var_1213, pad = k_21_pad_0, pad_type = k_21_pad_type_0, strides = var_1533, weight = down_blocks_1_attentions_0_transformer_blocks_0_attn2_to_k_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [2]> var_1539 = const()[name = tensor<string, []>("op_1539"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1541 = const()[name = tensor<string, []>("op_1541"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_11_pad_type_0 = const()[name = tensor<string, []>("v_11_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_11_pad_0 = const()[name = tensor<string, []>("v_11_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 768, 1, 1]> down_blocks_1_attentions_0_transformer_blocks_0_attn2_to_v_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_0_transformer_blocks_0_attn2_to_v_weight_to_fp16"), val = tensor<fp16, [640, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(44220928)))];
            tensor<fp16, [2, 640, 1, 77]> v_11_cast = conv(dilations = var_1541, groups = var_1213, pad = v_11_pad_0, pad_type = v_11_pad_type_0, strides = var_1539, weight = down_blocks_1_attentions_0_transformer_blocks_0_attn2_to_v_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [4]> var_1545_begin_0 = const()[name = tensor<string, []>("op_1545_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1545_end_0 = const()[name = tensor<string, []>("op_1545_end_0"), val = tensor<int32, [4]>([2, 80, 1, 1024])];
            tensor<bool, [4]> var_1545_end_mask_0 = const()[name = tensor<string, []>("op_1545_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1545_cast = slice_by_index(begin = var_1545_begin_0, end = var_1545_end_0, end_mask = var_1545_end_mask_0, x = q_11_cast);
            tensor<int32, [4]> var_1549_begin_0 = const()[name = tensor<string, []>("op_1549_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_1549_end_0 = const()[name = tensor<string, []>("op_1549_end_0"), val = tensor<int32, [4]>([2, 160, 1, 1024])];
            tensor<bool, [4]> var_1549_end_mask_0 = const()[name = tensor<string, []>("op_1549_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1549_cast = slice_by_index(begin = var_1549_begin_0, end = var_1549_end_0, end_mask = var_1549_end_mask_0, x = q_11_cast);
            tensor<int32, [4]> var_1553_begin_0 = const()[name = tensor<string, []>("op_1553_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_1553_end_0 = const()[name = tensor<string, []>("op_1553_end_0"), val = tensor<int32, [4]>([2, 240, 1, 1024])];
            tensor<bool, [4]> var_1553_end_mask_0 = const()[name = tensor<string, []>("op_1553_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1553_cast = slice_by_index(begin = var_1553_begin_0, end = var_1553_end_0, end_mask = var_1553_end_mask_0, x = q_11_cast);
            tensor<int32, [4]> var_1557_begin_0 = const()[name = tensor<string, []>("op_1557_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_1557_end_0 = const()[name = tensor<string, []>("op_1557_end_0"), val = tensor<int32, [4]>([2, 320, 1, 1024])];
            tensor<bool, [4]> var_1557_end_mask_0 = const()[name = tensor<string, []>("op_1557_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1557_cast = slice_by_index(begin = var_1557_begin_0, end = var_1557_end_0, end_mask = var_1557_end_mask_0, x = q_11_cast);
            tensor<int32, [4]> var_1561_begin_0 = const()[name = tensor<string, []>("op_1561_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_1561_end_0 = const()[name = tensor<string, []>("op_1561_end_0"), val = tensor<int32, [4]>([2, 400, 1, 1024])];
            tensor<bool, [4]> var_1561_end_mask_0 = const()[name = tensor<string, []>("op_1561_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1561_cast = slice_by_index(begin = var_1561_begin_0, end = var_1561_end_0, end_mask = var_1561_end_mask_0, x = q_11_cast);
            tensor<int32, [4]> var_1565_begin_0 = const()[name = tensor<string, []>("op_1565_begin_0"), val = tensor<int32, [4]>([0, 400, 0, 0])];
            tensor<int32, [4]> var_1565_end_0 = const()[name = tensor<string, []>("op_1565_end_0"), val = tensor<int32, [4]>([2, 480, 1, 1024])];
            tensor<bool, [4]> var_1565_end_mask_0 = const()[name = tensor<string, []>("op_1565_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1565_cast = slice_by_index(begin = var_1565_begin_0, end = var_1565_end_0, end_mask = var_1565_end_mask_0, x = q_11_cast);
            tensor<int32, [4]> var_1569_begin_0 = const()[name = tensor<string, []>("op_1569_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_1569_end_0 = const()[name = tensor<string, []>("op_1569_end_0"), val = tensor<int32, [4]>([2, 560, 1, 1024])];
            tensor<bool, [4]> var_1569_end_mask_0 = const()[name = tensor<string, []>("op_1569_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1569_cast = slice_by_index(begin = var_1569_begin_0, end = var_1569_end_0, end_mask = var_1569_end_mask_0, x = q_11_cast);
            tensor<int32, [4]> var_1573_begin_0 = const()[name = tensor<string, []>("op_1573_begin_0"), val = tensor<int32, [4]>([0, 560, 0, 0])];
            tensor<int32, [4]> var_1573_end_0 = const()[name = tensor<string, []>("op_1573_end_0"), val = tensor<int32, [4]>([2, 640, 1, 1024])];
            tensor<bool, [4]> var_1573_end_mask_0 = const()[name = tensor<string, []>("op_1573_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1573_cast = slice_by_index(begin = var_1573_begin_0, end = var_1573_end_0, end_mask = var_1573_end_mask_0, x = q_11_cast);
            tensor<int32, [4]> k_23_perm_0 = const()[name = tensor<string, []>("k_23_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_1580_begin_0 = const()[name = tensor<string, []>("op_1580_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1580_end_0 = const()[name = tensor<string, []>("op_1580_end_0"), val = tensor<int32, [4]>([2, 77, 1, 80])];
            tensor<bool, [4]> var_1580_end_mask_0 = const()[name = tensor<string, []>("op_1580_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 640]> transpose_72 = transpose(perm = k_23_perm_0, x = k_21_cast);
            tensor<fp16, [2, 77, 1, 80]> var_1580_cast = slice_by_index(begin = var_1580_begin_0, end = var_1580_end_0, end_mask = var_1580_end_mask_0, x = transpose_72);
            tensor<int32, [4]> var_1584_begin_0 = const()[name = tensor<string, []>("op_1584_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 80])];
            tensor<int32, [4]> var_1584_end_0 = const()[name = tensor<string, []>("op_1584_end_0"), val = tensor<int32, [4]>([2, 77, 1, 160])];
            tensor<bool, [4]> var_1584_end_mask_0 = const()[name = tensor<string, []>("op_1584_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_1584_cast = slice_by_index(begin = var_1584_begin_0, end = var_1584_end_0, end_mask = var_1584_end_mask_0, x = transpose_72);
            tensor<int32, [4]> var_1588_begin_0 = const()[name = tensor<string, []>("op_1588_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 160])];
            tensor<int32, [4]> var_1588_end_0 = const()[name = tensor<string, []>("op_1588_end_0"), val = tensor<int32, [4]>([2, 77, 1, 240])];
            tensor<bool, [4]> var_1588_end_mask_0 = const()[name = tensor<string, []>("op_1588_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_1588_cast = slice_by_index(begin = var_1588_begin_0, end = var_1588_end_0, end_mask = var_1588_end_mask_0, x = transpose_72);
            tensor<int32, [4]> var_1592_begin_0 = const()[name = tensor<string, []>("op_1592_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 240])];
            tensor<int32, [4]> var_1592_end_0 = const()[name = tensor<string, []>("op_1592_end_0"), val = tensor<int32, [4]>([2, 77, 1, 320])];
            tensor<bool, [4]> var_1592_end_mask_0 = const()[name = tensor<string, []>("op_1592_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_1592_cast = slice_by_index(begin = var_1592_begin_0, end = var_1592_end_0, end_mask = var_1592_end_mask_0, x = transpose_72);
            tensor<int32, [4]> var_1596_begin_0 = const()[name = tensor<string, []>("op_1596_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_1596_end_0 = const()[name = tensor<string, []>("op_1596_end_0"), val = tensor<int32, [4]>([2, 77, 1, 400])];
            tensor<bool, [4]> var_1596_end_mask_0 = const()[name = tensor<string, []>("op_1596_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_1596_cast = slice_by_index(begin = var_1596_begin_0, end = var_1596_end_0, end_mask = var_1596_end_mask_0, x = transpose_72);
            tensor<int32, [4]> var_1600_begin_0 = const()[name = tensor<string, []>("op_1600_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 400])];
            tensor<int32, [4]> var_1600_end_0 = const()[name = tensor<string, []>("op_1600_end_0"), val = tensor<int32, [4]>([2, 77, 1, 480])];
            tensor<bool, [4]> var_1600_end_mask_0 = const()[name = tensor<string, []>("op_1600_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_1600_cast = slice_by_index(begin = var_1600_begin_0, end = var_1600_end_0, end_mask = var_1600_end_mask_0, x = transpose_72);
            tensor<int32, [4]> var_1604_begin_0 = const()[name = tensor<string, []>("op_1604_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 480])];
            tensor<int32, [4]> var_1604_end_0 = const()[name = tensor<string, []>("op_1604_end_0"), val = tensor<int32, [4]>([2, 77, 1, 560])];
            tensor<bool, [4]> var_1604_end_mask_0 = const()[name = tensor<string, []>("op_1604_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_1604_cast = slice_by_index(begin = var_1604_begin_0, end = var_1604_end_0, end_mask = var_1604_end_mask_0, x = transpose_72);
            tensor<int32, [4]> var_1608_begin_0 = const()[name = tensor<string, []>("op_1608_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 560])];
            tensor<int32, [4]> var_1608_end_0 = const()[name = tensor<string, []>("op_1608_end_0"), val = tensor<int32, [4]>([2, 77, 1, 640])];
            tensor<bool, [4]> var_1608_end_mask_0 = const()[name = tensor<string, []>("op_1608_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_1608_cast = slice_by_index(begin = var_1608_begin_0, end = var_1608_end_0, end_mask = var_1608_end_mask_0, x = transpose_72);
            tensor<int32, [4]> var_1610_begin_0 = const()[name = tensor<string, []>("op_1610_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1610_end_0 = const()[name = tensor<string, []>("op_1610_end_0"), val = tensor<int32, [4]>([2, 80, 1, 77])];
            tensor<bool, [4]> var_1610_end_mask_0 = const()[name = tensor<string, []>("op_1610_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_1610_cast = slice_by_index(begin = var_1610_begin_0, end = var_1610_end_0, end_mask = var_1610_end_mask_0, x = v_11_cast);
            tensor<int32, [4]> var_1614_begin_0 = const()[name = tensor<string, []>("op_1614_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_1614_end_0 = const()[name = tensor<string, []>("op_1614_end_0"), val = tensor<int32, [4]>([2, 160, 1, 77])];
            tensor<bool, [4]> var_1614_end_mask_0 = const()[name = tensor<string, []>("op_1614_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_1614_cast = slice_by_index(begin = var_1614_begin_0, end = var_1614_end_0, end_mask = var_1614_end_mask_0, x = v_11_cast);
            tensor<int32, [4]> var_1618_begin_0 = const()[name = tensor<string, []>("op_1618_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_1618_end_0 = const()[name = tensor<string, []>("op_1618_end_0"), val = tensor<int32, [4]>([2, 240, 1, 77])];
            tensor<bool, [4]> var_1618_end_mask_0 = const()[name = tensor<string, []>("op_1618_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_1618_cast = slice_by_index(begin = var_1618_begin_0, end = var_1618_end_0, end_mask = var_1618_end_mask_0, x = v_11_cast);
            tensor<int32, [4]> var_1622_begin_0 = const()[name = tensor<string, []>("op_1622_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_1622_end_0 = const()[name = tensor<string, []>("op_1622_end_0"), val = tensor<int32, [4]>([2, 320, 1, 77])];
            tensor<bool, [4]> var_1622_end_mask_0 = const()[name = tensor<string, []>("op_1622_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_1622_cast = slice_by_index(begin = var_1622_begin_0, end = var_1622_end_0, end_mask = var_1622_end_mask_0, x = v_11_cast);
            tensor<int32, [4]> var_1626_begin_0 = const()[name = tensor<string, []>("op_1626_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_1626_end_0 = const()[name = tensor<string, []>("op_1626_end_0"), val = tensor<int32, [4]>([2, 400, 1, 77])];
            tensor<bool, [4]> var_1626_end_mask_0 = const()[name = tensor<string, []>("op_1626_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_1626_cast = slice_by_index(begin = var_1626_begin_0, end = var_1626_end_0, end_mask = var_1626_end_mask_0, x = v_11_cast);
            tensor<int32, [4]> var_1630_begin_0 = const()[name = tensor<string, []>("op_1630_begin_0"), val = tensor<int32, [4]>([0, 400, 0, 0])];
            tensor<int32, [4]> var_1630_end_0 = const()[name = tensor<string, []>("op_1630_end_0"), val = tensor<int32, [4]>([2, 480, 1, 77])];
            tensor<bool, [4]> var_1630_end_mask_0 = const()[name = tensor<string, []>("op_1630_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_1630_cast = slice_by_index(begin = var_1630_begin_0, end = var_1630_end_0, end_mask = var_1630_end_mask_0, x = v_11_cast);
            tensor<int32, [4]> var_1634_begin_0 = const()[name = tensor<string, []>("op_1634_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_1634_end_0 = const()[name = tensor<string, []>("op_1634_end_0"), val = tensor<int32, [4]>([2, 560, 1, 77])];
            tensor<bool, [4]> var_1634_end_mask_0 = const()[name = tensor<string, []>("op_1634_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_1634_cast = slice_by_index(begin = var_1634_begin_0, end = var_1634_end_0, end_mask = var_1634_end_mask_0, x = v_11_cast);
            tensor<int32, [4]> var_1638_begin_0 = const()[name = tensor<string, []>("op_1638_begin_0"), val = tensor<int32, [4]>([0, 560, 0, 0])];
            tensor<int32, [4]> var_1638_end_0 = const()[name = tensor<string, []>("op_1638_end_0"), val = tensor<int32, [4]>([2, 640, 1, 77])];
            tensor<bool, [4]> var_1638_end_mask_0 = const()[name = tensor<string, []>("op_1638_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_1638_cast = slice_by_index(begin = var_1638_begin_0, end = var_1638_end_0, end_mask = var_1638_end_mask_0, x = v_11_cast);
            tensor<string, []> var_1642_equation_0 = const()[name = tensor<string, []>("op_1642_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_1642_cast = einsum(equation = var_1642_equation_0, values = (var_1580_cast, var_1545_cast));
            tensor<fp16, []> var_1643_to_fp16 = const()[name = tensor<string, []>("op_1643_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_81_cast = mul(x = var_1642_cast, y = var_1643_to_fp16);
            tensor<string, []> var_1646_equation_0 = const()[name = tensor<string, []>("op_1646_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_1646_cast = einsum(equation = var_1646_equation_0, values = (var_1584_cast, var_1549_cast));
            tensor<fp16, []> var_1647_to_fp16 = const()[name = tensor<string, []>("op_1647_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_83_cast = mul(x = var_1646_cast, y = var_1647_to_fp16);
            tensor<string, []> var_1650_equation_0 = const()[name = tensor<string, []>("op_1650_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_1650_cast = einsum(equation = var_1650_equation_0, values = (var_1588_cast, var_1553_cast));
            tensor<fp16, []> var_1651_to_fp16 = const()[name = tensor<string, []>("op_1651_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_85_cast = mul(x = var_1650_cast, y = var_1651_to_fp16);
            tensor<string, []> var_1654_equation_0 = const()[name = tensor<string, []>("op_1654_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_1654_cast = einsum(equation = var_1654_equation_0, values = (var_1592_cast, var_1557_cast));
            tensor<fp16, []> var_1655_to_fp16 = const()[name = tensor<string, []>("op_1655_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_87_cast = mul(x = var_1654_cast, y = var_1655_to_fp16);
            tensor<string, []> var_1658_equation_0 = const()[name = tensor<string, []>("op_1658_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_1658_cast = einsum(equation = var_1658_equation_0, values = (var_1596_cast, var_1561_cast));
            tensor<fp16, []> var_1659_to_fp16 = const()[name = tensor<string, []>("op_1659_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_89_cast = mul(x = var_1658_cast, y = var_1659_to_fp16);
            tensor<string, []> var_1662_equation_0 = const()[name = tensor<string, []>("op_1662_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_1662_cast = einsum(equation = var_1662_equation_0, values = (var_1600_cast, var_1565_cast));
            tensor<fp16, []> var_1663_to_fp16 = const()[name = tensor<string, []>("op_1663_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_91_cast = mul(x = var_1662_cast, y = var_1663_to_fp16);
            tensor<string, []> var_1666_equation_0 = const()[name = tensor<string, []>("op_1666_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_1666_cast = einsum(equation = var_1666_equation_0, values = (var_1604_cast, var_1569_cast));
            tensor<fp16, []> var_1667_to_fp16 = const()[name = tensor<string, []>("op_1667_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_93_cast = mul(x = var_1666_cast, y = var_1667_to_fp16);
            tensor<string, []> var_1670_equation_0 = const()[name = tensor<string, []>("op_1670_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_1670_cast = einsum(equation = var_1670_equation_0, values = (var_1608_cast, var_1573_cast));
            tensor<fp16, []> var_1671_to_fp16 = const()[name = tensor<string, []>("op_1671_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_95_cast = mul(x = var_1670_cast, y = var_1671_to_fp16);
            tensor<fp16, [2, 77, 1, 1024]> var_1673_cast = softmax(axis = var_1213, x = aw_81_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_1674_cast = softmax(axis = var_1213, x = aw_83_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_1675_cast = softmax(axis = var_1213, x = aw_85_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_1676_cast = softmax(axis = var_1213, x = aw_87_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_1677_cast = softmax(axis = var_1213, x = aw_89_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_1678_cast = softmax(axis = var_1213, x = aw_91_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_1679_cast = softmax(axis = var_1213, x = aw_93_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_1680_cast = softmax(axis = var_1213, x = aw_95_cast);
            tensor<string, []> var_1682_equation_0 = const()[name = tensor<string, []>("op_1682_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_1682_cast = einsum(equation = var_1682_equation_0, values = (var_1610_cast, var_1673_cast));
            tensor<string, []> var_1684_equation_0 = const()[name = tensor<string, []>("op_1684_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_1684_cast = einsum(equation = var_1684_equation_0, values = (var_1614_cast, var_1674_cast));
            tensor<string, []> var_1686_equation_0 = const()[name = tensor<string, []>("op_1686_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_1686_cast = einsum(equation = var_1686_equation_0, values = (var_1618_cast, var_1675_cast));
            tensor<string, []> var_1688_equation_0 = const()[name = tensor<string, []>("op_1688_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_1688_cast = einsum(equation = var_1688_equation_0, values = (var_1622_cast, var_1676_cast));
            tensor<string, []> var_1690_equation_0 = const()[name = tensor<string, []>("op_1690_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_1690_cast = einsum(equation = var_1690_equation_0, values = (var_1626_cast, var_1677_cast));
            tensor<string, []> var_1692_equation_0 = const()[name = tensor<string, []>("op_1692_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_1692_cast = einsum(equation = var_1692_equation_0, values = (var_1630_cast, var_1678_cast));
            tensor<string, []> var_1694_equation_0 = const()[name = tensor<string, []>("op_1694_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_1694_cast = einsum(equation = var_1694_equation_0, values = (var_1634_cast, var_1679_cast));
            tensor<string, []> var_1696_equation_0 = const()[name = tensor<string, []>("op_1696_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_1696_cast = einsum(equation = var_1696_equation_0, values = (var_1638_cast, var_1680_cast));
            tensor<bool, []> input_81_interleave_0 = const()[name = tensor<string, []>("input_81_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 640, 1, 1024]> input_81_cast = concat(axis = var_1213, interleave = input_81_interleave_0, values = (var_1682_cast, var_1684_cast, var_1686_cast, var_1688_cast, var_1690_cast, var_1692_cast, var_1694_cast, var_1696_cast));
            tensor<int32, [2]> var_1702 = const()[name = tensor<string, []>("op_1702"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1704 = const()[name = tensor<string, []>("op_1704"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_1706_pad_type_0 = const()[name = tensor<string, []>("op_1706_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_1706_pad_0 = const()[name = tensor<string, []>("op_1706_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> down_blocks_1_attentions_0_transformer_blocks_0_attn2_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_0_transformer_blocks_0_attn2_to_out_0_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(45204032)))];
            tensor<fp16, [640]> down_blocks_1_attentions_0_transformer_blocks_0_attn2_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_0_transformer_blocks_0_attn2_to_out_0_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(46023296)))];
            tensor<fp16, [2, 640, 1, 1024]> var_1706_cast = conv(bias = down_blocks_1_attentions_0_transformer_blocks_0_attn2_to_out_0_bias_to_fp16, dilations = var_1704, groups = var_1213, pad = var_1706_pad_0, pad_type = var_1706_pad_type_0, strides = var_1702, weight = down_blocks_1_attentions_0_transformer_blocks_0_attn2_to_out_0_weight_to_fp16, x = input_81_cast);
            tensor<fp16, [2, 640, 1, 1024]> inputs_17_cast = add(x = var_1706_cast, y = inputs_15_cast);
            tensor<int32, [1]> var_1710 = const()[name = tensor<string, []>("op_1710"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> channels_mean_17_cast = reduce_mean(axes = var_1710, keep_dims = var_1208, x = inputs_17_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_17_cast = sub(x = inputs_17_cast, y = channels_mean_17_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_sq_17_cast = mul(x = zero_mean_17_cast, y = zero_mean_17_cast);
            tensor<int32, [1]> var_1714 = const()[name = tensor<string, []>("op_1714"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> var_1715_cast = reduce_mean(axes = var_1714, keep_dims = var_1208, x = zero_mean_sq_17_cast);
            tensor<fp16, []> var_1716_to_fp16 = const()[name = tensor<string, []>("op_1716_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 1024]> var_1717_cast = add(x = var_1715_cast, y = var_1716_to_fp16);
            tensor<fp16, []> denom_17_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_17_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 1024]> denom_17_cast = rsqrt(epsilon = denom_17_epsilon_0_to_fp16, x = var_1717_cast);
            tensor<fp16, [2, 640, 1, 1024]> out_17_cast = mul(x = zero_mean_17_cast, y = denom_17_cast);
            tensor<fp16, [1, 640, 1, 1]> var_1721_to_fp16 = const()[name = tensor<string, []>("op_1721_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(46024640)))];
            tensor<fp16, [2, 640, 1, 1024]> var_1722_cast = add(x = out_17_cast, y = var_1721_to_fp16);
            tensor<fp16, [1, 640, 1, 1]> var_1724_to_fp16 = const()[name = tensor<string, []>("op_1724_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(46025984)))];
            tensor<fp16, [2, 640, 1, 1024]> input_83_cast = mul(x = var_1722_cast, y = var_1724_to_fp16);
            tensor<int32, [2]> var_1732 = const()[name = tensor<string, []>("op_1732"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1734 = const()[name = tensor<string, []>("op_1734"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_1736_pad_type_0 = const()[name = tensor<string, []>("op_1736_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_1736_pad_0 = const()[name = tensor<string, []>("op_1736_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [5120, 640, 1, 1]> down_blocks_1_attentions_0_transformer_blocks_0_ff_net_0_proj_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_0_transformer_blocks_0_ff_net_0_proj_weight_to_fp16"), val = tensor<fp16, [5120, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(46027328)))];
            tensor<fp16, [5120]> down_blocks_1_attentions_0_transformer_blocks_0_ff_net_0_proj_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_0_transformer_blocks_0_ff_net_0_proj_bias_to_fp16"), val = tensor<fp16, [5120]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(52580992)))];
            tensor<fp16, [2, 5120, 1, 1024]> var_1736_cast = conv(bias = down_blocks_1_attentions_0_transformer_blocks_0_ff_net_0_proj_bias_to_fp16, dilations = var_1734, groups = var_1213, pad = var_1736_pad_0, pad_type = var_1736_pad_type_0, strides = var_1732, weight = down_blocks_1_attentions_0_transformer_blocks_0_ff_net_0_proj_weight_to_fp16, x = input_83_cast);
            tensor<int32, [2]> var_1737_split_sizes_0 = const()[name = tensor<string, []>("op_1737_split_sizes_0"), val = tensor<int32, [2]>([2560, 2560])];
            tensor<int32, []> var_1737_axis_0 = const()[name = tensor<string, []>("op_1737_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [2, 2560, 1, 1024]> var_1737_cast_0, tensor<fp16, [2, 2560, 1, 1024]> var_1737_cast_1 = split(axis = var_1737_axis_0, split_sizes = var_1737_split_sizes_0, x = var_1736_cast);
            tensor<string, []> var_1739_mode_0 = const()[name = tensor<string, []>("op_1739_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [2, 2560, 1, 1024]> var_1739_cast = gelu(mode = var_1739_mode_0, x = var_1737_cast_1);
            tensor<fp16, [2, 2560, 1, 1024]> input_85_cast = mul(x = var_1737_cast_0, y = var_1739_cast);
            tensor<int32, [2]> var_1743 = const()[name = tensor<string, []>("op_1743"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1745 = const()[name = tensor<string, []>("op_1745"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_1747_pad_type_0 = const()[name = tensor<string, []>("op_1747_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_1747_pad_0 = const()[name = tensor<string, []>("op_1747_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 2560, 1, 1]> down_blocks_1_attentions_0_transformer_blocks_0_ff_net_2_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_0_transformer_blocks_0_ff_net_2_weight_to_fp16"), val = tensor<fp16, [640, 2560, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(52591296)))];
            tensor<fp16, [640]> down_blocks_1_attentions_0_transformer_blocks_0_ff_net_2_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_0_transformer_blocks_0_ff_net_2_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(55868160)))];
            tensor<fp16, [2, 640, 1, 1024]> var_1747_cast = conv(bias = down_blocks_1_attentions_0_transformer_blocks_0_ff_net_2_bias_to_fp16, dilations = var_1745, groups = var_1213, pad = var_1747_pad_0, pad_type = var_1747_pad_type_0, strides = var_1743, weight = down_blocks_1_attentions_0_transformer_blocks_0_ff_net_2_weight_to_fp16, x = input_85_cast);
            tensor<fp16, [2, 640, 1, 1024]> hidden_states_51_cast = add(x = var_1747_cast, y = inputs_17_cast);
            tensor<int32, [4]> var_1749 = const()[name = tensor<string, []>("op_1749"), val = tensor<int32, [4]>([2, 640, 32, 32])];
            tensor<fp16, [2, 640, 32, 32]> input_87_cast = reshape(shape = var_1749, x = hidden_states_51_cast);
            tensor<int32, [2]> var_1753 = const()[name = tensor<string, []>("op_1753"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1755 = const()[name = tensor<string, []>("op_1755"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_53_pad_type_0 = const()[name = tensor<string, []>("hidden_states_53_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_53_pad_0 = const()[name = tensor<string, []>("hidden_states_53_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> down_blocks_1_attentions_0_proj_out_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_0_proj_out_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(55869504)))];
            tensor<fp16, [640]> down_blocks_1_attentions_0_proj_out_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_0_proj_out_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(56688768)))];
            tensor<fp16, [2, 640, 32, 32]> hidden_states_53_cast = conv(bias = down_blocks_1_attentions_0_proj_out_bias_to_fp16, dilations = var_1755, groups = var_1213, pad = hidden_states_53_pad_0, pad_type = hidden_states_53_pad_type_0, strides = var_1753, weight = down_blocks_1_attentions_0_proj_out_weight_to_fp16, x = input_87_cast);
            tensor<fp16, [2, 640, 32, 32]> input_89_cast_1 = add(x = hidden_states_53_cast, y = hidden_states_41_cast);
            tensor<int32, [5]> reshape_36_shape_0 = const()[name = tensor<string, []>("reshape_36_shape_0"), val = tensor<int32, [5]>([2, 32, 20, 32, 32])];
            tensor<fp16, [2, 32, 20, 32, 32]> reshape_36_cast = reshape(shape = reshape_36_shape_0, x = input_89_cast_1);
            tensor<int32, [3]> reduce_mean_27_axes_0 = const()[name = tensor<string, []>("reduce_mean_27_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_27_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_27_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_27_cast = reduce_mean(axes = reduce_mean_27_axes_0, keep_dims = reduce_mean_27_keep_dims_0, x = reshape_36_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> sub_18_cast = sub(x = reshape_36_cast, y = reduce_mean_27_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> square_9_cast = square(x = sub_18_cast);
            tensor<int32, [3]> reduce_mean_29_axes_0 = const()[name = tensor<string, []>("reduce_mean_29_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_29_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_29_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_29_cast = reduce_mean(axes = reduce_mean_29_axes_0, keep_dims = reduce_mean_29_keep_dims_0, x = square_9_cast);
            tensor<fp16, []> add_18_y_0_to_fp16 = const()[name = tensor<string, []>("add_18_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_18_cast = add(x = reduce_mean_29_cast, y = add_18_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_9_cast = sqrt(x = add_18_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> real_div_9_cast = real_div(x = sub_18_cast, y = sqrt_9_cast);
            tensor<int32, [4]> reshape_37_shape_0 = const()[name = tensor<string, []>("reshape_37_shape_0"), val = tensor<int32, [4]>([2, 640, 32, 32])];
            tensor<fp16, [2, 640, 32, 32]> reshape_37_cast = reshape(shape = reshape_37_shape_0, x = real_div_9_cast);
            tensor<fp16, [640]> add_19_mean_0_to_fp16 = const()[name = tensor<string, []>("add_19_mean_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(56690112)))];
            tensor<fp16, [640]> add_19_variance_0_to_fp16 = const()[name = tensor<string, []>("add_19_variance_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(56691456)))];
            tensor<fp16, [640]> add_19_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_19_gamma_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(56692800)))];
            tensor<fp16, [640]> add_19_beta_0_to_fp16 = const()[name = tensor<string, []>("add_19_beta_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(56694144)))];
            tensor<fp16, []> add_19_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_19_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 640, 32, 32]> add_19_cast = batch_norm(beta = add_19_beta_0_to_fp16, epsilon = add_19_epsilon_0_to_fp16, gamma = add_19_gamma_0_to_fp16, mean = add_19_mean_0_to_fp16, variance = add_19_variance_0_to_fp16, x = reshape_37_cast);
            tensor<fp16, [2, 640, 32, 32]> input_93_cast = silu(x = add_19_cast);
            tensor<int32, [2]> var_1770 = const()[name = tensor<string, []>("op_1770"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1772 = const()[name = tensor<string, []>("op_1772"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_55_pad_type_0 = const()[name = tensor<string, []>("hidden_states_55_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_55_pad_0 = const()[name = tensor<string, []>("hidden_states_55_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [640, 640, 3, 3]> down_blocks_1_resnets_1_conv1_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_resnets_1_conv1_weight_to_fp16"), val = tensor<fp16, [640, 640, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(56695488)))];
            tensor<fp16, [640]> down_blocks_1_resnets_1_conv1_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_resnets_1_conv1_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(64068352)))];
            tensor<fp16, [2, 640, 32, 32]> hidden_states_55_cast = conv(bias = down_blocks_1_resnets_1_conv1_bias_to_fp16, dilations = var_1772, groups = var_1213, pad = hidden_states_55_pad_0, pad_type = hidden_states_55_pad_type_0, strides = var_1770, weight = down_blocks_1_resnets_1_conv1_weight_to_fp16, x = input_93_cast);
            tensor<int32, [2]> var_1778 = const()[name = tensor<string, []>("op_1778"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1780 = const()[name = tensor<string, []>("op_1780"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> temb_7_pad_type_0 = const()[name = tensor<string, []>("temb_7_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> temb_7_pad_0 = const()[name = tensor<string, []>("temb_7_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 1280, 1, 1]> down_blocks_1_resnets_1_time_emb_proj_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_resnets_1_time_emb_proj_weight_to_fp16"), val = tensor<fp16, [640, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(64069696)))];
            tensor<fp16, [640]> down_blocks_1_resnets_1_time_emb_proj_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_resnets_1_time_emb_proj_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(65708160)))];
            tensor<fp16, [2, 640, 1, 1]> temb_7_cast = conv(bias = down_blocks_1_resnets_1_time_emb_proj_bias_to_fp16, dilations = var_1780, groups = var_1213, pad = temb_7_pad_0, pad_type = temb_7_pad_type_0, strides = var_1778, weight = down_blocks_1_resnets_1_time_emb_proj_weight_to_fp16, x = input_15_cast_1);
            tensor<fp16, [2, 640, 32, 32]> input_97_cast = add(x = hidden_states_55_cast, y = temb_7_cast);
            tensor<int32, [5]> reshape_40_shape_0 = const()[name = tensor<string, []>("reshape_40_shape_0"), val = tensor<int32, [5]>([2, 32, 20, 32, 32])];
            tensor<fp16, [2, 32, 20, 32, 32]> reshape_40_cast = reshape(shape = reshape_40_shape_0, x = input_97_cast);
            tensor<int32, [3]> reduce_mean_30_axes_0 = const()[name = tensor<string, []>("reduce_mean_30_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_30_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_30_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_30_cast = reduce_mean(axes = reduce_mean_30_axes_0, keep_dims = reduce_mean_30_keep_dims_0, x = reshape_40_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> sub_20_cast = sub(x = reshape_40_cast, y = reduce_mean_30_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> square_10_cast = square(x = sub_20_cast);
            tensor<int32, [3]> reduce_mean_32_axes_0 = const()[name = tensor<string, []>("reduce_mean_32_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_32_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_32_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_32_cast = reduce_mean(axes = reduce_mean_32_axes_0, keep_dims = reduce_mean_32_keep_dims_0, x = square_10_cast);
            tensor<fp16, []> add_20_y_0_to_fp16 = const()[name = tensor<string, []>("add_20_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_20_cast = add(x = reduce_mean_32_cast, y = add_20_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_10_cast = sqrt(x = add_20_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> real_div_10_cast = real_div(x = sub_20_cast, y = sqrt_10_cast);
            tensor<int32, [4]> reshape_41_shape_0 = const()[name = tensor<string, []>("reshape_41_shape_0"), val = tensor<int32, [4]>([2, 640, 32, 32])];
            tensor<fp16, [2, 640, 32, 32]> reshape_41_cast = reshape(shape = reshape_41_shape_0, x = real_div_10_cast);
            tensor<fp16, [640]> add_21_mean_0_to_fp16 = const()[name = tensor<string, []>("add_21_mean_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(65709504)))];
            tensor<fp16, [640]> add_21_variance_0_to_fp16 = const()[name = tensor<string, []>("add_21_variance_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(65710848)))];
            tensor<fp16, [640]> add_21_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_21_gamma_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(65712192)))];
            tensor<fp16, [640]> add_21_beta_0_to_fp16 = const()[name = tensor<string, []>("add_21_beta_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(65713536)))];
            tensor<fp16, []> add_21_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_21_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 640, 32, 32]> add_21_cast = batch_norm(beta = add_21_beta_0_to_fp16, epsilon = add_21_epsilon_0_to_fp16, gamma = add_21_gamma_0_to_fp16, mean = add_21_mean_0_to_fp16, variance = add_21_variance_0_to_fp16, x = reshape_41_cast);
            tensor<fp16, [2, 640, 32, 32]> input_101_cast = silu(x = add_21_cast);
            tensor<int32, [2]> var_1790 = const()[name = tensor<string, []>("op_1790"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1792 = const()[name = tensor<string, []>("op_1792"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_57_pad_type_0 = const()[name = tensor<string, []>("hidden_states_57_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_57_pad_0 = const()[name = tensor<string, []>("hidden_states_57_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [640, 640, 3, 3]> down_blocks_1_resnets_1_conv2_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_resnets_1_conv2_weight_to_fp16"), val = tensor<fp16, [640, 640, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(65714880)))];
            tensor<fp16, [640]> down_blocks_1_resnets_1_conv2_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_resnets_1_conv2_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(73087744)))];
            tensor<fp16, [2, 640, 32, 32]> hidden_states_57_cast = conv(bias = down_blocks_1_resnets_1_conv2_bias_to_fp16, dilations = var_1792, groups = var_1213, pad = hidden_states_57_pad_0, pad_type = hidden_states_57_pad_type_0, strides = var_1790, weight = down_blocks_1_resnets_1_conv2_weight_to_fp16, x = input_101_cast);
            tensor<fp16, [2, 640, 32, 32]> hidden_states_59_cast = add(x = input_89_cast_1, y = hidden_states_57_cast);
            tensor<int32, [5]> reshape_44_shape_0 = const()[name = tensor<string, []>("reshape_44_shape_0"), val = tensor<int32, [5]>([2, 32, 20, 32, 32])];
            tensor<fp16, [2, 32, 20, 32, 32]> reshape_44_cast = reshape(shape = reshape_44_shape_0, x = hidden_states_59_cast);
            tensor<int32, [3]> reduce_mean_33_axes_0 = const()[name = tensor<string, []>("reduce_mean_33_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_33_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_33_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_33_cast = reduce_mean(axes = reduce_mean_33_axes_0, keep_dims = reduce_mean_33_keep_dims_0, x = reshape_44_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> sub_22_cast = sub(x = reshape_44_cast, y = reduce_mean_33_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> square_11_cast = square(x = sub_22_cast);
            tensor<int32, [3]> reduce_mean_35_axes_0 = const()[name = tensor<string, []>("reduce_mean_35_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_35_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_35_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_35_cast = reduce_mean(axes = reduce_mean_35_axes_0, keep_dims = reduce_mean_35_keep_dims_0, x = square_11_cast);
            tensor<fp16, []> add_22_y_0_to_fp16 = const()[name = tensor<string, []>("add_22_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_22_cast = add(x = reduce_mean_35_cast, y = add_22_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_11_cast = sqrt(x = add_22_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> real_div_11_cast = real_div(x = sub_22_cast, y = sqrt_11_cast);
            tensor<int32, [4]> reshape_45_shape_0 = const()[name = tensor<string, []>("reshape_45_shape_0"), val = tensor<int32, [4]>([2, 640, 32, 32])];
            tensor<fp16, [2, 640, 32, 32]> reshape_45_cast = reshape(shape = reshape_45_shape_0, x = real_div_11_cast);
            tensor<fp16, [640]> add_23_mean_0_to_fp16 = const()[name = tensor<string, []>("add_23_mean_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(73089088)))];
            tensor<fp16, [640]> add_23_variance_0_to_fp16 = const()[name = tensor<string, []>("add_23_variance_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(73090432)))];
            tensor<fp16, [640]> add_23_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_23_gamma_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(73091776)))];
            tensor<fp16, [640]> add_23_beta_0_to_fp16 = const()[name = tensor<string, []>("add_23_beta_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(73093120)))];
            tensor<fp16, []> add_23_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_23_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 640, 32, 32]> add_23_cast = batch_norm(beta = add_23_beta_0_to_fp16, epsilon = add_23_epsilon_0_to_fp16, gamma = add_23_gamma_0_to_fp16, mean = add_23_mean_0_to_fp16, variance = add_23_variance_0_to_fp16, x = reshape_45_cast);
            tensor<int32, [2]> var_1812 = const()[name = tensor<string, []>("op_1812"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1814 = const()[name = tensor<string, []>("op_1814"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_61_pad_type_0 = const()[name = tensor<string, []>("hidden_states_61_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_61_pad_0 = const()[name = tensor<string, []>("hidden_states_61_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> down_blocks_1_attentions_1_proj_in_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_1_proj_in_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(73094464)))];
            tensor<fp16, [640]> down_blocks_1_attentions_1_proj_in_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_1_proj_in_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(73913728)))];
            tensor<fp16, [2, 640, 32, 32]> hidden_states_61_cast = conv(bias = down_blocks_1_attentions_1_proj_in_bias_to_fp16, dilations = var_1814, groups = var_1213, pad = hidden_states_61_pad_0, pad_type = hidden_states_61_pad_type_0, strides = var_1812, weight = down_blocks_1_attentions_1_proj_in_weight_to_fp16, x = add_23_cast);
            tensor<int32, [4]> var_1819 = const()[name = tensor<string, []>("op_1819"), val = tensor<int32, [4]>([2, 640, 1, 1024])];
            tensor<fp16, [2, 640, 1, 1024]> inputs_19_cast = reshape(shape = var_1819, x = hidden_states_61_cast);
            tensor<int32, [1]> var_1829 = const()[name = tensor<string, []>("op_1829"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> channels_mean_19_cast = reduce_mean(axes = var_1829, keep_dims = var_1208, x = inputs_19_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_19_cast = sub(x = inputs_19_cast, y = channels_mean_19_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_sq_19_cast = mul(x = zero_mean_19_cast, y = zero_mean_19_cast);
            tensor<int32, [1]> var_1833 = const()[name = tensor<string, []>("op_1833"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> var_1834_cast = reduce_mean(axes = var_1833, keep_dims = var_1208, x = zero_mean_sq_19_cast);
            tensor<fp16, []> var_1835_to_fp16 = const()[name = tensor<string, []>("op_1835_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 1024]> var_1836_cast = add(x = var_1834_cast, y = var_1835_to_fp16);
            tensor<fp16, []> denom_19_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_19_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 1024]> denom_19_cast = rsqrt(epsilon = denom_19_epsilon_0_to_fp16, x = var_1836_cast);
            tensor<fp16, [2, 640, 1, 1024]> out_19_cast = mul(x = zero_mean_19_cast, y = denom_19_cast);
            tensor<fp16, [1, 640, 1, 1]> var_1840_to_fp16 = const()[name = tensor<string, []>("op_1840_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(73915072)))];
            tensor<fp16, [2, 640, 1, 1024]> var_1841_cast = add(x = out_19_cast, y = var_1840_to_fp16);
            tensor<fp16, [1, 640, 1, 1]> var_1843_to_fp16 = const()[name = tensor<string, []>("op_1843_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(73916416)))];
            tensor<fp16, [2, 640, 1, 1024]> hidden_states_63_cast = mul(x = var_1841_cast, y = var_1843_to_fp16);
            tensor<int32, [2]> var_1850 = const()[name = tensor<string, []>("op_1850"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1852 = const()[name = tensor<string, []>("op_1852"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_13_pad_type_0 = const()[name = tensor<string, []>("q_13_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_13_pad_0 = const()[name = tensor<string, []>("q_13_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> down_blocks_1_attentions_1_transformer_blocks_0_attn1_to_q_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_1_transformer_blocks_0_attn1_to_q_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(73917760)))];
            tensor<fp16, [2, 640, 1, 1024]> q_13_cast = conv(dilations = var_1852, groups = var_1213, pad = q_13_pad_0, pad_type = q_13_pad_type_0, strides = var_1850, weight = down_blocks_1_attentions_1_transformer_blocks_0_attn1_to_q_weight_to_fp16, x = hidden_states_63_cast);
            tensor<int32, [2]> var_1856 = const()[name = tensor<string, []>("op_1856"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1858 = const()[name = tensor<string, []>("op_1858"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_25_pad_type_0 = const()[name = tensor<string, []>("k_25_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_25_pad_0 = const()[name = tensor<string, []>("k_25_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> down_blocks_1_attentions_1_transformer_blocks_0_attn1_to_k_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_1_transformer_blocks_0_attn1_to_k_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(74737024)))];
            tensor<fp16, [2, 640, 1, 1024]> k_25_cast = conv(dilations = var_1858, groups = var_1213, pad = k_25_pad_0, pad_type = k_25_pad_type_0, strides = var_1856, weight = down_blocks_1_attentions_1_transformer_blocks_0_attn1_to_k_weight_to_fp16, x = hidden_states_63_cast);
            tensor<int32, [2]> var_1862 = const()[name = tensor<string, []>("op_1862"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1864 = const()[name = tensor<string, []>("op_1864"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_13_pad_type_0 = const()[name = tensor<string, []>("v_13_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_13_pad_0 = const()[name = tensor<string, []>("v_13_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> down_blocks_1_attentions_1_transformer_blocks_0_attn1_to_v_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_1_transformer_blocks_0_attn1_to_v_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(75556288)))];
            tensor<fp16, [2, 640, 1, 1024]> v_13_cast = conv(dilations = var_1864, groups = var_1213, pad = v_13_pad_0, pad_type = v_13_pad_type_0, strides = var_1862, weight = down_blocks_1_attentions_1_transformer_blocks_0_attn1_to_v_weight_to_fp16, x = hidden_states_63_cast);
            tensor<int32, [4]> var_1868_begin_0 = const()[name = tensor<string, []>("op_1868_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1868_end_0 = const()[name = tensor<string, []>("op_1868_end_0"), val = tensor<int32, [4]>([2, 80, 1, 1024])];
            tensor<bool, [4]> var_1868_end_mask_0 = const()[name = tensor<string, []>("op_1868_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1868_cast = slice_by_index(begin = var_1868_begin_0, end = var_1868_end_0, end_mask = var_1868_end_mask_0, x = q_13_cast);
            tensor<int32, [4]> var_1872_begin_0 = const()[name = tensor<string, []>("op_1872_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_1872_end_0 = const()[name = tensor<string, []>("op_1872_end_0"), val = tensor<int32, [4]>([2, 160, 1, 1024])];
            tensor<bool, [4]> var_1872_end_mask_0 = const()[name = tensor<string, []>("op_1872_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1872_cast = slice_by_index(begin = var_1872_begin_0, end = var_1872_end_0, end_mask = var_1872_end_mask_0, x = q_13_cast);
            tensor<int32, [4]> var_1876_begin_0 = const()[name = tensor<string, []>("op_1876_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_1876_end_0 = const()[name = tensor<string, []>("op_1876_end_0"), val = tensor<int32, [4]>([2, 240, 1, 1024])];
            tensor<bool, [4]> var_1876_end_mask_0 = const()[name = tensor<string, []>("op_1876_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1876_cast = slice_by_index(begin = var_1876_begin_0, end = var_1876_end_0, end_mask = var_1876_end_mask_0, x = q_13_cast);
            tensor<int32, [4]> var_1880_begin_0 = const()[name = tensor<string, []>("op_1880_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_1880_end_0 = const()[name = tensor<string, []>("op_1880_end_0"), val = tensor<int32, [4]>([2, 320, 1, 1024])];
            tensor<bool, [4]> var_1880_end_mask_0 = const()[name = tensor<string, []>("op_1880_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1880_cast = slice_by_index(begin = var_1880_begin_0, end = var_1880_end_0, end_mask = var_1880_end_mask_0, x = q_13_cast);
            tensor<int32, [4]> var_1884_begin_0 = const()[name = tensor<string, []>("op_1884_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_1884_end_0 = const()[name = tensor<string, []>("op_1884_end_0"), val = tensor<int32, [4]>([2, 400, 1, 1024])];
            tensor<bool, [4]> var_1884_end_mask_0 = const()[name = tensor<string, []>("op_1884_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1884_cast = slice_by_index(begin = var_1884_begin_0, end = var_1884_end_0, end_mask = var_1884_end_mask_0, x = q_13_cast);
            tensor<int32, [4]> var_1888_begin_0 = const()[name = tensor<string, []>("op_1888_begin_0"), val = tensor<int32, [4]>([0, 400, 0, 0])];
            tensor<int32, [4]> var_1888_end_0 = const()[name = tensor<string, []>("op_1888_end_0"), val = tensor<int32, [4]>([2, 480, 1, 1024])];
            tensor<bool, [4]> var_1888_end_mask_0 = const()[name = tensor<string, []>("op_1888_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1888_cast = slice_by_index(begin = var_1888_begin_0, end = var_1888_end_0, end_mask = var_1888_end_mask_0, x = q_13_cast);
            tensor<int32, [4]> var_1892_begin_0 = const()[name = tensor<string, []>("op_1892_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_1892_end_0 = const()[name = tensor<string, []>("op_1892_end_0"), val = tensor<int32, [4]>([2, 560, 1, 1024])];
            tensor<bool, [4]> var_1892_end_mask_0 = const()[name = tensor<string, []>("op_1892_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1892_cast = slice_by_index(begin = var_1892_begin_0, end = var_1892_end_0, end_mask = var_1892_end_mask_0, x = q_13_cast);
            tensor<int32, [4]> var_1896_begin_0 = const()[name = tensor<string, []>("op_1896_begin_0"), val = tensor<int32, [4]>([0, 560, 0, 0])];
            tensor<int32, [4]> var_1896_end_0 = const()[name = tensor<string, []>("op_1896_end_0"), val = tensor<int32, [4]>([2, 640, 1, 1024])];
            tensor<bool, [4]> var_1896_end_mask_0 = const()[name = tensor<string, []>("op_1896_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1896_cast = slice_by_index(begin = var_1896_begin_0, end = var_1896_end_0, end_mask = var_1896_end_mask_0, x = q_13_cast);
            tensor<int32, [4]> k_27_perm_0 = const()[name = tensor<string, []>("k_27_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_1903_begin_0 = const()[name = tensor<string, []>("op_1903_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1903_end_0 = const()[name = tensor<string, []>("op_1903_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 80])];
            tensor<bool, [4]> var_1903_end_mask_0 = const()[name = tensor<string, []>("op_1903_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 640]> transpose_71 = transpose(perm = k_27_perm_0, x = k_25_cast);
            tensor<fp16, [2, 1024, 1, 80]> var_1903_cast = slice_by_index(begin = var_1903_begin_0, end = var_1903_end_0, end_mask = var_1903_end_mask_0, x = transpose_71);
            tensor<int32, [4]> var_1907_begin_0 = const()[name = tensor<string, []>("op_1907_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 80])];
            tensor<int32, [4]> var_1907_end_0 = const()[name = tensor<string, []>("op_1907_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 160])];
            tensor<bool, [4]> var_1907_end_mask_0 = const()[name = tensor<string, []>("op_1907_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_1907_cast = slice_by_index(begin = var_1907_begin_0, end = var_1907_end_0, end_mask = var_1907_end_mask_0, x = transpose_71);
            tensor<int32, [4]> var_1911_begin_0 = const()[name = tensor<string, []>("op_1911_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 160])];
            tensor<int32, [4]> var_1911_end_0 = const()[name = tensor<string, []>("op_1911_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 240])];
            tensor<bool, [4]> var_1911_end_mask_0 = const()[name = tensor<string, []>("op_1911_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_1911_cast = slice_by_index(begin = var_1911_begin_0, end = var_1911_end_0, end_mask = var_1911_end_mask_0, x = transpose_71);
            tensor<int32, [4]> var_1915_begin_0 = const()[name = tensor<string, []>("op_1915_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 240])];
            tensor<int32, [4]> var_1915_end_0 = const()[name = tensor<string, []>("op_1915_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 320])];
            tensor<bool, [4]> var_1915_end_mask_0 = const()[name = tensor<string, []>("op_1915_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_1915_cast = slice_by_index(begin = var_1915_begin_0, end = var_1915_end_0, end_mask = var_1915_end_mask_0, x = transpose_71);
            tensor<int32, [4]> var_1919_begin_0 = const()[name = tensor<string, []>("op_1919_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_1919_end_0 = const()[name = tensor<string, []>("op_1919_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 400])];
            tensor<bool, [4]> var_1919_end_mask_0 = const()[name = tensor<string, []>("op_1919_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_1919_cast = slice_by_index(begin = var_1919_begin_0, end = var_1919_end_0, end_mask = var_1919_end_mask_0, x = transpose_71);
            tensor<int32, [4]> var_1923_begin_0 = const()[name = tensor<string, []>("op_1923_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 400])];
            tensor<int32, [4]> var_1923_end_0 = const()[name = tensor<string, []>("op_1923_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 480])];
            tensor<bool, [4]> var_1923_end_mask_0 = const()[name = tensor<string, []>("op_1923_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_1923_cast = slice_by_index(begin = var_1923_begin_0, end = var_1923_end_0, end_mask = var_1923_end_mask_0, x = transpose_71);
            tensor<int32, [4]> var_1927_begin_0 = const()[name = tensor<string, []>("op_1927_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 480])];
            tensor<int32, [4]> var_1927_end_0 = const()[name = tensor<string, []>("op_1927_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 560])];
            tensor<bool, [4]> var_1927_end_mask_0 = const()[name = tensor<string, []>("op_1927_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_1927_cast = slice_by_index(begin = var_1927_begin_0, end = var_1927_end_0, end_mask = var_1927_end_mask_0, x = transpose_71);
            tensor<int32, [4]> var_1931_begin_0 = const()[name = tensor<string, []>("op_1931_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 560])];
            tensor<int32, [4]> var_1931_end_0 = const()[name = tensor<string, []>("op_1931_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 640])];
            tensor<bool, [4]> var_1931_end_mask_0 = const()[name = tensor<string, []>("op_1931_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_1931_cast = slice_by_index(begin = var_1931_begin_0, end = var_1931_end_0, end_mask = var_1931_end_mask_0, x = transpose_71);
            tensor<int32, [4]> var_1933_begin_0 = const()[name = tensor<string, []>("op_1933_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1933_end_0 = const()[name = tensor<string, []>("op_1933_end_0"), val = tensor<int32, [4]>([2, 80, 1, 1024])];
            tensor<bool, [4]> var_1933_end_mask_0 = const()[name = tensor<string, []>("op_1933_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1933_cast = slice_by_index(begin = var_1933_begin_0, end = var_1933_end_0, end_mask = var_1933_end_mask_0, x = v_13_cast);
            tensor<int32, [4]> var_1937_begin_0 = const()[name = tensor<string, []>("op_1937_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_1937_end_0 = const()[name = tensor<string, []>("op_1937_end_0"), val = tensor<int32, [4]>([2, 160, 1, 1024])];
            tensor<bool, [4]> var_1937_end_mask_0 = const()[name = tensor<string, []>("op_1937_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1937_cast = slice_by_index(begin = var_1937_begin_0, end = var_1937_end_0, end_mask = var_1937_end_mask_0, x = v_13_cast);
            tensor<int32, [4]> var_1941_begin_0 = const()[name = tensor<string, []>("op_1941_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_1941_end_0 = const()[name = tensor<string, []>("op_1941_end_0"), val = tensor<int32, [4]>([2, 240, 1, 1024])];
            tensor<bool, [4]> var_1941_end_mask_0 = const()[name = tensor<string, []>("op_1941_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1941_cast = slice_by_index(begin = var_1941_begin_0, end = var_1941_end_0, end_mask = var_1941_end_mask_0, x = v_13_cast);
            tensor<int32, [4]> var_1945_begin_0 = const()[name = tensor<string, []>("op_1945_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_1945_end_0 = const()[name = tensor<string, []>("op_1945_end_0"), val = tensor<int32, [4]>([2, 320, 1, 1024])];
            tensor<bool, [4]> var_1945_end_mask_0 = const()[name = tensor<string, []>("op_1945_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1945_cast = slice_by_index(begin = var_1945_begin_0, end = var_1945_end_0, end_mask = var_1945_end_mask_0, x = v_13_cast);
            tensor<int32, [4]> var_1949_begin_0 = const()[name = tensor<string, []>("op_1949_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_1949_end_0 = const()[name = tensor<string, []>("op_1949_end_0"), val = tensor<int32, [4]>([2, 400, 1, 1024])];
            tensor<bool, [4]> var_1949_end_mask_0 = const()[name = tensor<string, []>("op_1949_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1949_cast = slice_by_index(begin = var_1949_begin_0, end = var_1949_end_0, end_mask = var_1949_end_mask_0, x = v_13_cast);
            tensor<int32, [4]> var_1953_begin_0 = const()[name = tensor<string, []>("op_1953_begin_0"), val = tensor<int32, [4]>([0, 400, 0, 0])];
            tensor<int32, [4]> var_1953_end_0 = const()[name = tensor<string, []>("op_1953_end_0"), val = tensor<int32, [4]>([2, 480, 1, 1024])];
            tensor<bool, [4]> var_1953_end_mask_0 = const()[name = tensor<string, []>("op_1953_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1953_cast = slice_by_index(begin = var_1953_begin_0, end = var_1953_end_0, end_mask = var_1953_end_mask_0, x = v_13_cast);
            tensor<int32, [4]> var_1957_begin_0 = const()[name = tensor<string, []>("op_1957_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_1957_end_0 = const()[name = tensor<string, []>("op_1957_end_0"), val = tensor<int32, [4]>([2, 560, 1, 1024])];
            tensor<bool, [4]> var_1957_end_mask_0 = const()[name = tensor<string, []>("op_1957_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1957_cast = slice_by_index(begin = var_1957_begin_0, end = var_1957_end_0, end_mask = var_1957_end_mask_0, x = v_13_cast);
            tensor<int32, [4]> var_1961_begin_0 = const()[name = tensor<string, []>("op_1961_begin_0"), val = tensor<int32, [4]>([0, 560, 0, 0])];
            tensor<int32, [4]> var_1961_end_0 = const()[name = tensor<string, []>("op_1961_end_0"), val = tensor<int32, [4]>([2, 640, 1, 1024])];
            tensor<bool, [4]> var_1961_end_mask_0 = const()[name = tensor<string, []>("op_1961_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1961_cast = slice_by_index(begin = var_1961_begin_0, end = var_1961_end_0, end_mask = var_1961_end_mask_0, x = v_13_cast);
            tensor<string, []> var_1965_equation_0 = const()[name = tensor<string, []>("op_1965_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_1965_cast = einsum(equation = var_1965_equation_0, values = (var_1903_cast, var_1868_cast));
            tensor<fp16, []> var_1966_to_fp16 = const()[name = tensor<string, []>("op_1966_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_97_cast = mul(x = var_1965_cast, y = var_1966_to_fp16);
            tensor<string, []> var_1969_equation_0 = const()[name = tensor<string, []>("op_1969_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_1969_cast = einsum(equation = var_1969_equation_0, values = (var_1907_cast, var_1872_cast));
            tensor<fp16, []> var_1970_to_fp16 = const()[name = tensor<string, []>("op_1970_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_99_cast = mul(x = var_1969_cast, y = var_1970_to_fp16);
            tensor<string, []> var_1973_equation_0 = const()[name = tensor<string, []>("op_1973_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_1973_cast = einsum(equation = var_1973_equation_0, values = (var_1911_cast, var_1876_cast));
            tensor<fp16, []> var_1974_to_fp16 = const()[name = tensor<string, []>("op_1974_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_101_cast = mul(x = var_1973_cast, y = var_1974_to_fp16);
            tensor<string, []> var_1977_equation_0 = const()[name = tensor<string, []>("op_1977_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_1977_cast = einsum(equation = var_1977_equation_0, values = (var_1915_cast, var_1880_cast));
            tensor<fp16, []> var_1978_to_fp16 = const()[name = tensor<string, []>("op_1978_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_103_cast = mul(x = var_1977_cast, y = var_1978_to_fp16);
            tensor<string, []> var_1981_equation_0 = const()[name = tensor<string, []>("op_1981_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_1981_cast = einsum(equation = var_1981_equation_0, values = (var_1919_cast, var_1884_cast));
            tensor<fp16, []> var_1982_to_fp16 = const()[name = tensor<string, []>("op_1982_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_105_cast = mul(x = var_1981_cast, y = var_1982_to_fp16);
            tensor<string, []> var_1985_equation_0 = const()[name = tensor<string, []>("op_1985_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_1985_cast = einsum(equation = var_1985_equation_0, values = (var_1923_cast, var_1888_cast));
            tensor<fp16, []> var_1986_to_fp16 = const()[name = tensor<string, []>("op_1986_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_107_cast = mul(x = var_1985_cast, y = var_1986_to_fp16);
            tensor<string, []> var_1989_equation_0 = const()[name = tensor<string, []>("op_1989_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_1989_cast = einsum(equation = var_1989_equation_0, values = (var_1927_cast, var_1892_cast));
            tensor<fp16, []> var_1990_to_fp16 = const()[name = tensor<string, []>("op_1990_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_109_cast = mul(x = var_1989_cast, y = var_1990_to_fp16);
            tensor<string, []> var_1993_equation_0 = const()[name = tensor<string, []>("op_1993_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_1993_cast = einsum(equation = var_1993_equation_0, values = (var_1931_cast, var_1896_cast));
            tensor<fp16, []> var_1994_to_fp16 = const()[name = tensor<string, []>("op_1994_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_111_cast = mul(x = var_1993_cast, y = var_1994_to_fp16);
            tensor<fp16, [2, 1024, 1, 1024]> var_1996_cast = softmax(axis = var_1213, x = aw_97_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_1997_cast = softmax(axis = var_1213, x = aw_99_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_1998_cast = softmax(axis = var_1213, x = aw_101_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_1999_cast = softmax(axis = var_1213, x = aw_103_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_2000_cast = softmax(axis = var_1213, x = aw_105_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_2001_cast = softmax(axis = var_1213, x = aw_107_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_2002_cast = softmax(axis = var_1213, x = aw_109_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_2003_cast = softmax(axis = var_1213, x = aw_111_cast);
            tensor<string, []> var_2005_equation_0 = const()[name = tensor<string, []>("op_2005_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_2005_cast = einsum(equation = var_2005_equation_0, values = (var_1933_cast, var_1996_cast));
            tensor<string, []> var_2007_equation_0 = const()[name = tensor<string, []>("op_2007_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_2007_cast = einsum(equation = var_2007_equation_0, values = (var_1937_cast, var_1997_cast));
            tensor<string, []> var_2009_equation_0 = const()[name = tensor<string, []>("op_2009_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_2009_cast = einsum(equation = var_2009_equation_0, values = (var_1941_cast, var_1998_cast));
            tensor<string, []> var_2011_equation_0 = const()[name = tensor<string, []>("op_2011_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_2011_cast = einsum(equation = var_2011_equation_0, values = (var_1945_cast, var_1999_cast));
            tensor<string, []> var_2013_equation_0 = const()[name = tensor<string, []>("op_2013_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_2013_cast = einsum(equation = var_2013_equation_0, values = (var_1949_cast, var_2000_cast));
            tensor<string, []> var_2015_equation_0 = const()[name = tensor<string, []>("op_2015_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_2015_cast = einsum(equation = var_2015_equation_0, values = (var_1953_cast, var_2001_cast));
            tensor<string, []> var_2017_equation_0 = const()[name = tensor<string, []>("op_2017_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_2017_cast = einsum(equation = var_2017_equation_0, values = (var_1957_cast, var_2002_cast));
            tensor<string, []> var_2019_equation_0 = const()[name = tensor<string, []>("op_2019_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_2019_cast = einsum(equation = var_2019_equation_0, values = (var_1961_cast, var_2003_cast));
            tensor<bool, []> input_105_interleave_0 = const()[name = tensor<string, []>("input_105_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 640, 1, 1024]> input_105_cast = concat(axis = var_1213, interleave = input_105_interleave_0, values = (var_2005_cast, var_2007_cast, var_2009_cast, var_2011_cast, var_2013_cast, var_2015_cast, var_2017_cast, var_2019_cast));
            tensor<int32, [2]> var_2025 = const()[name = tensor<string, []>("op_2025"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2027 = const()[name = tensor<string, []>("op_2027"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_2029_pad_type_0 = const()[name = tensor<string, []>("op_2029_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_2029_pad_0 = const()[name = tensor<string, []>("op_2029_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> down_blocks_1_attentions_1_transformer_blocks_0_attn1_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_1_transformer_blocks_0_attn1_to_out_0_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(76375552)))];
            tensor<fp16, [640]> down_blocks_1_attentions_1_transformer_blocks_0_attn1_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_1_transformer_blocks_0_attn1_to_out_0_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(77194816)))];
            tensor<fp16, [2, 640, 1, 1024]> var_2029_cast = conv(bias = down_blocks_1_attentions_1_transformer_blocks_0_attn1_to_out_0_bias_to_fp16, dilations = var_2027, groups = var_1213, pad = var_2029_pad_0, pad_type = var_2029_pad_type_0, strides = var_2025, weight = down_blocks_1_attentions_1_transformer_blocks_0_attn1_to_out_0_weight_to_fp16, x = input_105_cast);
            tensor<fp16, [2, 640, 1, 1024]> inputs_21_cast = add(x = var_2029_cast, y = inputs_19_cast);
            tensor<int32, [1]> var_2033 = const()[name = tensor<string, []>("op_2033"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> channels_mean_21_cast = reduce_mean(axes = var_2033, keep_dims = var_1208, x = inputs_21_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_21_cast = sub(x = inputs_21_cast, y = channels_mean_21_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_sq_21_cast = mul(x = zero_mean_21_cast, y = zero_mean_21_cast);
            tensor<int32, [1]> var_2037 = const()[name = tensor<string, []>("op_2037"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> var_2038_cast = reduce_mean(axes = var_2037, keep_dims = var_1208, x = zero_mean_sq_21_cast);
            tensor<fp16, []> var_2039_to_fp16 = const()[name = tensor<string, []>("op_2039_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 1024]> var_2040_cast = add(x = var_2038_cast, y = var_2039_to_fp16);
            tensor<fp16, []> denom_21_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_21_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 1024]> denom_21_cast = rsqrt(epsilon = denom_21_epsilon_0_to_fp16, x = var_2040_cast);
            tensor<fp16, [2, 640, 1, 1024]> out_21_cast = mul(x = zero_mean_21_cast, y = denom_21_cast);
            tensor<fp16, [1, 640, 1, 1]> var_2044_to_fp16 = const()[name = tensor<string, []>("op_2044_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(77196160)))];
            tensor<fp16, [2, 640, 1, 1024]> var_2045_cast = add(x = out_21_cast, y = var_2044_to_fp16);
            tensor<fp16, [1, 640, 1, 1]> var_2047_to_fp16 = const()[name = tensor<string, []>("op_2047_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(77197504)))];
            tensor<fp16, [2, 640, 1, 1024]> hidden_states_65_cast = mul(x = var_2045_cast, y = var_2047_to_fp16);
            tensor<int32, [2]> var_2054 = const()[name = tensor<string, []>("op_2054"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2056 = const()[name = tensor<string, []>("op_2056"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_15_pad_type_0 = const()[name = tensor<string, []>("q_15_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_15_pad_0 = const()[name = tensor<string, []>("q_15_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> down_blocks_1_attentions_1_transformer_blocks_0_attn2_to_q_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_1_transformer_blocks_0_attn2_to_q_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(77198848)))];
            tensor<fp16, [2, 640, 1, 1024]> q_15_cast = conv(dilations = var_2056, groups = var_1213, pad = q_15_pad_0, pad_type = q_15_pad_type_0, strides = var_2054, weight = down_blocks_1_attentions_1_transformer_blocks_0_attn2_to_q_weight_to_fp16, x = hidden_states_65_cast);
            tensor<int32, [2]> var_2060 = const()[name = tensor<string, []>("op_2060"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2062 = const()[name = tensor<string, []>("op_2062"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_29_pad_type_0 = const()[name = tensor<string, []>("k_29_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_29_pad_0 = const()[name = tensor<string, []>("k_29_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 768, 1, 1]> down_blocks_1_attentions_1_transformer_blocks_0_attn2_to_k_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_1_transformer_blocks_0_attn2_to_k_weight_to_fp16"), val = tensor<fp16, [640, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(78018112)))];
            tensor<fp16, [2, 640, 1, 77]> k_29_cast = conv(dilations = var_2062, groups = var_1213, pad = k_29_pad_0, pad_type = k_29_pad_type_0, strides = var_2060, weight = down_blocks_1_attentions_1_transformer_blocks_0_attn2_to_k_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [2]> var_2066 = const()[name = tensor<string, []>("op_2066"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2068 = const()[name = tensor<string, []>("op_2068"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_15_pad_type_0 = const()[name = tensor<string, []>("v_15_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_15_pad_0 = const()[name = tensor<string, []>("v_15_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 768, 1, 1]> down_blocks_1_attentions_1_transformer_blocks_0_attn2_to_v_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_1_transformer_blocks_0_attn2_to_v_weight_to_fp16"), val = tensor<fp16, [640, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(79001216)))];
            tensor<fp16, [2, 640, 1, 77]> v_15_cast = conv(dilations = var_2068, groups = var_1213, pad = v_15_pad_0, pad_type = v_15_pad_type_0, strides = var_2066, weight = down_blocks_1_attentions_1_transformer_blocks_0_attn2_to_v_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [4]> var_2072_begin_0 = const()[name = tensor<string, []>("op_2072_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_2072_end_0 = const()[name = tensor<string, []>("op_2072_end_0"), val = tensor<int32, [4]>([2, 80, 1, 1024])];
            tensor<bool, [4]> var_2072_end_mask_0 = const()[name = tensor<string, []>("op_2072_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_2072_cast = slice_by_index(begin = var_2072_begin_0, end = var_2072_end_0, end_mask = var_2072_end_mask_0, x = q_15_cast);
            tensor<int32, [4]> var_2076_begin_0 = const()[name = tensor<string, []>("op_2076_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_2076_end_0 = const()[name = tensor<string, []>("op_2076_end_0"), val = tensor<int32, [4]>([2, 160, 1, 1024])];
            tensor<bool, [4]> var_2076_end_mask_0 = const()[name = tensor<string, []>("op_2076_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_2076_cast = slice_by_index(begin = var_2076_begin_0, end = var_2076_end_0, end_mask = var_2076_end_mask_0, x = q_15_cast);
            tensor<int32, [4]> var_2080_begin_0 = const()[name = tensor<string, []>("op_2080_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_2080_end_0 = const()[name = tensor<string, []>("op_2080_end_0"), val = tensor<int32, [4]>([2, 240, 1, 1024])];
            tensor<bool, [4]> var_2080_end_mask_0 = const()[name = tensor<string, []>("op_2080_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_2080_cast = slice_by_index(begin = var_2080_begin_0, end = var_2080_end_0, end_mask = var_2080_end_mask_0, x = q_15_cast);
            tensor<int32, [4]> var_2084_begin_0 = const()[name = tensor<string, []>("op_2084_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_2084_end_0 = const()[name = tensor<string, []>("op_2084_end_0"), val = tensor<int32, [4]>([2, 320, 1, 1024])];
            tensor<bool, [4]> var_2084_end_mask_0 = const()[name = tensor<string, []>("op_2084_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_2084_cast = slice_by_index(begin = var_2084_begin_0, end = var_2084_end_0, end_mask = var_2084_end_mask_0, x = q_15_cast);
            tensor<int32, [4]> var_2088_begin_0 = const()[name = tensor<string, []>("op_2088_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_2088_end_0 = const()[name = tensor<string, []>("op_2088_end_0"), val = tensor<int32, [4]>([2, 400, 1, 1024])];
            tensor<bool, [4]> var_2088_end_mask_0 = const()[name = tensor<string, []>("op_2088_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_2088_cast = slice_by_index(begin = var_2088_begin_0, end = var_2088_end_0, end_mask = var_2088_end_mask_0, x = q_15_cast);
            tensor<int32, [4]> var_2092_begin_0 = const()[name = tensor<string, []>("op_2092_begin_0"), val = tensor<int32, [4]>([0, 400, 0, 0])];
            tensor<int32, [4]> var_2092_end_0 = const()[name = tensor<string, []>("op_2092_end_0"), val = tensor<int32, [4]>([2, 480, 1, 1024])];
            tensor<bool, [4]> var_2092_end_mask_0 = const()[name = tensor<string, []>("op_2092_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_2092_cast = slice_by_index(begin = var_2092_begin_0, end = var_2092_end_0, end_mask = var_2092_end_mask_0, x = q_15_cast);
            tensor<int32, [4]> var_2096_begin_0 = const()[name = tensor<string, []>("op_2096_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_2096_end_0 = const()[name = tensor<string, []>("op_2096_end_0"), val = tensor<int32, [4]>([2, 560, 1, 1024])];
            tensor<bool, [4]> var_2096_end_mask_0 = const()[name = tensor<string, []>("op_2096_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_2096_cast = slice_by_index(begin = var_2096_begin_0, end = var_2096_end_0, end_mask = var_2096_end_mask_0, x = q_15_cast);
            tensor<int32, [4]> var_2100_begin_0 = const()[name = tensor<string, []>("op_2100_begin_0"), val = tensor<int32, [4]>([0, 560, 0, 0])];
            tensor<int32, [4]> var_2100_end_0 = const()[name = tensor<string, []>("op_2100_end_0"), val = tensor<int32, [4]>([2, 640, 1, 1024])];
            tensor<bool, [4]> var_2100_end_mask_0 = const()[name = tensor<string, []>("op_2100_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_2100_cast = slice_by_index(begin = var_2100_begin_0, end = var_2100_end_0, end_mask = var_2100_end_mask_0, x = q_15_cast);
            tensor<int32, [4]> k_31_perm_0 = const()[name = tensor<string, []>("k_31_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_2107_begin_0 = const()[name = tensor<string, []>("op_2107_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_2107_end_0 = const()[name = tensor<string, []>("op_2107_end_0"), val = tensor<int32, [4]>([2, 77, 1, 80])];
            tensor<bool, [4]> var_2107_end_mask_0 = const()[name = tensor<string, []>("op_2107_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 640]> transpose_70 = transpose(perm = k_31_perm_0, x = k_29_cast);
            tensor<fp16, [2, 77, 1, 80]> var_2107_cast = slice_by_index(begin = var_2107_begin_0, end = var_2107_end_0, end_mask = var_2107_end_mask_0, x = transpose_70);
            tensor<int32, [4]> var_2111_begin_0 = const()[name = tensor<string, []>("op_2111_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 80])];
            tensor<int32, [4]> var_2111_end_0 = const()[name = tensor<string, []>("op_2111_end_0"), val = tensor<int32, [4]>([2, 77, 1, 160])];
            tensor<bool, [4]> var_2111_end_mask_0 = const()[name = tensor<string, []>("op_2111_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_2111_cast = slice_by_index(begin = var_2111_begin_0, end = var_2111_end_0, end_mask = var_2111_end_mask_0, x = transpose_70);
            tensor<int32, [4]> var_2115_begin_0 = const()[name = tensor<string, []>("op_2115_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 160])];
            tensor<int32, [4]> var_2115_end_0 = const()[name = tensor<string, []>("op_2115_end_0"), val = tensor<int32, [4]>([2, 77, 1, 240])];
            tensor<bool, [4]> var_2115_end_mask_0 = const()[name = tensor<string, []>("op_2115_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_2115_cast = slice_by_index(begin = var_2115_begin_0, end = var_2115_end_0, end_mask = var_2115_end_mask_0, x = transpose_70);
            tensor<int32, [4]> var_2119_begin_0 = const()[name = tensor<string, []>("op_2119_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 240])];
            tensor<int32, [4]> var_2119_end_0 = const()[name = tensor<string, []>("op_2119_end_0"), val = tensor<int32, [4]>([2, 77, 1, 320])];
            tensor<bool, [4]> var_2119_end_mask_0 = const()[name = tensor<string, []>("op_2119_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_2119_cast = slice_by_index(begin = var_2119_begin_0, end = var_2119_end_0, end_mask = var_2119_end_mask_0, x = transpose_70);
            tensor<int32, [4]> var_2123_begin_0 = const()[name = tensor<string, []>("op_2123_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_2123_end_0 = const()[name = tensor<string, []>("op_2123_end_0"), val = tensor<int32, [4]>([2, 77, 1, 400])];
            tensor<bool, [4]> var_2123_end_mask_0 = const()[name = tensor<string, []>("op_2123_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_2123_cast = slice_by_index(begin = var_2123_begin_0, end = var_2123_end_0, end_mask = var_2123_end_mask_0, x = transpose_70);
            tensor<int32, [4]> var_2127_begin_0 = const()[name = tensor<string, []>("op_2127_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 400])];
            tensor<int32, [4]> var_2127_end_0 = const()[name = tensor<string, []>("op_2127_end_0"), val = tensor<int32, [4]>([2, 77, 1, 480])];
            tensor<bool, [4]> var_2127_end_mask_0 = const()[name = tensor<string, []>("op_2127_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_2127_cast = slice_by_index(begin = var_2127_begin_0, end = var_2127_end_0, end_mask = var_2127_end_mask_0, x = transpose_70);
            tensor<int32, [4]> var_2131_begin_0 = const()[name = tensor<string, []>("op_2131_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 480])];
            tensor<int32, [4]> var_2131_end_0 = const()[name = tensor<string, []>("op_2131_end_0"), val = tensor<int32, [4]>([2, 77, 1, 560])];
            tensor<bool, [4]> var_2131_end_mask_0 = const()[name = tensor<string, []>("op_2131_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_2131_cast = slice_by_index(begin = var_2131_begin_0, end = var_2131_end_0, end_mask = var_2131_end_mask_0, x = transpose_70);
            tensor<int32, [4]> var_2135_begin_0 = const()[name = tensor<string, []>("op_2135_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 560])];
            tensor<int32, [4]> var_2135_end_0 = const()[name = tensor<string, []>("op_2135_end_0"), val = tensor<int32, [4]>([2, 77, 1, 640])];
            tensor<bool, [4]> var_2135_end_mask_0 = const()[name = tensor<string, []>("op_2135_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_2135_cast = slice_by_index(begin = var_2135_begin_0, end = var_2135_end_0, end_mask = var_2135_end_mask_0, x = transpose_70);
            tensor<int32, [4]> var_2137_begin_0 = const()[name = tensor<string, []>("op_2137_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_2137_end_0 = const()[name = tensor<string, []>("op_2137_end_0"), val = tensor<int32, [4]>([2, 80, 1, 77])];
            tensor<bool, [4]> var_2137_end_mask_0 = const()[name = tensor<string, []>("op_2137_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_2137_cast = slice_by_index(begin = var_2137_begin_0, end = var_2137_end_0, end_mask = var_2137_end_mask_0, x = v_15_cast);
            tensor<int32, [4]> var_2141_begin_0 = const()[name = tensor<string, []>("op_2141_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_2141_end_0 = const()[name = tensor<string, []>("op_2141_end_0"), val = tensor<int32, [4]>([2, 160, 1, 77])];
            tensor<bool, [4]> var_2141_end_mask_0 = const()[name = tensor<string, []>("op_2141_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_2141_cast = slice_by_index(begin = var_2141_begin_0, end = var_2141_end_0, end_mask = var_2141_end_mask_0, x = v_15_cast);
            tensor<int32, [4]> var_2145_begin_0 = const()[name = tensor<string, []>("op_2145_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_2145_end_0 = const()[name = tensor<string, []>("op_2145_end_0"), val = tensor<int32, [4]>([2, 240, 1, 77])];
            tensor<bool, [4]> var_2145_end_mask_0 = const()[name = tensor<string, []>("op_2145_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_2145_cast = slice_by_index(begin = var_2145_begin_0, end = var_2145_end_0, end_mask = var_2145_end_mask_0, x = v_15_cast);
            tensor<int32, [4]> var_2149_begin_0 = const()[name = tensor<string, []>("op_2149_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_2149_end_0 = const()[name = tensor<string, []>("op_2149_end_0"), val = tensor<int32, [4]>([2, 320, 1, 77])];
            tensor<bool, [4]> var_2149_end_mask_0 = const()[name = tensor<string, []>("op_2149_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_2149_cast = slice_by_index(begin = var_2149_begin_0, end = var_2149_end_0, end_mask = var_2149_end_mask_0, x = v_15_cast);
            tensor<int32, [4]> var_2153_begin_0 = const()[name = tensor<string, []>("op_2153_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_2153_end_0 = const()[name = tensor<string, []>("op_2153_end_0"), val = tensor<int32, [4]>([2, 400, 1, 77])];
            tensor<bool, [4]> var_2153_end_mask_0 = const()[name = tensor<string, []>("op_2153_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_2153_cast = slice_by_index(begin = var_2153_begin_0, end = var_2153_end_0, end_mask = var_2153_end_mask_0, x = v_15_cast);
            tensor<int32, [4]> var_2157_begin_0 = const()[name = tensor<string, []>("op_2157_begin_0"), val = tensor<int32, [4]>([0, 400, 0, 0])];
            tensor<int32, [4]> var_2157_end_0 = const()[name = tensor<string, []>("op_2157_end_0"), val = tensor<int32, [4]>([2, 480, 1, 77])];
            tensor<bool, [4]> var_2157_end_mask_0 = const()[name = tensor<string, []>("op_2157_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_2157_cast = slice_by_index(begin = var_2157_begin_0, end = var_2157_end_0, end_mask = var_2157_end_mask_0, x = v_15_cast);
            tensor<int32, [4]> var_2161_begin_0 = const()[name = tensor<string, []>("op_2161_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_2161_end_0 = const()[name = tensor<string, []>("op_2161_end_0"), val = tensor<int32, [4]>([2, 560, 1, 77])];
            tensor<bool, [4]> var_2161_end_mask_0 = const()[name = tensor<string, []>("op_2161_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_2161_cast = slice_by_index(begin = var_2161_begin_0, end = var_2161_end_0, end_mask = var_2161_end_mask_0, x = v_15_cast);
            tensor<int32, [4]> var_2165_begin_0 = const()[name = tensor<string, []>("op_2165_begin_0"), val = tensor<int32, [4]>([0, 560, 0, 0])];
            tensor<int32, [4]> var_2165_end_0 = const()[name = tensor<string, []>("op_2165_end_0"), val = tensor<int32, [4]>([2, 640, 1, 77])];
            tensor<bool, [4]> var_2165_end_mask_0 = const()[name = tensor<string, []>("op_2165_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_2165_cast = slice_by_index(begin = var_2165_begin_0, end = var_2165_end_0, end_mask = var_2165_end_mask_0, x = v_15_cast);
            tensor<string, []> var_2169_equation_0 = const()[name = tensor<string, []>("op_2169_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_2169_cast = einsum(equation = var_2169_equation_0, values = (var_2107_cast, var_2072_cast));
            tensor<fp16, []> var_2170_to_fp16 = const()[name = tensor<string, []>("op_2170_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_113_cast = mul(x = var_2169_cast, y = var_2170_to_fp16);
            tensor<string, []> var_2173_equation_0 = const()[name = tensor<string, []>("op_2173_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_2173_cast = einsum(equation = var_2173_equation_0, values = (var_2111_cast, var_2076_cast));
            tensor<fp16, []> var_2174_to_fp16 = const()[name = tensor<string, []>("op_2174_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_115_cast = mul(x = var_2173_cast, y = var_2174_to_fp16);
            tensor<string, []> var_2177_equation_0 = const()[name = tensor<string, []>("op_2177_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_2177_cast = einsum(equation = var_2177_equation_0, values = (var_2115_cast, var_2080_cast));
            tensor<fp16, []> var_2178_to_fp16 = const()[name = tensor<string, []>("op_2178_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_117_cast = mul(x = var_2177_cast, y = var_2178_to_fp16);
            tensor<string, []> var_2181_equation_0 = const()[name = tensor<string, []>("op_2181_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_2181_cast = einsum(equation = var_2181_equation_0, values = (var_2119_cast, var_2084_cast));
            tensor<fp16, []> var_2182_to_fp16 = const()[name = tensor<string, []>("op_2182_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_119_cast = mul(x = var_2181_cast, y = var_2182_to_fp16);
            tensor<string, []> var_2185_equation_0 = const()[name = tensor<string, []>("op_2185_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_2185_cast = einsum(equation = var_2185_equation_0, values = (var_2123_cast, var_2088_cast));
            tensor<fp16, []> var_2186_to_fp16 = const()[name = tensor<string, []>("op_2186_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_121_cast = mul(x = var_2185_cast, y = var_2186_to_fp16);
            tensor<string, []> var_2189_equation_0 = const()[name = tensor<string, []>("op_2189_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_2189_cast = einsum(equation = var_2189_equation_0, values = (var_2127_cast, var_2092_cast));
            tensor<fp16, []> var_2190_to_fp16 = const()[name = tensor<string, []>("op_2190_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_123_cast = mul(x = var_2189_cast, y = var_2190_to_fp16);
            tensor<string, []> var_2193_equation_0 = const()[name = tensor<string, []>("op_2193_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_2193_cast = einsum(equation = var_2193_equation_0, values = (var_2131_cast, var_2096_cast));
            tensor<fp16, []> var_2194_to_fp16 = const()[name = tensor<string, []>("op_2194_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_125_cast = mul(x = var_2193_cast, y = var_2194_to_fp16);
            tensor<string, []> var_2197_equation_0 = const()[name = tensor<string, []>("op_2197_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_2197_cast = einsum(equation = var_2197_equation_0, values = (var_2135_cast, var_2100_cast));
            tensor<fp16, []> var_2198_to_fp16 = const()[name = tensor<string, []>("op_2198_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_127_cast = mul(x = var_2197_cast, y = var_2198_to_fp16);
            tensor<fp16, [2, 77, 1, 1024]> var_2200_cast = softmax(axis = var_1213, x = aw_113_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_2201_cast = softmax(axis = var_1213, x = aw_115_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_2202_cast = softmax(axis = var_1213, x = aw_117_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_2203_cast = softmax(axis = var_1213, x = aw_119_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_2204_cast = softmax(axis = var_1213, x = aw_121_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_2205_cast = softmax(axis = var_1213, x = aw_123_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_2206_cast = softmax(axis = var_1213, x = aw_125_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_2207_cast = softmax(axis = var_1213, x = aw_127_cast);
            tensor<string, []> var_2209_equation_0 = const()[name = tensor<string, []>("op_2209_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_2209_cast = einsum(equation = var_2209_equation_0, values = (var_2137_cast, var_2200_cast));
            tensor<string, []> var_2211_equation_0 = const()[name = tensor<string, []>("op_2211_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_2211_cast = einsum(equation = var_2211_equation_0, values = (var_2141_cast, var_2201_cast));
            tensor<string, []> var_2213_equation_0 = const()[name = tensor<string, []>("op_2213_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_2213_cast = einsum(equation = var_2213_equation_0, values = (var_2145_cast, var_2202_cast));
            tensor<string, []> var_2215_equation_0 = const()[name = tensor<string, []>("op_2215_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_2215_cast = einsum(equation = var_2215_equation_0, values = (var_2149_cast, var_2203_cast));
            tensor<string, []> var_2217_equation_0 = const()[name = tensor<string, []>("op_2217_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_2217_cast = einsum(equation = var_2217_equation_0, values = (var_2153_cast, var_2204_cast));
            tensor<string, []> var_2219_equation_0 = const()[name = tensor<string, []>("op_2219_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_2219_cast = einsum(equation = var_2219_equation_0, values = (var_2157_cast, var_2205_cast));
            tensor<string, []> var_2221_equation_0 = const()[name = tensor<string, []>("op_2221_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_2221_cast = einsum(equation = var_2221_equation_0, values = (var_2161_cast, var_2206_cast));
            tensor<string, []> var_2223_equation_0 = const()[name = tensor<string, []>("op_2223_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_2223_cast = einsum(equation = var_2223_equation_0, values = (var_2165_cast, var_2207_cast));
            tensor<bool, []> input_107_interleave_0 = const()[name = tensor<string, []>("input_107_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 640, 1, 1024]> input_107_cast = concat(axis = var_1213, interleave = input_107_interleave_0, values = (var_2209_cast, var_2211_cast, var_2213_cast, var_2215_cast, var_2217_cast, var_2219_cast, var_2221_cast, var_2223_cast));
            tensor<int32, [2]> var_2229 = const()[name = tensor<string, []>("op_2229"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2231 = const()[name = tensor<string, []>("op_2231"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_2233_pad_type_0 = const()[name = tensor<string, []>("op_2233_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_2233_pad_0 = const()[name = tensor<string, []>("op_2233_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> down_blocks_1_attentions_1_transformer_blocks_0_attn2_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_1_transformer_blocks_0_attn2_to_out_0_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(79984320)))];
            tensor<fp16, [640]> down_blocks_1_attentions_1_transformer_blocks_0_attn2_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_1_transformer_blocks_0_attn2_to_out_0_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(80803584)))];
            tensor<fp16, [2, 640, 1, 1024]> var_2233_cast = conv(bias = down_blocks_1_attentions_1_transformer_blocks_0_attn2_to_out_0_bias_to_fp16, dilations = var_2231, groups = var_1213, pad = var_2233_pad_0, pad_type = var_2233_pad_type_0, strides = var_2229, weight = down_blocks_1_attentions_1_transformer_blocks_0_attn2_to_out_0_weight_to_fp16, x = input_107_cast);
            tensor<fp16, [2, 640, 1, 1024]> inputs_23_cast = add(x = var_2233_cast, y = inputs_21_cast);
            tensor<int32, [1]> var_2237 = const()[name = tensor<string, []>("op_2237"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> channels_mean_23_cast = reduce_mean(axes = var_2237, keep_dims = var_1208, x = inputs_23_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_23_cast = sub(x = inputs_23_cast, y = channels_mean_23_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_sq_23_cast = mul(x = zero_mean_23_cast, y = zero_mean_23_cast);
            tensor<int32, [1]> var_2241 = const()[name = tensor<string, []>("op_2241"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> var_2242_cast = reduce_mean(axes = var_2241, keep_dims = var_1208, x = zero_mean_sq_23_cast);
            tensor<fp16, []> var_2243_to_fp16 = const()[name = tensor<string, []>("op_2243_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 1024]> var_2244_cast = add(x = var_2242_cast, y = var_2243_to_fp16);
            tensor<fp16, []> denom_23_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_23_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 1024]> denom_23_cast = rsqrt(epsilon = denom_23_epsilon_0_to_fp16, x = var_2244_cast);
            tensor<fp16, [2, 640, 1, 1024]> out_23_cast = mul(x = zero_mean_23_cast, y = denom_23_cast);
            tensor<fp16, [1, 640, 1, 1]> var_2248_to_fp16 = const()[name = tensor<string, []>("op_2248_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(80804928)))];
            tensor<fp16, [2, 640, 1, 1024]> var_2249_cast = add(x = out_23_cast, y = var_2248_to_fp16);
            tensor<fp16, [1, 640, 1, 1]> var_2251_to_fp16 = const()[name = tensor<string, []>("op_2251_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(80806272)))];
            tensor<fp16, [2, 640, 1, 1024]> input_109_cast = mul(x = var_2249_cast, y = var_2251_to_fp16);
            tensor<int32, [2]> var_2259 = const()[name = tensor<string, []>("op_2259"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2261 = const()[name = tensor<string, []>("op_2261"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_2263_pad_type_0 = const()[name = tensor<string, []>("op_2263_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_2263_pad_0 = const()[name = tensor<string, []>("op_2263_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [5120, 640, 1, 1]> down_blocks_1_attentions_1_transformer_blocks_0_ff_net_0_proj_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_1_transformer_blocks_0_ff_net_0_proj_weight_to_fp16"), val = tensor<fp16, [5120, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(80807616)))];
            tensor<fp16, [5120]> down_blocks_1_attentions_1_transformer_blocks_0_ff_net_0_proj_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_1_transformer_blocks_0_ff_net_0_proj_bias_to_fp16"), val = tensor<fp16, [5120]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(87361280)))];
            tensor<fp16, [2, 5120, 1, 1024]> var_2263_cast = conv(bias = down_blocks_1_attentions_1_transformer_blocks_0_ff_net_0_proj_bias_to_fp16, dilations = var_2261, groups = var_1213, pad = var_2263_pad_0, pad_type = var_2263_pad_type_0, strides = var_2259, weight = down_blocks_1_attentions_1_transformer_blocks_0_ff_net_0_proj_weight_to_fp16, x = input_109_cast);
            tensor<int32, [2]> var_2264_split_sizes_0 = const()[name = tensor<string, []>("op_2264_split_sizes_0"), val = tensor<int32, [2]>([2560, 2560])];
            tensor<int32, []> var_2264_axis_0 = const()[name = tensor<string, []>("op_2264_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [2, 2560, 1, 1024]> var_2264_cast_0, tensor<fp16, [2, 2560, 1, 1024]> var_2264_cast_1 = split(axis = var_2264_axis_0, split_sizes = var_2264_split_sizes_0, x = var_2263_cast);
            tensor<string, []> var_2266_mode_0 = const()[name = tensor<string, []>("op_2266_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [2, 2560, 1, 1024]> var_2266_cast = gelu(mode = var_2266_mode_0, x = var_2264_cast_1);
            tensor<fp16, [2, 2560, 1, 1024]> input_111_cast = mul(x = var_2264_cast_0, y = var_2266_cast);
            tensor<int32, [2]> var_2270 = const()[name = tensor<string, []>("op_2270"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2272 = const()[name = tensor<string, []>("op_2272"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_2274_pad_type_0 = const()[name = tensor<string, []>("op_2274_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_2274_pad_0 = const()[name = tensor<string, []>("op_2274_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 2560, 1, 1]> down_blocks_1_attentions_1_transformer_blocks_0_ff_net_2_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_1_transformer_blocks_0_ff_net_2_weight_to_fp16"), val = tensor<fp16, [640, 2560, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(87371584)))];
            tensor<fp16, [640]> down_blocks_1_attentions_1_transformer_blocks_0_ff_net_2_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_1_transformer_blocks_0_ff_net_2_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(90648448)))];
            tensor<fp16, [2, 640, 1, 1024]> var_2274_cast = conv(bias = down_blocks_1_attentions_1_transformer_blocks_0_ff_net_2_bias_to_fp16, dilations = var_2272, groups = var_1213, pad = var_2274_pad_0, pad_type = var_2274_pad_type_0, strides = var_2270, weight = down_blocks_1_attentions_1_transformer_blocks_0_ff_net_2_weight_to_fp16, x = input_111_cast);
            tensor<fp16, [2, 640, 1, 1024]> hidden_states_69_cast = add(x = var_2274_cast, y = inputs_23_cast);
            tensor<int32, [4]> var_2276 = const()[name = tensor<string, []>("op_2276"), val = tensor<int32, [4]>([2, 640, 32, 32])];
            tensor<fp16, [2, 640, 32, 32]> input_113_cast = reshape(shape = var_2276, x = hidden_states_69_cast);
            tensor<int32, [2]> var_2280 = const()[name = tensor<string, []>("op_2280"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2282 = const()[name = tensor<string, []>("op_2282"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_71_pad_type_0 = const()[name = tensor<string, []>("hidden_states_71_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_71_pad_0 = const()[name = tensor<string, []>("hidden_states_71_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> down_blocks_1_attentions_1_proj_out_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_1_proj_out_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(90649792)))];
            tensor<fp16, [640]> down_blocks_1_attentions_1_proj_out_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_1_proj_out_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(91469056)))];
            tensor<fp16, [2, 640, 32, 32]> hidden_states_71_cast = conv(bias = down_blocks_1_attentions_1_proj_out_bias_to_fp16, dilations = var_2282, groups = var_1213, pad = hidden_states_71_pad_0, pad_type = hidden_states_71_pad_type_0, strides = var_2280, weight = down_blocks_1_attentions_1_proj_out_weight_to_fp16, x = input_113_cast);
            tensor<fp16, [2, 640, 32, 32]> input_115_cast_1 = add(x = hidden_states_71_cast, y = hidden_states_59_cast);
            tensor<int32, [2]> var_2289 = const()[name = tensor<string, []>("op_2289"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> var_2291 = const()[name = tensor<string, []>("op_2291"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_117_pad_type_0 = const()[name = tensor<string, []>("input_117_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_117_pad_0 = const()[name = tensor<string, []>("input_117_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [640, 640, 3, 3]> down_blocks_1_downsamplers_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_downsamplers_0_conv_weight_to_fp16"), val = tensor<fp16, [640, 640, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(91470400)))];
            tensor<fp16, [640]> down_blocks_1_downsamplers_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_downsamplers_0_conv_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(98843264)))];
            tensor<fp16, [2, 640, 16, 16]> input_117_cast_1 = conv(bias = down_blocks_1_downsamplers_0_conv_bias_to_fp16, dilations = var_2291, groups = var_1213, pad = input_117_pad_0, pad_type = input_117_pad_type_0, strides = var_2289, weight = down_blocks_1_downsamplers_0_conv_weight_to_fp16, x = input_115_cast_1);
            tensor<bool, []> var_2314 = const()[name = tensor<string, []>("op_2314"), val = tensor<bool, []>(true)];
            tensor<int32, []> var_2319 = const()[name = tensor<string, []>("op_2319"), val = tensor<int32, []>(1)];
            tensor<int32, [5]> reshape_48_shape_0 = const()[name = tensor<string, []>("reshape_48_shape_0"), val = tensor<int32, [5]>([2, 32, 20, 16, 16])];
            tensor<fp16, [2, 32, 20, 16, 16]> reshape_48_cast = reshape(shape = reshape_48_shape_0, x = input_117_cast_1);
            tensor<int32, [3]> reduce_mean_36_axes_0 = const()[name = tensor<string, []>("reduce_mean_36_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_36_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_36_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_36_cast = reduce_mean(axes = reduce_mean_36_axes_0, keep_dims = reduce_mean_36_keep_dims_0, x = reshape_48_cast);
            tensor<fp16, [2, 32, 20, 16, 16]> sub_24_cast = sub(x = reshape_48_cast, y = reduce_mean_36_cast);
            tensor<fp16, [2, 32, 20, 16, 16]> square_12_cast = square(x = sub_24_cast);
            tensor<int32, [3]> reduce_mean_38_axes_0 = const()[name = tensor<string, []>("reduce_mean_38_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_38_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_38_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_38_cast = reduce_mean(axes = reduce_mean_38_axes_0, keep_dims = reduce_mean_38_keep_dims_0, x = square_12_cast);
            tensor<fp16, []> add_24_y_0_to_fp16 = const()[name = tensor<string, []>("add_24_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_24_cast = add(x = reduce_mean_38_cast, y = add_24_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_12_cast = sqrt(x = add_24_cast);
            tensor<fp16, [2, 32, 20, 16, 16]> real_div_12_cast = real_div(x = sub_24_cast, y = sqrt_12_cast);
            tensor<int32, [4]> reshape_49_shape_0 = const()[name = tensor<string, []>("reshape_49_shape_0"), val = tensor<int32, [4]>([2, 640, 16, 16])];
            tensor<fp16, [2, 640, 16, 16]> reshape_49_cast = reshape(shape = reshape_49_shape_0, x = real_div_12_cast);
            tensor<fp16, [640]> add_25_mean_0_to_fp16 = const()[name = tensor<string, []>("add_25_mean_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(98844608)))];
            tensor<fp16, [640]> add_25_variance_0_to_fp16 = const()[name = tensor<string, []>("add_25_variance_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(98845952)))];
            tensor<fp16, [640]> add_25_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_25_gamma_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(98847296)))];
            tensor<fp16, [640]> add_25_beta_0_to_fp16 = const()[name = tensor<string, []>("add_25_beta_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(98848640)))];
            tensor<fp16, []> add_25_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_25_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 640, 16, 16]> add_25_cast = batch_norm(beta = add_25_beta_0_to_fp16, epsilon = add_25_epsilon_0_to_fp16, gamma = add_25_gamma_0_to_fp16, mean = add_25_mean_0_to_fp16, variance = add_25_variance_0_to_fp16, x = reshape_49_cast);
            tensor<fp16, [2, 640, 16, 16]> input_121_cast = silu(x = add_25_cast);
            tensor<int32, [2]> var_2342 = const()[name = tensor<string, []>("op_2342"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2344 = const()[name = tensor<string, []>("op_2344"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_73_pad_type_0 = const()[name = tensor<string, []>("hidden_states_73_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_73_pad_0 = const()[name = tensor<string, []>("hidden_states_73_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 640, 3, 3]> down_blocks_2_resnets_0_conv1_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_resnets_0_conv1_weight_to_fp16"), val = tensor<fp16, [1280, 640, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(98849984)))];
            tensor<fp16, [1280]> down_blocks_2_resnets_0_conv1_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_resnets_0_conv1_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(113595648)))];
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_73_cast = conv(bias = down_blocks_2_resnets_0_conv1_bias_to_fp16, dilations = var_2344, groups = var_2319, pad = hidden_states_73_pad_0, pad_type = hidden_states_73_pad_type_0, strides = var_2342, weight = down_blocks_2_resnets_0_conv1_weight_to_fp16, x = input_121_cast);
            tensor<int32, [2]> var_2350 = const()[name = tensor<string, []>("op_2350"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2352 = const()[name = tensor<string, []>("op_2352"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> temb_9_pad_type_0 = const()[name = tensor<string, []>("temb_9_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> temb_9_pad_0 = const()[name = tensor<string, []>("temb_9_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> down_blocks_2_resnets_0_time_emb_proj_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_resnets_0_time_emb_proj_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(113598272)))];
            tensor<fp16, [1280]> down_blocks_2_resnets_0_time_emb_proj_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_resnets_0_time_emb_proj_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(116875136)))];
            tensor<fp16, [2, 1280, 1, 1]> temb_9_cast = conv(bias = down_blocks_2_resnets_0_time_emb_proj_bias_to_fp16, dilations = var_2352, groups = var_2319, pad = temb_9_pad_0, pad_type = temb_9_pad_type_0, strides = var_2350, weight = down_blocks_2_resnets_0_time_emb_proj_weight_to_fp16, x = input_15_cast_1);
            tensor<fp16, [2, 1280, 16, 16]> input_125_cast = add(x = hidden_states_73_cast, y = temb_9_cast);
            tensor<int32, [5]> reshape_52_shape_0 = const()[name = tensor<string, []>("reshape_52_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 16, 16])];
            tensor<fp16, [2, 32, 40, 16, 16]> reshape_52_cast = reshape(shape = reshape_52_shape_0, x = input_125_cast);
            tensor<int32, [3]> reduce_mean_39_axes_0 = const()[name = tensor<string, []>("reduce_mean_39_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_39_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_39_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_39_cast = reduce_mean(axes = reduce_mean_39_axes_0, keep_dims = reduce_mean_39_keep_dims_0, x = reshape_52_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> sub_26_cast = sub(x = reshape_52_cast, y = reduce_mean_39_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> square_13_cast = square(x = sub_26_cast);
            tensor<int32, [3]> reduce_mean_41_axes_0 = const()[name = tensor<string, []>("reduce_mean_41_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_41_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_41_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_41_cast = reduce_mean(axes = reduce_mean_41_axes_0, keep_dims = reduce_mean_41_keep_dims_0, x = square_13_cast);
            tensor<fp16, []> add_26_y_0_to_fp16 = const()[name = tensor<string, []>("add_26_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_26_cast = add(x = reduce_mean_41_cast, y = add_26_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_13_cast = sqrt(x = add_26_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> real_div_13_cast = real_div(x = sub_26_cast, y = sqrt_13_cast);
            tensor<int32, [4]> reshape_53_shape_0 = const()[name = tensor<string, []>("reshape_53_shape_0"), val = tensor<int32, [4]>([2, 1280, 16, 16])];
            tensor<fp16, [2, 1280, 16, 16]> reshape_53_cast = reshape(shape = reshape_53_shape_0, x = real_div_13_cast);
            tensor<fp16, [1280]> add_27_mean_0_to_fp16 = const()[name = tensor<string, []>("add_27_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(116877760)))];
            tensor<fp16, [1280]> add_27_variance_0_to_fp16 = const()[name = tensor<string, []>("add_27_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(116880384)))];
            tensor<fp16, [1280]> add_27_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_27_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(116883008)))];
            tensor<fp16, [1280]> add_27_beta_0_to_fp16 = const()[name = tensor<string, []>("add_27_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(116885632)))];
            tensor<fp16, []> add_27_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_27_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 16, 16]> add_27_cast = batch_norm(beta = add_27_beta_0_to_fp16, epsilon = add_27_epsilon_0_to_fp16, gamma = add_27_gamma_0_to_fp16, mean = add_27_mean_0_to_fp16, variance = add_27_variance_0_to_fp16, x = reshape_53_cast);
            tensor<fp16, [2, 1280, 16, 16]> input_129_cast = silu(x = add_27_cast);
            tensor<int32, [2]> var_2362 = const()[name = tensor<string, []>("op_2362"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2364 = const()[name = tensor<string, []>("op_2364"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_75_pad_type_0 = const()[name = tensor<string, []>("hidden_states_75_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_75_pad_0 = const()[name = tensor<string, []>("hidden_states_75_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 1280, 3, 3]> down_blocks_2_resnets_0_conv2_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_resnets_0_conv2_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(116888256)))];
            tensor<fp16, [1280]> down_blocks_2_resnets_0_conv2_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_resnets_0_conv2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(146379520)))];
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_75_cast = conv(bias = down_blocks_2_resnets_0_conv2_bias_to_fp16, dilations = var_2364, groups = var_2319, pad = hidden_states_75_pad_0, pad_type = hidden_states_75_pad_type_0, strides = var_2362, weight = down_blocks_2_resnets_0_conv2_weight_to_fp16, x = input_129_cast);
            tensor<int32, [2]> var_2369 = const()[name = tensor<string, []>("op_2369"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2371 = const()[name = tensor<string, []>("op_2371"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_3_pad_type_0 = const()[name = tensor<string, []>("x_3_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_3_pad_0 = const()[name = tensor<string, []>("x_3_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 640, 1, 1]> down_blocks_2_resnets_0_conv_shortcut_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_resnets_0_conv_shortcut_weight_to_fp16"), val = tensor<fp16, [1280, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(146382144)))];
            tensor<fp16, [1280]> down_blocks_2_resnets_0_conv_shortcut_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_resnets_0_conv_shortcut_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(148020608)))];
            tensor<fp16, [2, 1280, 16, 16]> x_3_cast = conv(bias = down_blocks_2_resnets_0_conv_shortcut_bias_to_fp16, dilations = var_2371, groups = var_2319, pad = x_3_pad_0, pad_type = x_3_pad_type_0, strides = var_2369, weight = down_blocks_2_resnets_0_conv_shortcut_weight_to_fp16, x = input_117_cast_1);
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_77_cast = add(x = x_3_cast, y = hidden_states_75_cast);
            tensor<int32, [5]> reshape_56_shape_0 = const()[name = tensor<string, []>("reshape_56_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 16, 16])];
            tensor<fp16, [2, 32, 40, 16, 16]> reshape_56_cast = reshape(shape = reshape_56_shape_0, x = hidden_states_77_cast);
            tensor<int32, [3]> reduce_mean_42_axes_0 = const()[name = tensor<string, []>("reduce_mean_42_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_42_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_42_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_42_cast = reduce_mean(axes = reduce_mean_42_axes_0, keep_dims = reduce_mean_42_keep_dims_0, x = reshape_56_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> sub_28_cast = sub(x = reshape_56_cast, y = reduce_mean_42_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> square_14_cast = square(x = sub_28_cast);
            tensor<int32, [3]> reduce_mean_44_axes_0 = const()[name = tensor<string, []>("reduce_mean_44_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_44_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_44_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_44_cast = reduce_mean(axes = reduce_mean_44_axes_0, keep_dims = reduce_mean_44_keep_dims_0, x = square_14_cast);
            tensor<fp16, []> add_28_y_0_to_fp16 = const()[name = tensor<string, []>("add_28_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_28_cast = add(x = reduce_mean_44_cast, y = add_28_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_14_cast = sqrt(x = add_28_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> real_div_14_cast = real_div(x = sub_28_cast, y = sqrt_14_cast);
            tensor<int32, [4]> reshape_57_shape_0 = const()[name = tensor<string, []>("reshape_57_shape_0"), val = tensor<int32, [4]>([2, 1280, 16, 16])];
            tensor<fp16, [2, 1280, 16, 16]> reshape_57_cast = reshape(shape = reshape_57_shape_0, x = real_div_14_cast);
            tensor<fp16, [1280]> add_29_mean_0_to_fp16 = const()[name = tensor<string, []>("add_29_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(148023232)))];
            tensor<fp16, [1280]> add_29_variance_0_to_fp16 = const()[name = tensor<string, []>("add_29_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(148025856)))];
            tensor<fp16, [1280]> add_29_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_29_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(148028480)))];
            tensor<fp16, [1280]> add_29_beta_0_to_fp16 = const()[name = tensor<string, []>("add_29_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(148031104)))];
            tensor<fp16, []> add_29_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_29_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 16, 16]> add_29_cast = batch_norm(beta = add_29_beta_0_to_fp16, epsilon = add_29_epsilon_0_to_fp16, gamma = add_29_gamma_0_to_fp16, mean = add_29_mean_0_to_fp16, variance = add_29_variance_0_to_fp16, x = reshape_57_cast);
            tensor<int32, [2]> var_2391 = const()[name = tensor<string, []>("op_2391"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2393 = const()[name = tensor<string, []>("op_2393"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_79_pad_type_0 = const()[name = tensor<string, []>("hidden_states_79_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_79_pad_0 = const()[name = tensor<string, []>("hidden_states_79_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> down_blocks_2_attentions_0_proj_in_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_0_proj_in_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(148033728)))];
            tensor<fp16, [1280]> down_blocks_2_attentions_0_proj_in_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_0_proj_in_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(151310592)))];
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_79_cast = conv(bias = down_blocks_2_attentions_0_proj_in_bias_to_fp16, dilations = var_2393, groups = var_2319, pad = hidden_states_79_pad_0, pad_type = hidden_states_79_pad_type_0, strides = var_2391, weight = down_blocks_2_attentions_0_proj_in_weight_to_fp16, x = add_29_cast);
            tensor<int32, [4]> var_2398 = const()[name = tensor<string, []>("op_2398"), val = tensor<int32, [4]>([2, 1280, 1, 256])];
            tensor<fp16, [2, 1280, 1, 256]> inputs_25_cast = reshape(shape = var_2398, x = hidden_states_79_cast);
            tensor<int32, [1]> var_2408 = const()[name = tensor<string, []>("op_2408"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> channels_mean_25_cast = reduce_mean(axes = var_2408, keep_dims = var_2314, x = inputs_25_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_25_cast = sub(x = inputs_25_cast, y = channels_mean_25_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_sq_25_cast = mul(x = zero_mean_25_cast, y = zero_mean_25_cast);
            tensor<int32, [1]> var_2412 = const()[name = tensor<string, []>("op_2412"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> var_2413_cast = reduce_mean(axes = var_2412, keep_dims = var_2314, x = zero_mean_sq_25_cast);
            tensor<fp16, []> var_2414_to_fp16 = const()[name = tensor<string, []>("op_2414_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 256]> var_2415_cast = add(x = var_2413_cast, y = var_2414_to_fp16);
            tensor<fp16, []> denom_25_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_25_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 256]> denom_25_cast = rsqrt(epsilon = denom_25_epsilon_0_to_fp16, x = var_2415_cast);
            tensor<fp16, [2, 1280, 1, 256]> out_25_cast = mul(x = zero_mean_25_cast, y = denom_25_cast);
            tensor<fp16, [1, 1280, 1, 1]> var_2419_to_fp16 = const()[name = tensor<string, []>("op_2419_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(151313216)))];
            tensor<fp16, [2, 1280, 1, 256]> var_2420_cast = add(x = out_25_cast, y = var_2419_to_fp16);
            tensor<fp16, [1, 1280, 1, 1]> var_2422_to_fp16 = const()[name = tensor<string, []>("op_2422_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(151315840)))];
            tensor<fp16, [2, 1280, 1, 256]> hidden_states_81_cast = mul(x = var_2420_cast, y = var_2422_to_fp16);
            tensor<int32, [2]> var_2429 = const()[name = tensor<string, []>("op_2429"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2431 = const()[name = tensor<string, []>("op_2431"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_17_pad_type_0 = const()[name = tensor<string, []>("q_17_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_17_pad_0 = const()[name = tensor<string, []>("q_17_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> down_blocks_2_attentions_0_transformer_blocks_0_attn1_to_q_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_0_transformer_blocks_0_attn1_to_q_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(151318464)))];
            tensor<fp16, [2, 1280, 1, 256]> q_17_cast = conv(dilations = var_2431, groups = var_2319, pad = q_17_pad_0, pad_type = q_17_pad_type_0, strides = var_2429, weight = down_blocks_2_attentions_0_transformer_blocks_0_attn1_to_q_weight_to_fp16, x = hidden_states_81_cast);
            tensor<int32, [2]> var_2435 = const()[name = tensor<string, []>("op_2435"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2437 = const()[name = tensor<string, []>("op_2437"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_33_pad_type_0 = const()[name = tensor<string, []>("k_33_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_33_pad_0 = const()[name = tensor<string, []>("k_33_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> down_blocks_2_attentions_0_transformer_blocks_0_attn1_to_k_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_0_transformer_blocks_0_attn1_to_k_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(154595328)))];
            tensor<fp16, [2, 1280, 1, 256]> k_33_cast = conv(dilations = var_2437, groups = var_2319, pad = k_33_pad_0, pad_type = k_33_pad_type_0, strides = var_2435, weight = down_blocks_2_attentions_0_transformer_blocks_0_attn1_to_k_weight_to_fp16, x = hidden_states_81_cast);
            tensor<int32, [2]> var_2441 = const()[name = tensor<string, []>("op_2441"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2443 = const()[name = tensor<string, []>("op_2443"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_17_pad_type_0 = const()[name = tensor<string, []>("v_17_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_17_pad_0 = const()[name = tensor<string, []>("v_17_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> down_blocks_2_attentions_0_transformer_blocks_0_attn1_to_v_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_0_transformer_blocks_0_attn1_to_v_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(157872192)))];
            tensor<fp16, [2, 1280, 1, 256]> v_17_cast = conv(dilations = var_2443, groups = var_2319, pad = v_17_pad_0, pad_type = v_17_pad_type_0, strides = var_2441, weight = down_blocks_2_attentions_0_transformer_blocks_0_attn1_to_v_weight_to_fp16, x = hidden_states_81_cast);
            tensor<int32, [4]> var_2447_begin_0 = const()[name = tensor<string, []>("op_2447_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_2447_end_0 = const()[name = tensor<string, []>("op_2447_end_0"), val = tensor<int32, [4]>([2, 160, 1, 256])];
            tensor<bool, [4]> var_2447_end_mask_0 = const()[name = tensor<string, []>("op_2447_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_2447_cast = slice_by_index(begin = var_2447_begin_0, end = var_2447_end_0, end_mask = var_2447_end_mask_0, x = q_17_cast);
            tensor<int32, [4]> var_2451_begin_0 = const()[name = tensor<string, []>("op_2451_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_2451_end_0 = const()[name = tensor<string, []>("op_2451_end_0"), val = tensor<int32, [4]>([2, 320, 1, 256])];
            tensor<bool, [4]> var_2451_end_mask_0 = const()[name = tensor<string, []>("op_2451_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_2451_cast = slice_by_index(begin = var_2451_begin_0, end = var_2451_end_0, end_mask = var_2451_end_mask_0, x = q_17_cast);
            tensor<int32, [4]> var_2455_begin_0 = const()[name = tensor<string, []>("op_2455_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_2455_end_0 = const()[name = tensor<string, []>("op_2455_end_0"), val = tensor<int32, [4]>([2, 480, 1, 256])];
            tensor<bool, [4]> var_2455_end_mask_0 = const()[name = tensor<string, []>("op_2455_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_2455_cast = slice_by_index(begin = var_2455_begin_0, end = var_2455_end_0, end_mask = var_2455_end_mask_0, x = q_17_cast);
            tensor<int32, [4]> var_2459_begin_0 = const()[name = tensor<string, []>("op_2459_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_2459_end_0 = const()[name = tensor<string, []>("op_2459_end_0"), val = tensor<int32, [4]>([2, 640, 1, 256])];
            tensor<bool, [4]> var_2459_end_mask_0 = const()[name = tensor<string, []>("op_2459_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_2459_cast = slice_by_index(begin = var_2459_begin_0, end = var_2459_end_0, end_mask = var_2459_end_mask_0, x = q_17_cast);
            tensor<int32, [4]> var_2463_begin_0 = const()[name = tensor<string, []>("op_2463_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_2463_end_0 = const()[name = tensor<string, []>("op_2463_end_0"), val = tensor<int32, [4]>([2, 800, 1, 256])];
            tensor<bool, [4]> var_2463_end_mask_0 = const()[name = tensor<string, []>("op_2463_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_2463_cast = slice_by_index(begin = var_2463_begin_0, end = var_2463_end_0, end_mask = var_2463_end_mask_0, x = q_17_cast);
            tensor<int32, [4]> var_2467_begin_0 = const()[name = tensor<string, []>("op_2467_begin_0"), val = tensor<int32, [4]>([0, 800, 0, 0])];
            tensor<int32, [4]> var_2467_end_0 = const()[name = tensor<string, []>("op_2467_end_0"), val = tensor<int32, [4]>([2, 960, 1, 256])];
            tensor<bool, [4]> var_2467_end_mask_0 = const()[name = tensor<string, []>("op_2467_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_2467_cast = slice_by_index(begin = var_2467_begin_0, end = var_2467_end_0, end_mask = var_2467_end_mask_0, x = q_17_cast);
            tensor<int32, [4]> var_2471_begin_0 = const()[name = tensor<string, []>("op_2471_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_2471_end_0 = const()[name = tensor<string, []>("op_2471_end_0"), val = tensor<int32, [4]>([2, 1120, 1, 256])];
            tensor<bool, [4]> var_2471_end_mask_0 = const()[name = tensor<string, []>("op_2471_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_2471_cast = slice_by_index(begin = var_2471_begin_0, end = var_2471_end_0, end_mask = var_2471_end_mask_0, x = q_17_cast);
            tensor<int32, [4]> var_2475_begin_0 = const()[name = tensor<string, []>("op_2475_begin_0"), val = tensor<int32, [4]>([0, 1120, 0, 0])];
            tensor<int32, [4]> var_2475_end_0 = const()[name = tensor<string, []>("op_2475_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 256])];
            tensor<bool, [4]> var_2475_end_mask_0 = const()[name = tensor<string, []>("op_2475_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_2475_cast = slice_by_index(begin = var_2475_begin_0, end = var_2475_end_0, end_mask = var_2475_end_mask_0, x = q_17_cast);
            tensor<int32, [4]> k_35_perm_0 = const()[name = tensor<string, []>("k_35_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_2482_begin_0 = const()[name = tensor<string, []>("op_2482_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_2482_end_0 = const()[name = tensor<string, []>("op_2482_end_0"), val = tensor<int32, [4]>([2, 256, 1, 160])];
            tensor<bool, [4]> var_2482_end_mask_0 = const()[name = tensor<string, []>("op_2482_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 1280]> transpose_69 = transpose(perm = k_35_perm_0, x = k_33_cast);
            tensor<fp16, [2, 256, 1, 160]> var_2482_cast = slice_by_index(begin = var_2482_begin_0, end = var_2482_end_0, end_mask = var_2482_end_mask_0, x = transpose_69);
            tensor<int32, [4]> var_2486_begin_0 = const()[name = tensor<string, []>("op_2486_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 160])];
            tensor<int32, [4]> var_2486_end_0 = const()[name = tensor<string, []>("op_2486_end_0"), val = tensor<int32, [4]>([2, 256, 1, 320])];
            tensor<bool, [4]> var_2486_end_mask_0 = const()[name = tensor<string, []>("op_2486_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_2486_cast = slice_by_index(begin = var_2486_begin_0, end = var_2486_end_0, end_mask = var_2486_end_mask_0, x = transpose_69);
            tensor<int32, [4]> var_2490_begin_0 = const()[name = tensor<string, []>("op_2490_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_2490_end_0 = const()[name = tensor<string, []>("op_2490_end_0"), val = tensor<int32, [4]>([2, 256, 1, 480])];
            tensor<bool, [4]> var_2490_end_mask_0 = const()[name = tensor<string, []>("op_2490_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_2490_cast = slice_by_index(begin = var_2490_begin_0, end = var_2490_end_0, end_mask = var_2490_end_mask_0, x = transpose_69);
            tensor<int32, [4]> var_2494_begin_0 = const()[name = tensor<string, []>("op_2494_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 480])];
            tensor<int32, [4]> var_2494_end_0 = const()[name = tensor<string, []>("op_2494_end_0"), val = tensor<int32, [4]>([2, 256, 1, 640])];
            tensor<bool, [4]> var_2494_end_mask_0 = const()[name = tensor<string, []>("op_2494_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_2494_cast = slice_by_index(begin = var_2494_begin_0, end = var_2494_end_0, end_mask = var_2494_end_mask_0, x = transpose_69);
            tensor<int32, [4]> var_2498_begin_0 = const()[name = tensor<string, []>("op_2498_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 640])];
            tensor<int32, [4]> var_2498_end_0 = const()[name = tensor<string, []>("op_2498_end_0"), val = tensor<int32, [4]>([2, 256, 1, 800])];
            tensor<bool, [4]> var_2498_end_mask_0 = const()[name = tensor<string, []>("op_2498_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_2498_cast = slice_by_index(begin = var_2498_begin_0, end = var_2498_end_0, end_mask = var_2498_end_mask_0, x = transpose_69);
            tensor<int32, [4]> var_2502_begin_0 = const()[name = tensor<string, []>("op_2502_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 800])];
            tensor<int32, [4]> var_2502_end_0 = const()[name = tensor<string, []>("op_2502_end_0"), val = tensor<int32, [4]>([2, 256, 1, 960])];
            tensor<bool, [4]> var_2502_end_mask_0 = const()[name = tensor<string, []>("op_2502_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_2502_cast = slice_by_index(begin = var_2502_begin_0, end = var_2502_end_0, end_mask = var_2502_end_mask_0, x = transpose_69);
            tensor<int32, [4]> var_2506_begin_0 = const()[name = tensor<string, []>("op_2506_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 960])];
            tensor<int32, [4]> var_2506_end_0 = const()[name = tensor<string, []>("op_2506_end_0"), val = tensor<int32, [4]>([2, 256, 1, 1120])];
            tensor<bool, [4]> var_2506_end_mask_0 = const()[name = tensor<string, []>("op_2506_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_2506_cast = slice_by_index(begin = var_2506_begin_0, end = var_2506_end_0, end_mask = var_2506_end_mask_0, x = transpose_69);
            tensor<int32, [4]> var_2510_begin_0 = const()[name = tensor<string, []>("op_2510_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1120])];
            tensor<int32, [4]> var_2510_end_0 = const()[name = tensor<string, []>("op_2510_end_0"), val = tensor<int32, [4]>([2, 256, 1, 1280])];
            tensor<bool, [4]> var_2510_end_mask_0 = const()[name = tensor<string, []>("op_2510_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_2510_cast = slice_by_index(begin = var_2510_begin_0, end = var_2510_end_0, end_mask = var_2510_end_mask_0, x = transpose_69);
            tensor<int32, [4]> var_2512_begin_0 = const()[name = tensor<string, []>("op_2512_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_2512_end_0 = const()[name = tensor<string, []>("op_2512_end_0"), val = tensor<int32, [4]>([2, 160, 1, 256])];
            tensor<bool, [4]> var_2512_end_mask_0 = const()[name = tensor<string, []>("op_2512_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_2512_cast = slice_by_index(begin = var_2512_begin_0, end = var_2512_end_0, end_mask = var_2512_end_mask_0, x = v_17_cast);
            tensor<int32, [4]> var_2516_begin_0 = const()[name = tensor<string, []>("op_2516_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_2516_end_0 = const()[name = tensor<string, []>("op_2516_end_0"), val = tensor<int32, [4]>([2, 320, 1, 256])];
            tensor<bool, [4]> var_2516_end_mask_0 = const()[name = tensor<string, []>("op_2516_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_2516_cast = slice_by_index(begin = var_2516_begin_0, end = var_2516_end_0, end_mask = var_2516_end_mask_0, x = v_17_cast);
            tensor<int32, [4]> var_2520_begin_0 = const()[name = tensor<string, []>("op_2520_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_2520_end_0 = const()[name = tensor<string, []>("op_2520_end_0"), val = tensor<int32, [4]>([2, 480, 1, 256])];
            tensor<bool, [4]> var_2520_end_mask_0 = const()[name = tensor<string, []>("op_2520_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_2520_cast = slice_by_index(begin = var_2520_begin_0, end = var_2520_end_0, end_mask = var_2520_end_mask_0, x = v_17_cast);
            tensor<int32, [4]> var_2524_begin_0 = const()[name = tensor<string, []>("op_2524_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_2524_end_0 = const()[name = tensor<string, []>("op_2524_end_0"), val = tensor<int32, [4]>([2, 640, 1, 256])];
            tensor<bool, [4]> var_2524_end_mask_0 = const()[name = tensor<string, []>("op_2524_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_2524_cast = slice_by_index(begin = var_2524_begin_0, end = var_2524_end_0, end_mask = var_2524_end_mask_0, x = v_17_cast);
            tensor<int32, [4]> var_2528_begin_0 = const()[name = tensor<string, []>("op_2528_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_2528_end_0 = const()[name = tensor<string, []>("op_2528_end_0"), val = tensor<int32, [4]>([2, 800, 1, 256])];
            tensor<bool, [4]> var_2528_end_mask_0 = const()[name = tensor<string, []>("op_2528_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_2528_cast = slice_by_index(begin = var_2528_begin_0, end = var_2528_end_0, end_mask = var_2528_end_mask_0, x = v_17_cast);
            tensor<int32, [4]> var_2532_begin_0 = const()[name = tensor<string, []>("op_2532_begin_0"), val = tensor<int32, [4]>([0, 800, 0, 0])];
            tensor<int32, [4]> var_2532_end_0 = const()[name = tensor<string, []>("op_2532_end_0"), val = tensor<int32, [4]>([2, 960, 1, 256])];
            tensor<bool, [4]> var_2532_end_mask_0 = const()[name = tensor<string, []>("op_2532_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_2532_cast = slice_by_index(begin = var_2532_begin_0, end = var_2532_end_0, end_mask = var_2532_end_mask_0, x = v_17_cast);
            tensor<int32, [4]> var_2536_begin_0 = const()[name = tensor<string, []>("op_2536_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_2536_end_0 = const()[name = tensor<string, []>("op_2536_end_0"), val = tensor<int32, [4]>([2, 1120, 1, 256])];
            tensor<bool, [4]> var_2536_end_mask_0 = const()[name = tensor<string, []>("op_2536_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_2536_cast = slice_by_index(begin = var_2536_begin_0, end = var_2536_end_0, end_mask = var_2536_end_mask_0, x = v_17_cast);
            tensor<int32, [4]> var_2540_begin_0 = const()[name = tensor<string, []>("op_2540_begin_0"), val = tensor<int32, [4]>([0, 1120, 0, 0])];
            tensor<int32, [4]> var_2540_end_0 = const()[name = tensor<string, []>("op_2540_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 256])];
            tensor<bool, [4]> var_2540_end_mask_0 = const()[name = tensor<string, []>("op_2540_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_2540_cast = slice_by_index(begin = var_2540_begin_0, end = var_2540_end_0, end_mask = var_2540_end_mask_0, x = v_17_cast);
            tensor<string, []> var_2544_equation_0 = const()[name = tensor<string, []>("op_2544_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_2544_cast = einsum(equation = var_2544_equation_0, values = (var_2482_cast, var_2447_cast));
            tensor<fp16, []> var_2545_to_fp16 = const()[name = tensor<string, []>("op_2545_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_129_cast = mul(x = var_2544_cast, y = var_2545_to_fp16);
            tensor<string, []> var_2548_equation_0 = const()[name = tensor<string, []>("op_2548_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_2548_cast = einsum(equation = var_2548_equation_0, values = (var_2486_cast, var_2451_cast));
            tensor<fp16, []> var_2549_to_fp16 = const()[name = tensor<string, []>("op_2549_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_131_cast = mul(x = var_2548_cast, y = var_2549_to_fp16);
            tensor<string, []> var_2552_equation_0 = const()[name = tensor<string, []>("op_2552_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_2552_cast = einsum(equation = var_2552_equation_0, values = (var_2490_cast, var_2455_cast));
            tensor<fp16, []> var_2553_to_fp16 = const()[name = tensor<string, []>("op_2553_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_133_cast = mul(x = var_2552_cast, y = var_2553_to_fp16);
            tensor<string, []> var_2556_equation_0 = const()[name = tensor<string, []>("op_2556_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_2556_cast = einsum(equation = var_2556_equation_0, values = (var_2494_cast, var_2459_cast));
            tensor<fp16, []> var_2557_to_fp16 = const()[name = tensor<string, []>("op_2557_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_135_cast = mul(x = var_2556_cast, y = var_2557_to_fp16);
            tensor<string, []> var_2560_equation_0 = const()[name = tensor<string, []>("op_2560_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_2560_cast = einsum(equation = var_2560_equation_0, values = (var_2498_cast, var_2463_cast));
            tensor<fp16, []> var_2561_to_fp16 = const()[name = tensor<string, []>("op_2561_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_137_cast = mul(x = var_2560_cast, y = var_2561_to_fp16);
            tensor<string, []> var_2564_equation_0 = const()[name = tensor<string, []>("op_2564_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_2564_cast = einsum(equation = var_2564_equation_0, values = (var_2502_cast, var_2467_cast));
            tensor<fp16, []> var_2565_to_fp16 = const()[name = tensor<string, []>("op_2565_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_139_cast = mul(x = var_2564_cast, y = var_2565_to_fp16);
            tensor<string, []> var_2568_equation_0 = const()[name = tensor<string, []>("op_2568_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_2568_cast = einsum(equation = var_2568_equation_0, values = (var_2506_cast, var_2471_cast));
            tensor<fp16, []> var_2569_to_fp16 = const()[name = tensor<string, []>("op_2569_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_141_cast = mul(x = var_2568_cast, y = var_2569_to_fp16);
            tensor<string, []> var_2572_equation_0 = const()[name = tensor<string, []>("op_2572_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_2572_cast = einsum(equation = var_2572_equation_0, values = (var_2510_cast, var_2475_cast));
            tensor<fp16, []> var_2573_to_fp16 = const()[name = tensor<string, []>("op_2573_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_143_cast = mul(x = var_2572_cast, y = var_2573_to_fp16);
            tensor<fp16, [2, 256, 1, 256]> var_2575_cast = softmax(axis = var_2319, x = aw_129_cast);
            tensor<fp16, [2, 256, 1, 256]> var_2576_cast = softmax(axis = var_2319, x = aw_131_cast);
            tensor<fp16, [2, 256, 1, 256]> var_2577_cast = softmax(axis = var_2319, x = aw_133_cast);
            tensor<fp16, [2, 256, 1, 256]> var_2578_cast = softmax(axis = var_2319, x = aw_135_cast);
            tensor<fp16, [2, 256, 1, 256]> var_2579_cast = softmax(axis = var_2319, x = aw_137_cast);
            tensor<fp16, [2, 256, 1, 256]> var_2580_cast = softmax(axis = var_2319, x = aw_139_cast);
            tensor<fp16, [2, 256, 1, 256]> var_2581_cast = softmax(axis = var_2319, x = aw_141_cast);
            tensor<fp16, [2, 256, 1, 256]> var_2582_cast = softmax(axis = var_2319, x = aw_143_cast);
            tensor<string, []> var_2584_equation_0 = const()[name = tensor<string, []>("op_2584_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_2584_cast = einsum(equation = var_2584_equation_0, values = (var_2512_cast, var_2575_cast));
            tensor<string, []> var_2586_equation_0 = const()[name = tensor<string, []>("op_2586_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_2586_cast = einsum(equation = var_2586_equation_0, values = (var_2516_cast, var_2576_cast));
            tensor<string, []> var_2588_equation_0 = const()[name = tensor<string, []>("op_2588_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_2588_cast = einsum(equation = var_2588_equation_0, values = (var_2520_cast, var_2577_cast));
            tensor<string, []> var_2590_equation_0 = const()[name = tensor<string, []>("op_2590_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_2590_cast = einsum(equation = var_2590_equation_0, values = (var_2524_cast, var_2578_cast));
            tensor<string, []> var_2592_equation_0 = const()[name = tensor<string, []>("op_2592_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_2592_cast = einsum(equation = var_2592_equation_0, values = (var_2528_cast, var_2579_cast));
            tensor<string, []> var_2594_equation_0 = const()[name = tensor<string, []>("op_2594_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_2594_cast = einsum(equation = var_2594_equation_0, values = (var_2532_cast, var_2580_cast));
            tensor<string, []> var_2596_equation_0 = const()[name = tensor<string, []>("op_2596_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_2596_cast = einsum(equation = var_2596_equation_0, values = (var_2536_cast, var_2581_cast));
            tensor<string, []> var_2598_equation_0 = const()[name = tensor<string, []>("op_2598_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_2598_cast = einsum(equation = var_2598_equation_0, values = (var_2540_cast, var_2582_cast));
            tensor<bool, []> input_133_interleave_0 = const()[name = tensor<string, []>("input_133_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 1280, 1, 256]> input_133_cast = concat(axis = var_2319, interleave = input_133_interleave_0, values = (var_2584_cast, var_2586_cast, var_2588_cast, var_2590_cast, var_2592_cast, var_2594_cast, var_2596_cast, var_2598_cast));
            tensor<int32, [2]> var_2604 = const()[name = tensor<string, []>("op_2604"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2606 = const()[name = tensor<string, []>("op_2606"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_2608_pad_type_0 = const()[name = tensor<string, []>("op_2608_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_2608_pad_0 = const()[name = tensor<string, []>("op_2608_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> down_blocks_2_attentions_0_transformer_blocks_0_attn1_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_0_transformer_blocks_0_attn1_to_out_0_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(161149056)))];
            tensor<fp16, [1280]> down_blocks_2_attentions_0_transformer_blocks_0_attn1_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_0_transformer_blocks_0_attn1_to_out_0_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(164425920)))];
            tensor<fp16, [2, 1280, 1, 256]> var_2608_cast = conv(bias = down_blocks_2_attentions_0_transformer_blocks_0_attn1_to_out_0_bias_to_fp16, dilations = var_2606, groups = var_2319, pad = var_2608_pad_0, pad_type = var_2608_pad_type_0, strides = var_2604, weight = down_blocks_2_attentions_0_transformer_blocks_0_attn1_to_out_0_weight_to_fp16, x = input_133_cast);
            tensor<fp16, [2, 1280, 1, 256]> inputs_27_cast = add(x = var_2608_cast, y = inputs_25_cast);
            tensor<int32, [1]> var_2612 = const()[name = tensor<string, []>("op_2612"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> channels_mean_27_cast = reduce_mean(axes = var_2612, keep_dims = var_2314, x = inputs_27_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_27_cast = sub(x = inputs_27_cast, y = channels_mean_27_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_sq_27_cast = mul(x = zero_mean_27_cast, y = zero_mean_27_cast);
            tensor<int32, [1]> var_2616 = const()[name = tensor<string, []>("op_2616"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> var_2617_cast = reduce_mean(axes = var_2616, keep_dims = var_2314, x = zero_mean_sq_27_cast);
            tensor<fp16, []> var_2618_to_fp16 = const()[name = tensor<string, []>("op_2618_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 256]> var_2619_cast = add(x = var_2617_cast, y = var_2618_to_fp16);
            tensor<fp16, []> denom_27_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_27_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 256]> denom_27_cast = rsqrt(epsilon = denom_27_epsilon_0_to_fp16, x = var_2619_cast);
            tensor<fp16, [2, 1280, 1, 256]> out_27_cast = mul(x = zero_mean_27_cast, y = denom_27_cast);
            tensor<fp16, [1, 1280, 1, 1]> var_2623_to_fp16 = const()[name = tensor<string, []>("op_2623_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(164428544)))];
            tensor<fp16, [2, 1280, 1, 256]> var_2624_cast = add(x = out_27_cast, y = var_2623_to_fp16);
            tensor<fp16, [1, 1280, 1, 1]> var_2626_to_fp16 = const()[name = tensor<string, []>("op_2626_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(164431168)))];
            tensor<fp16, [2, 1280, 1, 256]> hidden_states_83_cast = mul(x = var_2624_cast, y = var_2626_to_fp16);
            tensor<int32, [2]> var_2633 = const()[name = tensor<string, []>("op_2633"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2635 = const()[name = tensor<string, []>("op_2635"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_19_pad_type_0 = const()[name = tensor<string, []>("q_19_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_19_pad_0 = const()[name = tensor<string, []>("q_19_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> down_blocks_2_attentions_0_transformer_blocks_0_attn2_to_q_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_0_transformer_blocks_0_attn2_to_q_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(164433792)))];
            tensor<fp16, [2, 1280, 1, 256]> q_19_cast = conv(dilations = var_2635, groups = var_2319, pad = q_19_pad_0, pad_type = q_19_pad_type_0, strides = var_2633, weight = down_blocks_2_attentions_0_transformer_blocks_0_attn2_to_q_weight_to_fp16, x = hidden_states_83_cast);
            tensor<int32, [2]> var_2639 = const()[name = tensor<string, []>("op_2639"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2641 = const()[name = tensor<string, []>("op_2641"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_37_pad_type_0 = const()[name = tensor<string, []>("k_37_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_37_pad_0 = const()[name = tensor<string, []>("k_37_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 768, 1, 1]> down_blocks_2_attentions_0_transformer_blocks_0_attn2_to_k_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_0_transformer_blocks_0_attn2_to_k_weight_to_fp16"), val = tensor<fp16, [1280, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(167710656)))];
            tensor<fp16, [2, 1280, 1, 77]> k_37_cast = conv(dilations = var_2641, groups = var_2319, pad = k_37_pad_0, pad_type = k_37_pad_type_0, strides = var_2639, weight = down_blocks_2_attentions_0_transformer_blocks_0_attn2_to_k_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [2]> var_2645 = const()[name = tensor<string, []>("op_2645"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2647 = const()[name = tensor<string, []>("op_2647"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_19_pad_type_0 = const()[name = tensor<string, []>("v_19_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_19_pad_0 = const()[name = tensor<string, []>("v_19_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 768, 1, 1]> down_blocks_2_attentions_0_transformer_blocks_0_attn2_to_v_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_0_transformer_blocks_0_attn2_to_v_weight_to_fp16"), val = tensor<fp16, [1280, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(169676800)))];
            tensor<fp16, [2, 1280, 1, 77]> v_19_cast = conv(dilations = var_2647, groups = var_2319, pad = v_19_pad_0, pad_type = v_19_pad_type_0, strides = var_2645, weight = down_blocks_2_attentions_0_transformer_blocks_0_attn2_to_v_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [4]> var_2651_begin_0 = const()[name = tensor<string, []>("op_2651_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_2651_end_0 = const()[name = tensor<string, []>("op_2651_end_0"), val = tensor<int32, [4]>([2, 160, 1, 256])];
            tensor<bool, [4]> var_2651_end_mask_0 = const()[name = tensor<string, []>("op_2651_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_2651_cast = slice_by_index(begin = var_2651_begin_0, end = var_2651_end_0, end_mask = var_2651_end_mask_0, x = q_19_cast);
            tensor<int32, [4]> var_2655_begin_0 = const()[name = tensor<string, []>("op_2655_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_2655_end_0 = const()[name = tensor<string, []>("op_2655_end_0"), val = tensor<int32, [4]>([2, 320, 1, 256])];
            tensor<bool, [4]> var_2655_end_mask_0 = const()[name = tensor<string, []>("op_2655_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_2655_cast = slice_by_index(begin = var_2655_begin_0, end = var_2655_end_0, end_mask = var_2655_end_mask_0, x = q_19_cast);
            tensor<int32, [4]> var_2659_begin_0 = const()[name = tensor<string, []>("op_2659_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_2659_end_0 = const()[name = tensor<string, []>("op_2659_end_0"), val = tensor<int32, [4]>([2, 480, 1, 256])];
            tensor<bool, [4]> var_2659_end_mask_0 = const()[name = tensor<string, []>("op_2659_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_2659_cast = slice_by_index(begin = var_2659_begin_0, end = var_2659_end_0, end_mask = var_2659_end_mask_0, x = q_19_cast);
            tensor<int32, [4]> var_2663_begin_0 = const()[name = tensor<string, []>("op_2663_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_2663_end_0 = const()[name = tensor<string, []>("op_2663_end_0"), val = tensor<int32, [4]>([2, 640, 1, 256])];
            tensor<bool, [4]> var_2663_end_mask_0 = const()[name = tensor<string, []>("op_2663_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_2663_cast = slice_by_index(begin = var_2663_begin_0, end = var_2663_end_0, end_mask = var_2663_end_mask_0, x = q_19_cast);
            tensor<int32, [4]> var_2667_begin_0 = const()[name = tensor<string, []>("op_2667_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_2667_end_0 = const()[name = tensor<string, []>("op_2667_end_0"), val = tensor<int32, [4]>([2, 800, 1, 256])];
            tensor<bool, [4]> var_2667_end_mask_0 = const()[name = tensor<string, []>("op_2667_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_2667_cast = slice_by_index(begin = var_2667_begin_0, end = var_2667_end_0, end_mask = var_2667_end_mask_0, x = q_19_cast);
            tensor<int32, [4]> var_2671_begin_0 = const()[name = tensor<string, []>("op_2671_begin_0"), val = tensor<int32, [4]>([0, 800, 0, 0])];
            tensor<int32, [4]> var_2671_end_0 = const()[name = tensor<string, []>("op_2671_end_0"), val = tensor<int32, [4]>([2, 960, 1, 256])];
            tensor<bool, [4]> var_2671_end_mask_0 = const()[name = tensor<string, []>("op_2671_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_2671_cast = slice_by_index(begin = var_2671_begin_0, end = var_2671_end_0, end_mask = var_2671_end_mask_0, x = q_19_cast);
            tensor<int32, [4]> var_2675_begin_0 = const()[name = tensor<string, []>("op_2675_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_2675_end_0 = const()[name = tensor<string, []>("op_2675_end_0"), val = tensor<int32, [4]>([2, 1120, 1, 256])];
            tensor<bool, [4]> var_2675_end_mask_0 = const()[name = tensor<string, []>("op_2675_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_2675_cast = slice_by_index(begin = var_2675_begin_0, end = var_2675_end_0, end_mask = var_2675_end_mask_0, x = q_19_cast);
            tensor<int32, [4]> var_2679_begin_0 = const()[name = tensor<string, []>("op_2679_begin_0"), val = tensor<int32, [4]>([0, 1120, 0, 0])];
            tensor<int32, [4]> var_2679_end_0 = const()[name = tensor<string, []>("op_2679_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 256])];
            tensor<bool, [4]> var_2679_end_mask_0 = const()[name = tensor<string, []>("op_2679_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_2679_cast = slice_by_index(begin = var_2679_begin_0, end = var_2679_end_0, end_mask = var_2679_end_mask_0, x = q_19_cast);
            tensor<int32, [4]> k_39_perm_0 = const()[name = tensor<string, []>("k_39_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_2686_begin_0 = const()[name = tensor<string, []>("op_2686_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_2686_end_0 = const()[name = tensor<string, []>("op_2686_end_0"), val = tensor<int32, [4]>([2, 77, 1, 160])];
            tensor<bool, [4]> var_2686_end_mask_0 = const()[name = tensor<string, []>("op_2686_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 1280]> transpose_68 = transpose(perm = k_39_perm_0, x = k_37_cast);
            tensor<fp16, [2, 77, 1, 160]> var_2686_cast = slice_by_index(begin = var_2686_begin_0, end = var_2686_end_0, end_mask = var_2686_end_mask_0, x = transpose_68);
            tensor<int32, [4]> var_2690_begin_0 = const()[name = tensor<string, []>("op_2690_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 160])];
            tensor<int32, [4]> var_2690_end_0 = const()[name = tensor<string, []>("op_2690_end_0"), val = tensor<int32, [4]>([2, 77, 1, 320])];
            tensor<bool, [4]> var_2690_end_mask_0 = const()[name = tensor<string, []>("op_2690_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_2690_cast = slice_by_index(begin = var_2690_begin_0, end = var_2690_end_0, end_mask = var_2690_end_mask_0, x = transpose_68);
            tensor<int32, [4]> var_2694_begin_0 = const()[name = tensor<string, []>("op_2694_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_2694_end_0 = const()[name = tensor<string, []>("op_2694_end_0"), val = tensor<int32, [4]>([2, 77, 1, 480])];
            tensor<bool, [4]> var_2694_end_mask_0 = const()[name = tensor<string, []>("op_2694_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_2694_cast = slice_by_index(begin = var_2694_begin_0, end = var_2694_end_0, end_mask = var_2694_end_mask_0, x = transpose_68);
            tensor<int32, [4]> var_2698_begin_0 = const()[name = tensor<string, []>("op_2698_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 480])];
            tensor<int32, [4]> var_2698_end_0 = const()[name = tensor<string, []>("op_2698_end_0"), val = tensor<int32, [4]>([2, 77, 1, 640])];
            tensor<bool, [4]> var_2698_end_mask_0 = const()[name = tensor<string, []>("op_2698_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_2698_cast = slice_by_index(begin = var_2698_begin_0, end = var_2698_end_0, end_mask = var_2698_end_mask_0, x = transpose_68);
            tensor<int32, [4]> var_2702_begin_0 = const()[name = tensor<string, []>("op_2702_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 640])];
            tensor<int32, [4]> var_2702_end_0 = const()[name = tensor<string, []>("op_2702_end_0"), val = tensor<int32, [4]>([2, 77, 1, 800])];
            tensor<bool, [4]> var_2702_end_mask_0 = const()[name = tensor<string, []>("op_2702_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_2702_cast = slice_by_index(begin = var_2702_begin_0, end = var_2702_end_0, end_mask = var_2702_end_mask_0, x = transpose_68);
            tensor<int32, [4]> var_2706_begin_0 = const()[name = tensor<string, []>("op_2706_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 800])];
            tensor<int32, [4]> var_2706_end_0 = const()[name = tensor<string, []>("op_2706_end_0"), val = tensor<int32, [4]>([2, 77, 1, 960])];
            tensor<bool, [4]> var_2706_end_mask_0 = const()[name = tensor<string, []>("op_2706_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_2706_cast = slice_by_index(begin = var_2706_begin_0, end = var_2706_end_0, end_mask = var_2706_end_mask_0, x = transpose_68);
            tensor<int32, [4]> var_2710_begin_0 = const()[name = tensor<string, []>("op_2710_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 960])];
            tensor<int32, [4]> var_2710_end_0 = const()[name = tensor<string, []>("op_2710_end_0"), val = tensor<int32, [4]>([2, 77, 1, 1120])];
            tensor<bool, [4]> var_2710_end_mask_0 = const()[name = tensor<string, []>("op_2710_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_2710_cast = slice_by_index(begin = var_2710_begin_0, end = var_2710_end_0, end_mask = var_2710_end_mask_0, x = transpose_68);
            tensor<int32, [4]> var_2714_begin_0 = const()[name = tensor<string, []>("op_2714_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1120])];
            tensor<int32, [4]> var_2714_end_0 = const()[name = tensor<string, []>("op_2714_end_0"), val = tensor<int32, [4]>([2, 77, 1, 1280])];
            tensor<bool, [4]> var_2714_end_mask_0 = const()[name = tensor<string, []>("op_2714_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_2714_cast = slice_by_index(begin = var_2714_begin_0, end = var_2714_end_0, end_mask = var_2714_end_mask_0, x = transpose_68);
            tensor<int32, [4]> var_2716_begin_0 = const()[name = tensor<string, []>("op_2716_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_2716_end_0 = const()[name = tensor<string, []>("op_2716_end_0"), val = tensor<int32, [4]>([2, 160, 1, 77])];
            tensor<bool, [4]> var_2716_end_mask_0 = const()[name = tensor<string, []>("op_2716_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_2716_cast = slice_by_index(begin = var_2716_begin_0, end = var_2716_end_0, end_mask = var_2716_end_mask_0, x = v_19_cast);
            tensor<int32, [4]> var_2720_begin_0 = const()[name = tensor<string, []>("op_2720_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_2720_end_0 = const()[name = tensor<string, []>("op_2720_end_0"), val = tensor<int32, [4]>([2, 320, 1, 77])];
            tensor<bool, [4]> var_2720_end_mask_0 = const()[name = tensor<string, []>("op_2720_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_2720_cast = slice_by_index(begin = var_2720_begin_0, end = var_2720_end_0, end_mask = var_2720_end_mask_0, x = v_19_cast);
            tensor<int32, [4]> var_2724_begin_0 = const()[name = tensor<string, []>("op_2724_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_2724_end_0 = const()[name = tensor<string, []>("op_2724_end_0"), val = tensor<int32, [4]>([2, 480, 1, 77])];
            tensor<bool, [4]> var_2724_end_mask_0 = const()[name = tensor<string, []>("op_2724_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_2724_cast = slice_by_index(begin = var_2724_begin_0, end = var_2724_end_0, end_mask = var_2724_end_mask_0, x = v_19_cast);
            tensor<int32, [4]> var_2728_begin_0 = const()[name = tensor<string, []>("op_2728_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_2728_end_0 = const()[name = tensor<string, []>("op_2728_end_0"), val = tensor<int32, [4]>([2, 640, 1, 77])];
            tensor<bool, [4]> var_2728_end_mask_0 = const()[name = tensor<string, []>("op_2728_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_2728_cast = slice_by_index(begin = var_2728_begin_0, end = var_2728_end_0, end_mask = var_2728_end_mask_0, x = v_19_cast);
            tensor<int32, [4]> var_2732_begin_0 = const()[name = tensor<string, []>("op_2732_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_2732_end_0 = const()[name = tensor<string, []>("op_2732_end_0"), val = tensor<int32, [4]>([2, 800, 1, 77])];
            tensor<bool, [4]> var_2732_end_mask_0 = const()[name = tensor<string, []>("op_2732_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_2732_cast = slice_by_index(begin = var_2732_begin_0, end = var_2732_end_0, end_mask = var_2732_end_mask_0, x = v_19_cast);
            tensor<int32, [4]> var_2736_begin_0 = const()[name = tensor<string, []>("op_2736_begin_0"), val = tensor<int32, [4]>([0, 800, 0, 0])];
            tensor<int32, [4]> var_2736_end_0 = const()[name = tensor<string, []>("op_2736_end_0"), val = tensor<int32, [4]>([2, 960, 1, 77])];
            tensor<bool, [4]> var_2736_end_mask_0 = const()[name = tensor<string, []>("op_2736_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_2736_cast = slice_by_index(begin = var_2736_begin_0, end = var_2736_end_0, end_mask = var_2736_end_mask_0, x = v_19_cast);
            tensor<int32, [4]> var_2740_begin_0 = const()[name = tensor<string, []>("op_2740_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_2740_end_0 = const()[name = tensor<string, []>("op_2740_end_0"), val = tensor<int32, [4]>([2, 1120, 1, 77])];
            tensor<bool, [4]> var_2740_end_mask_0 = const()[name = tensor<string, []>("op_2740_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_2740_cast = slice_by_index(begin = var_2740_begin_0, end = var_2740_end_0, end_mask = var_2740_end_mask_0, x = v_19_cast);
            tensor<int32, [4]> var_2744_begin_0 = const()[name = tensor<string, []>("op_2744_begin_0"), val = tensor<int32, [4]>([0, 1120, 0, 0])];
            tensor<int32, [4]> var_2744_end_0 = const()[name = tensor<string, []>("op_2744_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 77])];
            tensor<bool, [4]> var_2744_end_mask_0 = const()[name = tensor<string, []>("op_2744_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_2744_cast = slice_by_index(begin = var_2744_begin_0, end = var_2744_end_0, end_mask = var_2744_end_mask_0, x = v_19_cast);
            tensor<string, []> var_2748_equation_0 = const()[name = tensor<string, []>("op_2748_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_2748_cast = einsum(equation = var_2748_equation_0, values = (var_2686_cast, var_2651_cast));
            tensor<fp16, []> var_2749_to_fp16 = const()[name = tensor<string, []>("op_2749_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_145_cast = mul(x = var_2748_cast, y = var_2749_to_fp16);
            tensor<string, []> var_2752_equation_0 = const()[name = tensor<string, []>("op_2752_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_2752_cast = einsum(equation = var_2752_equation_0, values = (var_2690_cast, var_2655_cast));
            tensor<fp16, []> var_2753_to_fp16 = const()[name = tensor<string, []>("op_2753_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_147_cast = mul(x = var_2752_cast, y = var_2753_to_fp16);
            tensor<string, []> var_2756_equation_0 = const()[name = tensor<string, []>("op_2756_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_2756_cast = einsum(equation = var_2756_equation_0, values = (var_2694_cast, var_2659_cast));
            tensor<fp16, []> var_2757_to_fp16 = const()[name = tensor<string, []>("op_2757_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_149_cast = mul(x = var_2756_cast, y = var_2757_to_fp16);
            tensor<string, []> var_2760_equation_0 = const()[name = tensor<string, []>("op_2760_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_2760_cast = einsum(equation = var_2760_equation_0, values = (var_2698_cast, var_2663_cast));
            tensor<fp16, []> var_2761_to_fp16 = const()[name = tensor<string, []>("op_2761_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_151_cast = mul(x = var_2760_cast, y = var_2761_to_fp16);
            tensor<string, []> var_2764_equation_0 = const()[name = tensor<string, []>("op_2764_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_2764_cast = einsum(equation = var_2764_equation_0, values = (var_2702_cast, var_2667_cast));
            tensor<fp16, []> var_2765_to_fp16 = const()[name = tensor<string, []>("op_2765_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_153_cast = mul(x = var_2764_cast, y = var_2765_to_fp16);
            tensor<string, []> var_2768_equation_0 = const()[name = tensor<string, []>("op_2768_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_2768_cast = einsum(equation = var_2768_equation_0, values = (var_2706_cast, var_2671_cast));
            tensor<fp16, []> var_2769_to_fp16 = const()[name = tensor<string, []>("op_2769_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_155_cast = mul(x = var_2768_cast, y = var_2769_to_fp16);
            tensor<string, []> var_2772_equation_0 = const()[name = tensor<string, []>("op_2772_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_2772_cast = einsum(equation = var_2772_equation_0, values = (var_2710_cast, var_2675_cast));
            tensor<fp16, []> var_2773_to_fp16 = const()[name = tensor<string, []>("op_2773_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_157_cast = mul(x = var_2772_cast, y = var_2773_to_fp16);
            tensor<string, []> var_2776_equation_0 = const()[name = tensor<string, []>("op_2776_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_2776_cast = einsum(equation = var_2776_equation_0, values = (var_2714_cast, var_2679_cast));
            tensor<fp16, []> var_2777_to_fp16 = const()[name = tensor<string, []>("op_2777_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_159_cast = mul(x = var_2776_cast, y = var_2777_to_fp16);
            tensor<fp16, [2, 77, 1, 256]> var_2779_cast = softmax(axis = var_2319, x = aw_145_cast);
            tensor<fp16, [2, 77, 1, 256]> var_2780_cast = softmax(axis = var_2319, x = aw_147_cast);
            tensor<fp16, [2, 77, 1, 256]> var_2781_cast = softmax(axis = var_2319, x = aw_149_cast);
            tensor<fp16, [2, 77, 1, 256]> var_2782_cast = softmax(axis = var_2319, x = aw_151_cast);
            tensor<fp16, [2, 77, 1, 256]> var_2783_cast = softmax(axis = var_2319, x = aw_153_cast);
            tensor<fp16, [2, 77, 1, 256]> var_2784_cast = softmax(axis = var_2319, x = aw_155_cast);
            tensor<fp16, [2, 77, 1, 256]> var_2785_cast = softmax(axis = var_2319, x = aw_157_cast);
            tensor<fp16, [2, 77, 1, 256]> var_2786_cast = softmax(axis = var_2319, x = aw_159_cast);
            tensor<string, []> var_2788_equation_0 = const()[name = tensor<string, []>("op_2788_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_2788_cast = einsum(equation = var_2788_equation_0, values = (var_2716_cast, var_2779_cast));
            tensor<string, []> var_2790_equation_0 = const()[name = tensor<string, []>("op_2790_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_2790_cast = einsum(equation = var_2790_equation_0, values = (var_2720_cast, var_2780_cast));
            tensor<string, []> var_2792_equation_0 = const()[name = tensor<string, []>("op_2792_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_2792_cast = einsum(equation = var_2792_equation_0, values = (var_2724_cast, var_2781_cast));
            tensor<string, []> var_2794_equation_0 = const()[name = tensor<string, []>("op_2794_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_2794_cast = einsum(equation = var_2794_equation_0, values = (var_2728_cast, var_2782_cast));
            tensor<string, []> var_2796_equation_0 = const()[name = tensor<string, []>("op_2796_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_2796_cast = einsum(equation = var_2796_equation_0, values = (var_2732_cast, var_2783_cast));
            tensor<string, []> var_2798_equation_0 = const()[name = tensor<string, []>("op_2798_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_2798_cast = einsum(equation = var_2798_equation_0, values = (var_2736_cast, var_2784_cast));
            tensor<string, []> var_2800_equation_0 = const()[name = tensor<string, []>("op_2800_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_2800_cast = einsum(equation = var_2800_equation_0, values = (var_2740_cast, var_2785_cast));
            tensor<string, []> var_2802_equation_0 = const()[name = tensor<string, []>("op_2802_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_2802_cast = einsum(equation = var_2802_equation_0, values = (var_2744_cast, var_2786_cast));
            tensor<bool, []> input_135_interleave_0 = const()[name = tensor<string, []>("input_135_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 1280, 1, 256]> input_135_cast = concat(axis = var_2319, interleave = input_135_interleave_0, values = (var_2788_cast, var_2790_cast, var_2792_cast, var_2794_cast, var_2796_cast, var_2798_cast, var_2800_cast, var_2802_cast));
            tensor<int32, [2]> var_2808 = const()[name = tensor<string, []>("op_2808"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2810 = const()[name = tensor<string, []>("op_2810"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_2812_pad_type_0 = const()[name = tensor<string, []>("op_2812_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_2812_pad_0 = const()[name = tensor<string, []>("op_2812_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> down_blocks_2_attentions_0_transformer_blocks_0_attn2_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_0_transformer_blocks_0_attn2_to_out_0_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(171642944)))];
            tensor<fp16, [1280]> down_blocks_2_attentions_0_transformer_blocks_0_attn2_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_0_transformer_blocks_0_attn2_to_out_0_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(174919808)))];
            tensor<fp16, [2, 1280, 1, 256]> var_2812_cast = conv(bias = down_blocks_2_attentions_0_transformer_blocks_0_attn2_to_out_0_bias_to_fp16, dilations = var_2810, groups = var_2319, pad = var_2812_pad_0, pad_type = var_2812_pad_type_0, strides = var_2808, weight = down_blocks_2_attentions_0_transformer_blocks_0_attn2_to_out_0_weight_to_fp16, x = input_135_cast);
            tensor<fp16, [2, 1280, 1, 256]> inputs_29_cast = add(x = var_2812_cast, y = inputs_27_cast);
            tensor<int32, [1]> var_2816 = const()[name = tensor<string, []>("op_2816"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> channels_mean_29_cast = reduce_mean(axes = var_2816, keep_dims = var_2314, x = inputs_29_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_29_cast = sub(x = inputs_29_cast, y = channels_mean_29_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_sq_29_cast = mul(x = zero_mean_29_cast, y = zero_mean_29_cast);
            tensor<int32, [1]> var_2820 = const()[name = tensor<string, []>("op_2820"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> var_2821_cast = reduce_mean(axes = var_2820, keep_dims = var_2314, x = zero_mean_sq_29_cast);
            tensor<fp16, []> var_2822_to_fp16 = const()[name = tensor<string, []>("op_2822_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 256]> var_2823_cast = add(x = var_2821_cast, y = var_2822_to_fp16);
            tensor<fp16, []> denom_29_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_29_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 256]> denom_29_cast = rsqrt(epsilon = denom_29_epsilon_0_to_fp16, x = var_2823_cast);
            tensor<fp16, [2, 1280, 1, 256]> out_29_cast = mul(x = zero_mean_29_cast, y = denom_29_cast);
            tensor<fp16, [1, 1280, 1, 1]> var_2827_to_fp16 = const()[name = tensor<string, []>("op_2827_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(174922432)))];
            tensor<fp16, [2, 1280, 1, 256]> var_2828_cast = add(x = out_29_cast, y = var_2827_to_fp16);
            tensor<fp16, [1, 1280, 1, 1]> var_2830_to_fp16 = const()[name = tensor<string, []>("op_2830_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(174925056)))];
            tensor<fp16, [2, 1280, 1, 256]> input_137_cast = mul(x = var_2828_cast, y = var_2830_to_fp16);
            tensor<int32, [2]> var_2838 = const()[name = tensor<string, []>("op_2838"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2840 = const()[name = tensor<string, []>("op_2840"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_2842_pad_type_0 = const()[name = tensor<string, []>("op_2842_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_2842_pad_0 = const()[name = tensor<string, []>("op_2842_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [10240, 1280, 1, 1]> down_blocks_2_attentions_0_transformer_blocks_0_ff_net_0_proj_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_0_transformer_blocks_0_ff_net_0_proj_weight_to_fp16"), val = tensor<fp16, [10240, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(174927680)))];
            tensor<fp16, [10240]> down_blocks_2_attentions_0_transformer_blocks_0_ff_net_0_proj_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_0_transformer_blocks_0_ff_net_0_proj_bias_to_fp16"), val = tensor<fp16, [10240]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(201142144)))];
            tensor<fp16, [2, 10240, 1, 256]> var_2842_cast = conv(bias = down_blocks_2_attentions_0_transformer_blocks_0_ff_net_0_proj_bias_to_fp16, dilations = var_2840, groups = var_2319, pad = var_2842_pad_0, pad_type = var_2842_pad_type_0, strides = var_2838, weight = down_blocks_2_attentions_0_transformer_blocks_0_ff_net_0_proj_weight_to_fp16, x = input_137_cast);
            tensor<int32, [2]> var_2843_split_sizes_0 = const()[name = tensor<string, []>("op_2843_split_sizes_0"), val = tensor<int32, [2]>([5120, 5120])];
            tensor<int32, []> var_2843_axis_0 = const()[name = tensor<string, []>("op_2843_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [2, 5120, 1, 256]> var_2843_cast_0, tensor<fp16, [2, 5120, 1, 256]> var_2843_cast_1 = split(axis = var_2843_axis_0, split_sizes = var_2843_split_sizes_0, x = var_2842_cast);
            tensor<string, []> var_2845_mode_0 = const()[name = tensor<string, []>("op_2845_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [2, 5120, 1, 256]> var_2845_cast = gelu(mode = var_2845_mode_0, x = var_2843_cast_1);
            tensor<fp16, [2, 5120, 1, 256]> input_139_cast = mul(x = var_2843_cast_0, y = var_2845_cast);
            tensor<int32, [2]> var_2849 = const()[name = tensor<string, []>("op_2849"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2851 = const()[name = tensor<string, []>("op_2851"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_2853_pad_type_0 = const()[name = tensor<string, []>("op_2853_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_2853_pad_0 = const()[name = tensor<string, []>("op_2853_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 5120, 1, 1]> down_blocks_2_attentions_0_transformer_blocks_0_ff_net_2_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_0_transformer_blocks_0_ff_net_2_weight_to_fp16"), val = tensor<fp16, [1280, 5120, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(201162688)))];
            tensor<fp16, [1280]> down_blocks_2_attentions_0_transformer_blocks_0_ff_net_2_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_0_transformer_blocks_0_ff_net_2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(214269952)))];
            tensor<fp16, [2, 1280, 1, 256]> var_2853_cast = conv(bias = down_blocks_2_attentions_0_transformer_blocks_0_ff_net_2_bias_to_fp16, dilations = var_2851, groups = var_2319, pad = var_2853_pad_0, pad_type = var_2853_pad_type_0, strides = var_2849, weight = down_blocks_2_attentions_0_transformer_blocks_0_ff_net_2_weight_to_fp16, x = input_139_cast);
            tensor<fp16, [2, 1280, 1, 256]> hidden_states_87_cast = add(x = var_2853_cast, y = inputs_29_cast);
            tensor<int32, [4]> var_2855 = const()[name = tensor<string, []>("op_2855"), val = tensor<int32, [4]>([2, 1280, 16, 16])];
            tensor<fp16, [2, 1280, 16, 16]> input_141_cast = reshape(shape = var_2855, x = hidden_states_87_cast);
            tensor<int32, [2]> var_2859 = const()[name = tensor<string, []>("op_2859"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2861 = const()[name = tensor<string, []>("op_2861"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_89_pad_type_0 = const()[name = tensor<string, []>("hidden_states_89_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_89_pad_0 = const()[name = tensor<string, []>("hidden_states_89_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> down_blocks_2_attentions_0_proj_out_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_0_proj_out_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(214272576)))];
            tensor<fp16, [1280]> down_blocks_2_attentions_0_proj_out_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_0_proj_out_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(217549440)))];
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_89_cast = conv(bias = down_blocks_2_attentions_0_proj_out_bias_to_fp16, dilations = var_2861, groups = var_2319, pad = hidden_states_89_pad_0, pad_type = hidden_states_89_pad_type_0, strides = var_2859, weight = down_blocks_2_attentions_0_proj_out_weight_to_fp16, x = input_141_cast);
            tensor<fp16, [2, 1280, 16, 16]> input_143_cast_1 = add(x = hidden_states_89_cast, y = hidden_states_77_cast);
            tensor<int32, [5]> reshape_60_shape_0 = const()[name = tensor<string, []>("reshape_60_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 16, 16])];
            tensor<fp16, [2, 32, 40, 16, 16]> reshape_60_cast = reshape(shape = reshape_60_shape_0, x = input_143_cast_1);
            tensor<int32, [3]> reduce_mean_45_axes_0 = const()[name = tensor<string, []>("reduce_mean_45_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_45_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_45_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_45_cast = reduce_mean(axes = reduce_mean_45_axes_0, keep_dims = reduce_mean_45_keep_dims_0, x = reshape_60_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> sub_30_cast = sub(x = reshape_60_cast, y = reduce_mean_45_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> square_15_cast = square(x = sub_30_cast);
            tensor<int32, [3]> reduce_mean_47_axes_0 = const()[name = tensor<string, []>("reduce_mean_47_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_47_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_47_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_47_cast = reduce_mean(axes = reduce_mean_47_axes_0, keep_dims = reduce_mean_47_keep_dims_0, x = square_15_cast);
            tensor<fp16, []> add_30_y_0_to_fp16 = const()[name = tensor<string, []>("add_30_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_30_cast = add(x = reduce_mean_47_cast, y = add_30_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_15_cast = sqrt(x = add_30_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> real_div_15_cast = real_div(x = sub_30_cast, y = sqrt_15_cast);
            tensor<int32, [4]> reshape_61_shape_0 = const()[name = tensor<string, []>("reshape_61_shape_0"), val = tensor<int32, [4]>([2, 1280, 16, 16])];
            tensor<fp16, [2, 1280, 16, 16]> reshape_61_cast = reshape(shape = reshape_61_shape_0, x = real_div_15_cast);
            tensor<fp16, [1280]> add_31_mean_0_to_fp16 = const()[name = tensor<string, []>("add_31_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(217552064)))];
            tensor<fp16, [1280]> add_31_variance_0_to_fp16 = const()[name = tensor<string, []>("add_31_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(217554688)))];
            tensor<fp16, [1280]> add_31_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_31_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(217557312)))];
            tensor<fp16, [1280]> add_31_beta_0_to_fp16 = const()[name = tensor<string, []>("add_31_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(217559936)))];
            tensor<fp16, []> add_31_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_31_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 16, 16]> add_31_cast = batch_norm(beta = add_31_beta_0_to_fp16, epsilon = add_31_epsilon_0_to_fp16, gamma = add_31_gamma_0_to_fp16, mean = add_31_mean_0_to_fp16, variance = add_31_variance_0_to_fp16, x = reshape_61_cast);
            tensor<fp16, [2, 1280, 16, 16]> input_147_cast = silu(x = add_31_cast);
            tensor<int32, [2]> var_2876 = const()[name = tensor<string, []>("op_2876"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2878 = const()[name = tensor<string, []>("op_2878"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_91_pad_type_0 = const()[name = tensor<string, []>("hidden_states_91_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_91_pad_0 = const()[name = tensor<string, []>("hidden_states_91_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 1280, 3, 3]> down_blocks_2_resnets_1_conv1_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_resnets_1_conv1_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(217562560)))];
            tensor<fp16, [1280]> down_blocks_2_resnets_1_conv1_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_resnets_1_conv1_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(247053824)))];
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_91_cast = conv(bias = down_blocks_2_resnets_1_conv1_bias_to_fp16, dilations = var_2878, groups = var_2319, pad = hidden_states_91_pad_0, pad_type = hidden_states_91_pad_type_0, strides = var_2876, weight = down_blocks_2_resnets_1_conv1_weight_to_fp16, x = input_147_cast);
            tensor<int32, [2]> var_2884 = const()[name = tensor<string, []>("op_2884"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2886 = const()[name = tensor<string, []>("op_2886"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> temb_11_pad_type_0 = const()[name = tensor<string, []>("temb_11_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> temb_11_pad_0 = const()[name = tensor<string, []>("temb_11_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> down_blocks_2_resnets_1_time_emb_proj_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_resnets_1_time_emb_proj_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(247056448)))];
            tensor<fp16, [1280]> down_blocks_2_resnets_1_time_emb_proj_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_resnets_1_time_emb_proj_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(250333312)))];
            tensor<fp16, [2, 1280, 1, 1]> temb_11_cast = conv(bias = down_blocks_2_resnets_1_time_emb_proj_bias_to_fp16, dilations = var_2886, groups = var_2319, pad = temb_11_pad_0, pad_type = temb_11_pad_type_0, strides = var_2884, weight = down_blocks_2_resnets_1_time_emb_proj_weight_to_fp16, x = input_15_cast_1);
            tensor<fp16, [2, 1280, 16, 16]> input_151_cast = add(x = hidden_states_91_cast, y = temb_11_cast);
            tensor<int32, [5]> reshape_64_shape_0 = const()[name = tensor<string, []>("reshape_64_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 16, 16])];
            tensor<fp16, [2, 32, 40, 16, 16]> reshape_64_cast = reshape(shape = reshape_64_shape_0, x = input_151_cast);
            tensor<int32, [3]> reduce_mean_48_axes_0 = const()[name = tensor<string, []>("reduce_mean_48_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_48_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_48_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_48_cast = reduce_mean(axes = reduce_mean_48_axes_0, keep_dims = reduce_mean_48_keep_dims_0, x = reshape_64_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> sub_32_cast = sub(x = reshape_64_cast, y = reduce_mean_48_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> square_16_cast = square(x = sub_32_cast);
            tensor<int32, [3]> reduce_mean_50_axes_0 = const()[name = tensor<string, []>("reduce_mean_50_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_50_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_50_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_50_cast = reduce_mean(axes = reduce_mean_50_axes_0, keep_dims = reduce_mean_50_keep_dims_0, x = square_16_cast);
            tensor<fp16, []> add_32_y_0_to_fp16 = const()[name = tensor<string, []>("add_32_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_32_cast = add(x = reduce_mean_50_cast, y = add_32_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_16_cast = sqrt(x = add_32_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> real_div_16_cast = real_div(x = sub_32_cast, y = sqrt_16_cast);
            tensor<int32, [4]> reshape_65_shape_0 = const()[name = tensor<string, []>("reshape_65_shape_0"), val = tensor<int32, [4]>([2, 1280, 16, 16])];
            tensor<fp16, [2, 1280, 16, 16]> reshape_65_cast = reshape(shape = reshape_65_shape_0, x = real_div_16_cast);
            tensor<fp16, [1280]> add_33_mean_0_to_fp16 = const()[name = tensor<string, []>("add_33_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(250335936)))];
            tensor<fp16, [1280]> add_33_variance_0_to_fp16 = const()[name = tensor<string, []>("add_33_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(250338560)))];
            tensor<fp16, [1280]> add_33_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_33_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(250341184)))];
            tensor<fp16, [1280]> add_33_beta_0_to_fp16 = const()[name = tensor<string, []>("add_33_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(250343808)))];
            tensor<fp16, []> add_33_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_33_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 16, 16]> add_33_cast = batch_norm(beta = add_33_beta_0_to_fp16, epsilon = add_33_epsilon_0_to_fp16, gamma = add_33_gamma_0_to_fp16, mean = add_33_mean_0_to_fp16, variance = add_33_variance_0_to_fp16, x = reshape_65_cast);
            tensor<fp16, [2, 1280, 16, 16]> input_155_cast = silu(x = add_33_cast);
            tensor<int32, [2]> var_2896 = const()[name = tensor<string, []>("op_2896"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2898 = const()[name = tensor<string, []>("op_2898"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_93_pad_type_0 = const()[name = tensor<string, []>("hidden_states_93_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_93_pad_0 = const()[name = tensor<string, []>("hidden_states_93_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 1280, 3, 3]> down_blocks_2_resnets_1_conv2_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_resnets_1_conv2_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(250346432)))];
            tensor<fp16, [1280]> down_blocks_2_resnets_1_conv2_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_resnets_1_conv2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(279837696)))];
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_93_cast = conv(bias = down_blocks_2_resnets_1_conv2_bias_to_fp16, dilations = var_2898, groups = var_2319, pad = hidden_states_93_pad_0, pad_type = hidden_states_93_pad_type_0, strides = var_2896, weight = down_blocks_2_resnets_1_conv2_weight_to_fp16, x = input_155_cast);
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_95_cast = add(x = input_143_cast_1, y = hidden_states_93_cast);
            tensor<int32, [5]> reshape_68_shape_0 = const()[name = tensor<string, []>("reshape_68_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 16, 16])];
            tensor<fp16, [2, 32, 40, 16, 16]> reshape_68_cast = reshape(shape = reshape_68_shape_0, x = hidden_states_95_cast);
            tensor<int32, [3]> reduce_mean_51_axes_0 = const()[name = tensor<string, []>("reduce_mean_51_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_51_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_51_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_51_cast = reduce_mean(axes = reduce_mean_51_axes_0, keep_dims = reduce_mean_51_keep_dims_0, x = reshape_68_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> sub_34_cast = sub(x = reshape_68_cast, y = reduce_mean_51_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> square_17_cast = square(x = sub_34_cast);
            tensor<int32, [3]> reduce_mean_53_axes_0 = const()[name = tensor<string, []>("reduce_mean_53_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_53_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_53_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_53_cast = reduce_mean(axes = reduce_mean_53_axes_0, keep_dims = reduce_mean_53_keep_dims_0, x = square_17_cast);
            tensor<fp16, []> add_34_y_0_to_fp16 = const()[name = tensor<string, []>("add_34_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_34_cast = add(x = reduce_mean_53_cast, y = add_34_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_17_cast = sqrt(x = add_34_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> real_div_17_cast = real_div(x = sub_34_cast, y = sqrt_17_cast);
            tensor<int32, [4]> reshape_69_shape_0 = const()[name = tensor<string, []>("reshape_69_shape_0"), val = tensor<int32, [4]>([2, 1280, 16, 16])];
            tensor<fp16, [2, 1280, 16, 16]> reshape_69_cast = reshape(shape = reshape_69_shape_0, x = real_div_17_cast);
            tensor<fp16, [1280]> add_35_mean_0_to_fp16 = const()[name = tensor<string, []>("add_35_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(279840320)))];
            tensor<fp16, [1280]> add_35_variance_0_to_fp16 = const()[name = tensor<string, []>("add_35_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(279842944)))];
            tensor<fp16, [1280]> add_35_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_35_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(279845568)))];
            tensor<fp16, [1280]> add_35_beta_0_to_fp16 = const()[name = tensor<string, []>("add_35_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(279848192)))];
            tensor<fp16, []> add_35_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_35_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 16, 16]> add_35_cast = batch_norm(beta = add_35_beta_0_to_fp16, epsilon = add_35_epsilon_0_to_fp16, gamma = add_35_gamma_0_to_fp16, mean = add_35_mean_0_to_fp16, variance = add_35_variance_0_to_fp16, x = reshape_69_cast);
            tensor<int32, [2]> var_2918 = const()[name = tensor<string, []>("op_2918"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2920 = const()[name = tensor<string, []>("op_2920"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_97_pad_type_0 = const()[name = tensor<string, []>("hidden_states_97_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_97_pad_0 = const()[name = tensor<string, []>("hidden_states_97_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> down_blocks_2_attentions_1_proj_in_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_1_proj_in_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(279850816)))];
            tensor<fp16, [1280]> down_blocks_2_attentions_1_proj_in_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_1_proj_in_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(283127680)))];
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_97_cast = conv(bias = down_blocks_2_attentions_1_proj_in_bias_to_fp16, dilations = var_2920, groups = var_2319, pad = hidden_states_97_pad_0, pad_type = hidden_states_97_pad_type_0, strides = var_2918, weight = down_blocks_2_attentions_1_proj_in_weight_to_fp16, x = add_35_cast);
            tensor<int32, [4]> var_2925 = const()[name = tensor<string, []>("op_2925"), val = tensor<int32, [4]>([2, 1280, 1, 256])];
            tensor<fp16, [2, 1280, 1, 256]> inputs_31_cast = reshape(shape = var_2925, x = hidden_states_97_cast);
            tensor<int32, [1]> var_2935 = const()[name = tensor<string, []>("op_2935"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> channels_mean_31_cast = reduce_mean(axes = var_2935, keep_dims = var_2314, x = inputs_31_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_31_cast = sub(x = inputs_31_cast, y = channels_mean_31_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_sq_31_cast = mul(x = zero_mean_31_cast, y = zero_mean_31_cast);
            tensor<int32, [1]> var_2939 = const()[name = tensor<string, []>("op_2939"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> var_2940_cast = reduce_mean(axes = var_2939, keep_dims = var_2314, x = zero_mean_sq_31_cast);
            tensor<fp16, []> var_2941_to_fp16 = const()[name = tensor<string, []>("op_2941_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 256]> var_2942_cast = add(x = var_2940_cast, y = var_2941_to_fp16);
            tensor<fp16, []> denom_31_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_31_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 256]> denom_31_cast = rsqrt(epsilon = denom_31_epsilon_0_to_fp16, x = var_2942_cast);
            tensor<fp16, [2, 1280, 1, 256]> out_31_cast = mul(x = zero_mean_31_cast, y = denom_31_cast);
            tensor<fp16, [1, 1280, 1, 1]> var_2946_to_fp16 = const()[name = tensor<string, []>("op_2946_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(283130304)))];
            tensor<fp16, [2, 1280, 1, 256]> var_2947_cast = add(x = out_31_cast, y = var_2946_to_fp16);
            tensor<fp16, [1, 1280, 1, 1]> var_2949_to_fp16 = const()[name = tensor<string, []>("op_2949_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(283132928)))];
            tensor<fp16, [2, 1280, 1, 256]> hidden_states_99_cast = mul(x = var_2947_cast, y = var_2949_to_fp16);
            tensor<int32, [2]> var_2956 = const()[name = tensor<string, []>("op_2956"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2958 = const()[name = tensor<string, []>("op_2958"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_21_pad_type_0 = const()[name = tensor<string, []>("q_21_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_21_pad_0 = const()[name = tensor<string, []>("q_21_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> down_blocks_2_attentions_1_transformer_blocks_0_attn1_to_q_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_1_transformer_blocks_0_attn1_to_q_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(283135552)))];
            tensor<fp16, [2, 1280, 1, 256]> q_21_cast = conv(dilations = var_2958, groups = var_2319, pad = q_21_pad_0, pad_type = q_21_pad_type_0, strides = var_2956, weight = down_blocks_2_attentions_1_transformer_blocks_0_attn1_to_q_weight_to_fp16, x = hidden_states_99_cast);
            tensor<int32, [2]> var_2962 = const()[name = tensor<string, []>("op_2962"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2964 = const()[name = tensor<string, []>("op_2964"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_41_pad_type_0 = const()[name = tensor<string, []>("k_41_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_41_pad_0 = const()[name = tensor<string, []>("k_41_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> down_blocks_2_attentions_1_transformer_blocks_0_attn1_to_k_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_1_transformer_blocks_0_attn1_to_k_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(286412416)))];
            tensor<fp16, [2, 1280, 1, 256]> k_41_cast = conv(dilations = var_2964, groups = var_2319, pad = k_41_pad_0, pad_type = k_41_pad_type_0, strides = var_2962, weight = down_blocks_2_attentions_1_transformer_blocks_0_attn1_to_k_weight_to_fp16, x = hidden_states_99_cast);
            tensor<int32, [2]> var_2968 = const()[name = tensor<string, []>("op_2968"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2970 = const()[name = tensor<string, []>("op_2970"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_21_pad_type_0 = const()[name = tensor<string, []>("v_21_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_21_pad_0 = const()[name = tensor<string, []>("v_21_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> down_blocks_2_attentions_1_transformer_blocks_0_attn1_to_v_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_1_transformer_blocks_0_attn1_to_v_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(289689280)))];
            tensor<fp16, [2, 1280, 1, 256]> v_21_cast = conv(dilations = var_2970, groups = var_2319, pad = v_21_pad_0, pad_type = v_21_pad_type_0, strides = var_2968, weight = down_blocks_2_attentions_1_transformer_blocks_0_attn1_to_v_weight_to_fp16, x = hidden_states_99_cast);
            tensor<int32, [4]> var_2974_begin_0 = const()[name = tensor<string, []>("op_2974_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_2974_end_0 = const()[name = tensor<string, []>("op_2974_end_0"), val = tensor<int32, [4]>([2, 160, 1, 256])];
            tensor<bool, [4]> var_2974_end_mask_0 = const()[name = tensor<string, []>("op_2974_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_2974_cast = slice_by_index(begin = var_2974_begin_0, end = var_2974_end_0, end_mask = var_2974_end_mask_0, x = q_21_cast);
            tensor<int32, [4]> var_2978_begin_0 = const()[name = tensor<string, []>("op_2978_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_2978_end_0 = const()[name = tensor<string, []>("op_2978_end_0"), val = tensor<int32, [4]>([2, 320, 1, 256])];
            tensor<bool, [4]> var_2978_end_mask_0 = const()[name = tensor<string, []>("op_2978_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_2978_cast = slice_by_index(begin = var_2978_begin_0, end = var_2978_end_0, end_mask = var_2978_end_mask_0, x = q_21_cast);
            tensor<int32, [4]> var_2982_begin_0 = const()[name = tensor<string, []>("op_2982_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_2982_end_0 = const()[name = tensor<string, []>("op_2982_end_0"), val = tensor<int32, [4]>([2, 480, 1, 256])];
            tensor<bool, [4]> var_2982_end_mask_0 = const()[name = tensor<string, []>("op_2982_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_2982_cast = slice_by_index(begin = var_2982_begin_0, end = var_2982_end_0, end_mask = var_2982_end_mask_0, x = q_21_cast);
            tensor<int32, [4]> var_2986_begin_0 = const()[name = tensor<string, []>("op_2986_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_2986_end_0 = const()[name = tensor<string, []>("op_2986_end_0"), val = tensor<int32, [4]>([2, 640, 1, 256])];
            tensor<bool, [4]> var_2986_end_mask_0 = const()[name = tensor<string, []>("op_2986_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_2986_cast = slice_by_index(begin = var_2986_begin_0, end = var_2986_end_0, end_mask = var_2986_end_mask_0, x = q_21_cast);
            tensor<int32, [4]> var_2990_begin_0 = const()[name = tensor<string, []>("op_2990_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_2990_end_0 = const()[name = tensor<string, []>("op_2990_end_0"), val = tensor<int32, [4]>([2, 800, 1, 256])];
            tensor<bool, [4]> var_2990_end_mask_0 = const()[name = tensor<string, []>("op_2990_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_2990_cast = slice_by_index(begin = var_2990_begin_0, end = var_2990_end_0, end_mask = var_2990_end_mask_0, x = q_21_cast);
            tensor<int32, [4]> var_2994_begin_0 = const()[name = tensor<string, []>("op_2994_begin_0"), val = tensor<int32, [4]>([0, 800, 0, 0])];
            tensor<int32, [4]> var_2994_end_0 = const()[name = tensor<string, []>("op_2994_end_0"), val = tensor<int32, [4]>([2, 960, 1, 256])];
            tensor<bool, [4]> var_2994_end_mask_0 = const()[name = tensor<string, []>("op_2994_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_2994_cast = slice_by_index(begin = var_2994_begin_0, end = var_2994_end_0, end_mask = var_2994_end_mask_0, x = q_21_cast);
            tensor<int32, [4]> var_2998_begin_0 = const()[name = tensor<string, []>("op_2998_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_2998_end_0 = const()[name = tensor<string, []>("op_2998_end_0"), val = tensor<int32, [4]>([2, 1120, 1, 256])];
            tensor<bool, [4]> var_2998_end_mask_0 = const()[name = tensor<string, []>("op_2998_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_2998_cast = slice_by_index(begin = var_2998_begin_0, end = var_2998_end_0, end_mask = var_2998_end_mask_0, x = q_21_cast);
            tensor<int32, [4]> var_3002_begin_0 = const()[name = tensor<string, []>("op_3002_begin_0"), val = tensor<int32, [4]>([0, 1120, 0, 0])];
            tensor<int32, [4]> var_3002_end_0 = const()[name = tensor<string, []>("op_3002_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 256])];
            tensor<bool, [4]> var_3002_end_mask_0 = const()[name = tensor<string, []>("op_3002_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_3002_cast = slice_by_index(begin = var_3002_begin_0, end = var_3002_end_0, end_mask = var_3002_end_mask_0, x = q_21_cast);
            tensor<int32, [4]> k_43_perm_0 = const()[name = tensor<string, []>("k_43_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_3009_begin_0 = const()[name = tensor<string, []>("op_3009_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_3009_end_0 = const()[name = tensor<string, []>("op_3009_end_0"), val = tensor<int32, [4]>([2, 256, 1, 160])];
            tensor<bool, [4]> var_3009_end_mask_0 = const()[name = tensor<string, []>("op_3009_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 1280]> transpose_67 = transpose(perm = k_43_perm_0, x = k_41_cast);
            tensor<fp16, [2, 256, 1, 160]> var_3009_cast = slice_by_index(begin = var_3009_begin_0, end = var_3009_end_0, end_mask = var_3009_end_mask_0, x = transpose_67);
            tensor<int32, [4]> var_3013_begin_0 = const()[name = tensor<string, []>("op_3013_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 160])];
            tensor<int32, [4]> var_3013_end_0 = const()[name = tensor<string, []>("op_3013_end_0"), val = tensor<int32, [4]>([2, 256, 1, 320])];
            tensor<bool, [4]> var_3013_end_mask_0 = const()[name = tensor<string, []>("op_3013_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_3013_cast = slice_by_index(begin = var_3013_begin_0, end = var_3013_end_0, end_mask = var_3013_end_mask_0, x = transpose_67);
            tensor<int32, [4]> var_3017_begin_0 = const()[name = tensor<string, []>("op_3017_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_3017_end_0 = const()[name = tensor<string, []>("op_3017_end_0"), val = tensor<int32, [4]>([2, 256, 1, 480])];
            tensor<bool, [4]> var_3017_end_mask_0 = const()[name = tensor<string, []>("op_3017_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_3017_cast = slice_by_index(begin = var_3017_begin_0, end = var_3017_end_0, end_mask = var_3017_end_mask_0, x = transpose_67);
            tensor<int32, [4]> var_3021_begin_0 = const()[name = tensor<string, []>("op_3021_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 480])];
            tensor<int32, [4]> var_3021_end_0 = const()[name = tensor<string, []>("op_3021_end_0"), val = tensor<int32, [4]>([2, 256, 1, 640])];
            tensor<bool, [4]> var_3021_end_mask_0 = const()[name = tensor<string, []>("op_3021_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_3021_cast = slice_by_index(begin = var_3021_begin_0, end = var_3021_end_0, end_mask = var_3021_end_mask_0, x = transpose_67);
            tensor<int32, [4]> var_3025_begin_0 = const()[name = tensor<string, []>("op_3025_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 640])];
            tensor<int32, [4]> var_3025_end_0 = const()[name = tensor<string, []>("op_3025_end_0"), val = tensor<int32, [4]>([2, 256, 1, 800])];
            tensor<bool, [4]> var_3025_end_mask_0 = const()[name = tensor<string, []>("op_3025_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_3025_cast = slice_by_index(begin = var_3025_begin_0, end = var_3025_end_0, end_mask = var_3025_end_mask_0, x = transpose_67);
            tensor<int32, [4]> var_3029_begin_0 = const()[name = tensor<string, []>("op_3029_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 800])];
            tensor<int32, [4]> var_3029_end_0 = const()[name = tensor<string, []>("op_3029_end_0"), val = tensor<int32, [4]>([2, 256, 1, 960])];
            tensor<bool, [4]> var_3029_end_mask_0 = const()[name = tensor<string, []>("op_3029_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_3029_cast = slice_by_index(begin = var_3029_begin_0, end = var_3029_end_0, end_mask = var_3029_end_mask_0, x = transpose_67);
            tensor<int32, [4]> var_3033_begin_0 = const()[name = tensor<string, []>("op_3033_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 960])];
            tensor<int32, [4]> var_3033_end_0 = const()[name = tensor<string, []>("op_3033_end_0"), val = tensor<int32, [4]>([2, 256, 1, 1120])];
            tensor<bool, [4]> var_3033_end_mask_0 = const()[name = tensor<string, []>("op_3033_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_3033_cast = slice_by_index(begin = var_3033_begin_0, end = var_3033_end_0, end_mask = var_3033_end_mask_0, x = transpose_67);
            tensor<int32, [4]> var_3037_begin_0 = const()[name = tensor<string, []>("op_3037_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1120])];
            tensor<int32, [4]> var_3037_end_0 = const()[name = tensor<string, []>("op_3037_end_0"), val = tensor<int32, [4]>([2, 256, 1, 1280])];
            tensor<bool, [4]> var_3037_end_mask_0 = const()[name = tensor<string, []>("op_3037_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_3037_cast = slice_by_index(begin = var_3037_begin_0, end = var_3037_end_0, end_mask = var_3037_end_mask_0, x = transpose_67);
            tensor<int32, [4]> var_3039_begin_0 = const()[name = tensor<string, []>("op_3039_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_3039_end_0 = const()[name = tensor<string, []>("op_3039_end_0"), val = tensor<int32, [4]>([2, 160, 1, 256])];
            tensor<bool, [4]> var_3039_end_mask_0 = const()[name = tensor<string, []>("op_3039_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_3039_cast = slice_by_index(begin = var_3039_begin_0, end = var_3039_end_0, end_mask = var_3039_end_mask_0, x = v_21_cast);
            tensor<int32, [4]> var_3043_begin_0 = const()[name = tensor<string, []>("op_3043_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_3043_end_0 = const()[name = tensor<string, []>("op_3043_end_0"), val = tensor<int32, [4]>([2, 320, 1, 256])];
            tensor<bool, [4]> var_3043_end_mask_0 = const()[name = tensor<string, []>("op_3043_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_3043_cast = slice_by_index(begin = var_3043_begin_0, end = var_3043_end_0, end_mask = var_3043_end_mask_0, x = v_21_cast);
            tensor<int32, [4]> var_3047_begin_0 = const()[name = tensor<string, []>("op_3047_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_3047_end_0 = const()[name = tensor<string, []>("op_3047_end_0"), val = tensor<int32, [4]>([2, 480, 1, 256])];
            tensor<bool, [4]> var_3047_end_mask_0 = const()[name = tensor<string, []>("op_3047_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_3047_cast = slice_by_index(begin = var_3047_begin_0, end = var_3047_end_0, end_mask = var_3047_end_mask_0, x = v_21_cast);
            tensor<int32, [4]> var_3051_begin_0 = const()[name = tensor<string, []>("op_3051_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_3051_end_0 = const()[name = tensor<string, []>("op_3051_end_0"), val = tensor<int32, [4]>([2, 640, 1, 256])];
            tensor<bool, [4]> var_3051_end_mask_0 = const()[name = tensor<string, []>("op_3051_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_3051_cast = slice_by_index(begin = var_3051_begin_0, end = var_3051_end_0, end_mask = var_3051_end_mask_0, x = v_21_cast);
            tensor<int32, [4]> var_3055_begin_0 = const()[name = tensor<string, []>("op_3055_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_3055_end_0 = const()[name = tensor<string, []>("op_3055_end_0"), val = tensor<int32, [4]>([2, 800, 1, 256])];
            tensor<bool, [4]> var_3055_end_mask_0 = const()[name = tensor<string, []>("op_3055_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_3055_cast = slice_by_index(begin = var_3055_begin_0, end = var_3055_end_0, end_mask = var_3055_end_mask_0, x = v_21_cast);
            tensor<int32, [4]> var_3059_begin_0 = const()[name = tensor<string, []>("op_3059_begin_0"), val = tensor<int32, [4]>([0, 800, 0, 0])];
            tensor<int32, [4]> var_3059_end_0 = const()[name = tensor<string, []>("op_3059_end_0"), val = tensor<int32, [4]>([2, 960, 1, 256])];
            tensor<bool, [4]> var_3059_end_mask_0 = const()[name = tensor<string, []>("op_3059_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_3059_cast = slice_by_index(begin = var_3059_begin_0, end = var_3059_end_0, end_mask = var_3059_end_mask_0, x = v_21_cast);
            tensor<int32, [4]> var_3063_begin_0 = const()[name = tensor<string, []>("op_3063_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_3063_end_0 = const()[name = tensor<string, []>("op_3063_end_0"), val = tensor<int32, [4]>([2, 1120, 1, 256])];
            tensor<bool, [4]> var_3063_end_mask_0 = const()[name = tensor<string, []>("op_3063_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_3063_cast = slice_by_index(begin = var_3063_begin_0, end = var_3063_end_0, end_mask = var_3063_end_mask_0, x = v_21_cast);
            tensor<int32, [4]> var_3067_begin_0 = const()[name = tensor<string, []>("op_3067_begin_0"), val = tensor<int32, [4]>([0, 1120, 0, 0])];
            tensor<int32, [4]> var_3067_end_0 = const()[name = tensor<string, []>("op_3067_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 256])];
            tensor<bool, [4]> var_3067_end_mask_0 = const()[name = tensor<string, []>("op_3067_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_3067_cast = slice_by_index(begin = var_3067_begin_0, end = var_3067_end_0, end_mask = var_3067_end_mask_0, x = v_21_cast);
            tensor<string, []> var_3071_equation_0 = const()[name = tensor<string, []>("op_3071_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_3071_cast = einsum(equation = var_3071_equation_0, values = (var_3009_cast, var_2974_cast));
            tensor<fp16, []> var_3072_to_fp16 = const()[name = tensor<string, []>("op_3072_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_161_cast = mul(x = var_3071_cast, y = var_3072_to_fp16);
            tensor<string, []> var_3075_equation_0 = const()[name = tensor<string, []>("op_3075_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_3075_cast = einsum(equation = var_3075_equation_0, values = (var_3013_cast, var_2978_cast));
            tensor<fp16, []> var_3076_to_fp16 = const()[name = tensor<string, []>("op_3076_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_163_cast = mul(x = var_3075_cast, y = var_3076_to_fp16);
            tensor<string, []> var_3079_equation_0 = const()[name = tensor<string, []>("op_3079_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_3079_cast = einsum(equation = var_3079_equation_0, values = (var_3017_cast, var_2982_cast));
            tensor<fp16, []> var_3080_to_fp16 = const()[name = tensor<string, []>("op_3080_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_165_cast = mul(x = var_3079_cast, y = var_3080_to_fp16);
            tensor<string, []> var_3083_equation_0 = const()[name = tensor<string, []>("op_3083_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_3083_cast = einsum(equation = var_3083_equation_0, values = (var_3021_cast, var_2986_cast));
            tensor<fp16, []> var_3084_to_fp16 = const()[name = tensor<string, []>("op_3084_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_167_cast = mul(x = var_3083_cast, y = var_3084_to_fp16);
            tensor<string, []> var_3087_equation_0 = const()[name = tensor<string, []>("op_3087_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_3087_cast = einsum(equation = var_3087_equation_0, values = (var_3025_cast, var_2990_cast));
            tensor<fp16, []> var_3088_to_fp16 = const()[name = tensor<string, []>("op_3088_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_169_cast = mul(x = var_3087_cast, y = var_3088_to_fp16);
            tensor<string, []> var_3091_equation_0 = const()[name = tensor<string, []>("op_3091_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_3091_cast = einsum(equation = var_3091_equation_0, values = (var_3029_cast, var_2994_cast));
            tensor<fp16, []> var_3092_to_fp16 = const()[name = tensor<string, []>("op_3092_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_171_cast = mul(x = var_3091_cast, y = var_3092_to_fp16);
            tensor<string, []> var_3095_equation_0 = const()[name = tensor<string, []>("op_3095_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_3095_cast = einsum(equation = var_3095_equation_0, values = (var_3033_cast, var_2998_cast));
            tensor<fp16, []> var_3096_to_fp16 = const()[name = tensor<string, []>("op_3096_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_173_cast = mul(x = var_3095_cast, y = var_3096_to_fp16);
            tensor<string, []> var_3099_equation_0 = const()[name = tensor<string, []>("op_3099_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_3099_cast = einsum(equation = var_3099_equation_0, values = (var_3037_cast, var_3002_cast));
            tensor<fp16, []> var_3100_to_fp16 = const()[name = tensor<string, []>("op_3100_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_175_cast = mul(x = var_3099_cast, y = var_3100_to_fp16);
            tensor<fp16, [2, 256, 1, 256]> var_3102_cast = softmax(axis = var_2319, x = aw_161_cast);
            tensor<fp16, [2, 256, 1, 256]> var_3103_cast = softmax(axis = var_2319, x = aw_163_cast);
            tensor<fp16, [2, 256, 1, 256]> var_3104_cast = softmax(axis = var_2319, x = aw_165_cast);
            tensor<fp16, [2, 256, 1, 256]> var_3105_cast = softmax(axis = var_2319, x = aw_167_cast);
            tensor<fp16, [2, 256, 1, 256]> var_3106_cast = softmax(axis = var_2319, x = aw_169_cast);
            tensor<fp16, [2, 256, 1, 256]> var_3107_cast = softmax(axis = var_2319, x = aw_171_cast);
            tensor<fp16, [2, 256, 1, 256]> var_3108_cast = softmax(axis = var_2319, x = aw_173_cast);
            tensor<fp16, [2, 256, 1, 256]> var_3109_cast = softmax(axis = var_2319, x = aw_175_cast);
            tensor<string, []> var_3111_equation_0 = const()[name = tensor<string, []>("op_3111_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_3111_cast = einsum(equation = var_3111_equation_0, values = (var_3039_cast, var_3102_cast));
            tensor<string, []> var_3113_equation_0 = const()[name = tensor<string, []>("op_3113_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_3113_cast = einsum(equation = var_3113_equation_0, values = (var_3043_cast, var_3103_cast));
            tensor<string, []> var_3115_equation_0 = const()[name = tensor<string, []>("op_3115_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_3115_cast = einsum(equation = var_3115_equation_0, values = (var_3047_cast, var_3104_cast));
            tensor<string, []> var_3117_equation_0 = const()[name = tensor<string, []>("op_3117_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_3117_cast = einsum(equation = var_3117_equation_0, values = (var_3051_cast, var_3105_cast));
            tensor<string, []> var_3119_equation_0 = const()[name = tensor<string, []>("op_3119_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_3119_cast = einsum(equation = var_3119_equation_0, values = (var_3055_cast, var_3106_cast));
            tensor<string, []> var_3121_equation_0 = const()[name = tensor<string, []>("op_3121_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_3121_cast = einsum(equation = var_3121_equation_0, values = (var_3059_cast, var_3107_cast));
            tensor<string, []> var_3123_equation_0 = const()[name = tensor<string, []>("op_3123_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_3123_cast = einsum(equation = var_3123_equation_0, values = (var_3063_cast, var_3108_cast));
            tensor<string, []> var_3125_equation_0 = const()[name = tensor<string, []>("op_3125_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_3125_cast = einsum(equation = var_3125_equation_0, values = (var_3067_cast, var_3109_cast));
            tensor<bool, []> input_159_interleave_0 = const()[name = tensor<string, []>("input_159_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 1280, 1, 256]> input_159_cast = concat(axis = var_2319, interleave = input_159_interleave_0, values = (var_3111_cast, var_3113_cast, var_3115_cast, var_3117_cast, var_3119_cast, var_3121_cast, var_3123_cast, var_3125_cast));
            tensor<int32, [2]> var_3131 = const()[name = tensor<string, []>("op_3131"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3133 = const()[name = tensor<string, []>("op_3133"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_3135_pad_type_0 = const()[name = tensor<string, []>("op_3135_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_3135_pad_0 = const()[name = tensor<string, []>("op_3135_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> down_blocks_2_attentions_1_transformer_blocks_0_attn1_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_1_transformer_blocks_0_attn1_to_out_0_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(292966144)))];
            tensor<fp16, [1280]> down_blocks_2_attentions_1_transformer_blocks_0_attn1_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_1_transformer_blocks_0_attn1_to_out_0_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(296243008)))];
            tensor<fp16, [2, 1280, 1, 256]> var_3135_cast = conv(bias = down_blocks_2_attentions_1_transformer_blocks_0_attn1_to_out_0_bias_to_fp16, dilations = var_3133, groups = var_2319, pad = var_3135_pad_0, pad_type = var_3135_pad_type_0, strides = var_3131, weight = down_blocks_2_attentions_1_transformer_blocks_0_attn1_to_out_0_weight_to_fp16, x = input_159_cast);
            tensor<fp16, [2, 1280, 1, 256]> inputs_33_cast = add(x = var_3135_cast, y = inputs_31_cast);
            tensor<int32, [1]> var_3139 = const()[name = tensor<string, []>("op_3139"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> channels_mean_33_cast = reduce_mean(axes = var_3139, keep_dims = var_2314, x = inputs_33_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_33_cast = sub(x = inputs_33_cast, y = channels_mean_33_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_sq_33_cast = mul(x = zero_mean_33_cast, y = zero_mean_33_cast);
            tensor<int32, [1]> var_3143 = const()[name = tensor<string, []>("op_3143"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> var_3144_cast = reduce_mean(axes = var_3143, keep_dims = var_2314, x = zero_mean_sq_33_cast);
            tensor<fp16, []> var_3145_to_fp16 = const()[name = tensor<string, []>("op_3145_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 256]> var_3146_cast = add(x = var_3144_cast, y = var_3145_to_fp16);
            tensor<fp16, []> denom_33_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_33_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 256]> denom_33_cast = rsqrt(epsilon = denom_33_epsilon_0_to_fp16, x = var_3146_cast);
            tensor<fp16, [2, 1280, 1, 256]> out_33_cast = mul(x = zero_mean_33_cast, y = denom_33_cast);
            tensor<fp16, [1, 1280, 1, 1]> var_3150_to_fp16 = const()[name = tensor<string, []>("op_3150_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(296245632)))];
            tensor<fp16, [2, 1280, 1, 256]> var_3151_cast = add(x = out_33_cast, y = var_3150_to_fp16);
            tensor<fp16, [1, 1280, 1, 1]> var_3153_to_fp16 = const()[name = tensor<string, []>("op_3153_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(296248256)))];
            tensor<fp16, [2, 1280, 1, 256]> hidden_states_101_cast = mul(x = var_3151_cast, y = var_3153_to_fp16);
            tensor<int32, [2]> var_3160 = const()[name = tensor<string, []>("op_3160"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3162 = const()[name = tensor<string, []>("op_3162"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_23_pad_type_0 = const()[name = tensor<string, []>("q_23_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_23_pad_0 = const()[name = tensor<string, []>("q_23_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> down_blocks_2_attentions_1_transformer_blocks_0_attn2_to_q_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_1_transformer_blocks_0_attn2_to_q_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(296250880)))];
            tensor<fp16, [2, 1280, 1, 256]> q_23_cast = conv(dilations = var_3162, groups = var_2319, pad = q_23_pad_0, pad_type = q_23_pad_type_0, strides = var_3160, weight = down_blocks_2_attentions_1_transformer_blocks_0_attn2_to_q_weight_to_fp16, x = hidden_states_101_cast);
            tensor<int32, [2]> var_3166 = const()[name = tensor<string, []>("op_3166"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3168 = const()[name = tensor<string, []>("op_3168"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_45_pad_type_0 = const()[name = tensor<string, []>("k_45_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_45_pad_0 = const()[name = tensor<string, []>("k_45_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 768, 1, 1]> down_blocks_2_attentions_1_transformer_blocks_0_attn2_to_k_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_1_transformer_blocks_0_attn2_to_k_weight_to_fp16"), val = tensor<fp16, [1280, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(299527744)))];
            tensor<fp16, [2, 1280, 1, 77]> k_45_cast = conv(dilations = var_3168, groups = var_2319, pad = k_45_pad_0, pad_type = k_45_pad_type_0, strides = var_3166, weight = down_blocks_2_attentions_1_transformer_blocks_0_attn2_to_k_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [2]> var_3172 = const()[name = tensor<string, []>("op_3172"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3174 = const()[name = tensor<string, []>("op_3174"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_23_pad_type_0 = const()[name = tensor<string, []>("v_23_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_23_pad_0 = const()[name = tensor<string, []>("v_23_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 768, 1, 1]> down_blocks_2_attentions_1_transformer_blocks_0_attn2_to_v_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_1_transformer_blocks_0_attn2_to_v_weight_to_fp16"), val = tensor<fp16, [1280, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(301493888)))];
            tensor<fp16, [2, 1280, 1, 77]> v_23_cast = conv(dilations = var_3174, groups = var_2319, pad = v_23_pad_0, pad_type = v_23_pad_type_0, strides = var_3172, weight = down_blocks_2_attentions_1_transformer_blocks_0_attn2_to_v_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [4]> var_3178_begin_0 = const()[name = tensor<string, []>("op_3178_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_3178_end_0 = const()[name = tensor<string, []>("op_3178_end_0"), val = tensor<int32, [4]>([2, 160, 1, 256])];
            tensor<bool, [4]> var_3178_end_mask_0 = const()[name = tensor<string, []>("op_3178_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_3178_cast = slice_by_index(begin = var_3178_begin_0, end = var_3178_end_0, end_mask = var_3178_end_mask_0, x = q_23_cast);
            tensor<int32, [4]> var_3182_begin_0 = const()[name = tensor<string, []>("op_3182_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_3182_end_0 = const()[name = tensor<string, []>("op_3182_end_0"), val = tensor<int32, [4]>([2, 320, 1, 256])];
            tensor<bool, [4]> var_3182_end_mask_0 = const()[name = tensor<string, []>("op_3182_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_3182_cast = slice_by_index(begin = var_3182_begin_0, end = var_3182_end_0, end_mask = var_3182_end_mask_0, x = q_23_cast);
            tensor<int32, [4]> var_3186_begin_0 = const()[name = tensor<string, []>("op_3186_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_3186_end_0 = const()[name = tensor<string, []>("op_3186_end_0"), val = tensor<int32, [4]>([2, 480, 1, 256])];
            tensor<bool, [4]> var_3186_end_mask_0 = const()[name = tensor<string, []>("op_3186_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_3186_cast = slice_by_index(begin = var_3186_begin_0, end = var_3186_end_0, end_mask = var_3186_end_mask_0, x = q_23_cast);
            tensor<int32, [4]> var_3190_begin_0 = const()[name = tensor<string, []>("op_3190_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_3190_end_0 = const()[name = tensor<string, []>("op_3190_end_0"), val = tensor<int32, [4]>([2, 640, 1, 256])];
            tensor<bool, [4]> var_3190_end_mask_0 = const()[name = tensor<string, []>("op_3190_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_3190_cast = slice_by_index(begin = var_3190_begin_0, end = var_3190_end_0, end_mask = var_3190_end_mask_0, x = q_23_cast);
            tensor<int32, [4]> var_3194_begin_0 = const()[name = tensor<string, []>("op_3194_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_3194_end_0 = const()[name = tensor<string, []>("op_3194_end_0"), val = tensor<int32, [4]>([2, 800, 1, 256])];
            tensor<bool, [4]> var_3194_end_mask_0 = const()[name = tensor<string, []>("op_3194_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_3194_cast = slice_by_index(begin = var_3194_begin_0, end = var_3194_end_0, end_mask = var_3194_end_mask_0, x = q_23_cast);
            tensor<int32, [4]> var_3198_begin_0 = const()[name = tensor<string, []>("op_3198_begin_0"), val = tensor<int32, [4]>([0, 800, 0, 0])];
            tensor<int32, [4]> var_3198_end_0 = const()[name = tensor<string, []>("op_3198_end_0"), val = tensor<int32, [4]>([2, 960, 1, 256])];
            tensor<bool, [4]> var_3198_end_mask_0 = const()[name = tensor<string, []>("op_3198_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_3198_cast = slice_by_index(begin = var_3198_begin_0, end = var_3198_end_0, end_mask = var_3198_end_mask_0, x = q_23_cast);
            tensor<int32, [4]> var_3202_begin_0 = const()[name = tensor<string, []>("op_3202_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_3202_end_0 = const()[name = tensor<string, []>("op_3202_end_0"), val = tensor<int32, [4]>([2, 1120, 1, 256])];
            tensor<bool, [4]> var_3202_end_mask_0 = const()[name = tensor<string, []>("op_3202_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_3202_cast = slice_by_index(begin = var_3202_begin_0, end = var_3202_end_0, end_mask = var_3202_end_mask_0, x = q_23_cast);
            tensor<int32, [4]> var_3206_begin_0 = const()[name = tensor<string, []>("op_3206_begin_0"), val = tensor<int32, [4]>([0, 1120, 0, 0])];
            tensor<int32, [4]> var_3206_end_0 = const()[name = tensor<string, []>("op_3206_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 256])];
            tensor<bool, [4]> var_3206_end_mask_0 = const()[name = tensor<string, []>("op_3206_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_3206_cast = slice_by_index(begin = var_3206_begin_0, end = var_3206_end_0, end_mask = var_3206_end_mask_0, x = q_23_cast);
            tensor<int32, [4]> k_47_perm_0 = const()[name = tensor<string, []>("k_47_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_3213_begin_0 = const()[name = tensor<string, []>("op_3213_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_3213_end_0 = const()[name = tensor<string, []>("op_3213_end_0"), val = tensor<int32, [4]>([2, 77, 1, 160])];
            tensor<bool, [4]> var_3213_end_mask_0 = const()[name = tensor<string, []>("op_3213_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 1280]> transpose_66 = transpose(perm = k_47_perm_0, x = k_45_cast);
            tensor<fp16, [2, 77, 1, 160]> var_3213_cast = slice_by_index(begin = var_3213_begin_0, end = var_3213_end_0, end_mask = var_3213_end_mask_0, x = transpose_66);
            tensor<int32, [4]> var_3217_begin_0 = const()[name = tensor<string, []>("op_3217_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 160])];
            tensor<int32, [4]> var_3217_end_0 = const()[name = tensor<string, []>("op_3217_end_0"), val = tensor<int32, [4]>([2, 77, 1, 320])];
            tensor<bool, [4]> var_3217_end_mask_0 = const()[name = tensor<string, []>("op_3217_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_3217_cast = slice_by_index(begin = var_3217_begin_0, end = var_3217_end_0, end_mask = var_3217_end_mask_0, x = transpose_66);
            tensor<int32, [4]> var_3221_begin_0 = const()[name = tensor<string, []>("op_3221_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_3221_end_0 = const()[name = tensor<string, []>("op_3221_end_0"), val = tensor<int32, [4]>([2, 77, 1, 480])];
            tensor<bool, [4]> var_3221_end_mask_0 = const()[name = tensor<string, []>("op_3221_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_3221_cast = slice_by_index(begin = var_3221_begin_0, end = var_3221_end_0, end_mask = var_3221_end_mask_0, x = transpose_66);
            tensor<int32, [4]> var_3225_begin_0 = const()[name = tensor<string, []>("op_3225_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 480])];
            tensor<int32, [4]> var_3225_end_0 = const()[name = tensor<string, []>("op_3225_end_0"), val = tensor<int32, [4]>([2, 77, 1, 640])];
            tensor<bool, [4]> var_3225_end_mask_0 = const()[name = tensor<string, []>("op_3225_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_3225_cast = slice_by_index(begin = var_3225_begin_0, end = var_3225_end_0, end_mask = var_3225_end_mask_0, x = transpose_66);
            tensor<int32, [4]> var_3229_begin_0 = const()[name = tensor<string, []>("op_3229_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 640])];
            tensor<int32, [4]> var_3229_end_0 = const()[name = tensor<string, []>("op_3229_end_0"), val = tensor<int32, [4]>([2, 77, 1, 800])];
            tensor<bool, [4]> var_3229_end_mask_0 = const()[name = tensor<string, []>("op_3229_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_3229_cast = slice_by_index(begin = var_3229_begin_0, end = var_3229_end_0, end_mask = var_3229_end_mask_0, x = transpose_66);
            tensor<int32, [4]> var_3233_begin_0 = const()[name = tensor<string, []>("op_3233_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 800])];
            tensor<int32, [4]> var_3233_end_0 = const()[name = tensor<string, []>("op_3233_end_0"), val = tensor<int32, [4]>([2, 77, 1, 960])];
            tensor<bool, [4]> var_3233_end_mask_0 = const()[name = tensor<string, []>("op_3233_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_3233_cast = slice_by_index(begin = var_3233_begin_0, end = var_3233_end_0, end_mask = var_3233_end_mask_0, x = transpose_66);
            tensor<int32, [4]> var_3237_begin_0 = const()[name = tensor<string, []>("op_3237_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 960])];
            tensor<int32, [4]> var_3237_end_0 = const()[name = tensor<string, []>("op_3237_end_0"), val = tensor<int32, [4]>([2, 77, 1, 1120])];
            tensor<bool, [4]> var_3237_end_mask_0 = const()[name = tensor<string, []>("op_3237_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_3237_cast = slice_by_index(begin = var_3237_begin_0, end = var_3237_end_0, end_mask = var_3237_end_mask_0, x = transpose_66);
            tensor<int32, [4]> var_3241_begin_0 = const()[name = tensor<string, []>("op_3241_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1120])];
            tensor<int32, [4]> var_3241_end_0 = const()[name = tensor<string, []>("op_3241_end_0"), val = tensor<int32, [4]>([2, 77, 1, 1280])];
            tensor<bool, [4]> var_3241_end_mask_0 = const()[name = tensor<string, []>("op_3241_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_3241_cast = slice_by_index(begin = var_3241_begin_0, end = var_3241_end_0, end_mask = var_3241_end_mask_0, x = transpose_66);
            tensor<int32, [4]> var_3243_begin_0 = const()[name = tensor<string, []>("op_3243_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_3243_end_0 = const()[name = tensor<string, []>("op_3243_end_0"), val = tensor<int32, [4]>([2, 160, 1, 77])];
            tensor<bool, [4]> var_3243_end_mask_0 = const()[name = tensor<string, []>("op_3243_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_3243_cast = slice_by_index(begin = var_3243_begin_0, end = var_3243_end_0, end_mask = var_3243_end_mask_0, x = v_23_cast);
            tensor<int32, [4]> var_3247_begin_0 = const()[name = tensor<string, []>("op_3247_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_3247_end_0 = const()[name = tensor<string, []>("op_3247_end_0"), val = tensor<int32, [4]>([2, 320, 1, 77])];
            tensor<bool, [4]> var_3247_end_mask_0 = const()[name = tensor<string, []>("op_3247_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_3247_cast = slice_by_index(begin = var_3247_begin_0, end = var_3247_end_0, end_mask = var_3247_end_mask_0, x = v_23_cast);
            tensor<int32, [4]> var_3251_begin_0 = const()[name = tensor<string, []>("op_3251_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_3251_end_0 = const()[name = tensor<string, []>("op_3251_end_0"), val = tensor<int32, [4]>([2, 480, 1, 77])];
            tensor<bool, [4]> var_3251_end_mask_0 = const()[name = tensor<string, []>("op_3251_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_3251_cast = slice_by_index(begin = var_3251_begin_0, end = var_3251_end_0, end_mask = var_3251_end_mask_0, x = v_23_cast);
            tensor<int32, [4]> var_3255_begin_0 = const()[name = tensor<string, []>("op_3255_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_3255_end_0 = const()[name = tensor<string, []>("op_3255_end_0"), val = tensor<int32, [4]>([2, 640, 1, 77])];
            tensor<bool, [4]> var_3255_end_mask_0 = const()[name = tensor<string, []>("op_3255_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_3255_cast = slice_by_index(begin = var_3255_begin_0, end = var_3255_end_0, end_mask = var_3255_end_mask_0, x = v_23_cast);
            tensor<int32, [4]> var_3259_begin_0 = const()[name = tensor<string, []>("op_3259_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_3259_end_0 = const()[name = tensor<string, []>("op_3259_end_0"), val = tensor<int32, [4]>([2, 800, 1, 77])];
            tensor<bool, [4]> var_3259_end_mask_0 = const()[name = tensor<string, []>("op_3259_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_3259_cast = slice_by_index(begin = var_3259_begin_0, end = var_3259_end_0, end_mask = var_3259_end_mask_0, x = v_23_cast);
            tensor<int32, [4]> var_3263_begin_0 = const()[name = tensor<string, []>("op_3263_begin_0"), val = tensor<int32, [4]>([0, 800, 0, 0])];
            tensor<int32, [4]> var_3263_end_0 = const()[name = tensor<string, []>("op_3263_end_0"), val = tensor<int32, [4]>([2, 960, 1, 77])];
            tensor<bool, [4]> var_3263_end_mask_0 = const()[name = tensor<string, []>("op_3263_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_3263_cast = slice_by_index(begin = var_3263_begin_0, end = var_3263_end_0, end_mask = var_3263_end_mask_0, x = v_23_cast);
            tensor<int32, [4]> var_3267_begin_0 = const()[name = tensor<string, []>("op_3267_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_3267_end_0 = const()[name = tensor<string, []>("op_3267_end_0"), val = tensor<int32, [4]>([2, 1120, 1, 77])];
            tensor<bool, [4]> var_3267_end_mask_0 = const()[name = tensor<string, []>("op_3267_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_3267_cast = slice_by_index(begin = var_3267_begin_0, end = var_3267_end_0, end_mask = var_3267_end_mask_0, x = v_23_cast);
            tensor<int32, [4]> var_3271_begin_0 = const()[name = tensor<string, []>("op_3271_begin_0"), val = tensor<int32, [4]>([0, 1120, 0, 0])];
            tensor<int32, [4]> var_3271_end_0 = const()[name = tensor<string, []>("op_3271_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 77])];
            tensor<bool, [4]> var_3271_end_mask_0 = const()[name = tensor<string, []>("op_3271_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_3271_cast = slice_by_index(begin = var_3271_begin_0, end = var_3271_end_0, end_mask = var_3271_end_mask_0, x = v_23_cast);
            tensor<string, []> var_3275_equation_0 = const()[name = tensor<string, []>("op_3275_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_3275_cast = einsum(equation = var_3275_equation_0, values = (var_3213_cast, var_3178_cast));
            tensor<fp16, []> var_3276_to_fp16 = const()[name = tensor<string, []>("op_3276_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_177_cast = mul(x = var_3275_cast, y = var_3276_to_fp16);
            tensor<string, []> var_3279_equation_0 = const()[name = tensor<string, []>("op_3279_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_3279_cast = einsum(equation = var_3279_equation_0, values = (var_3217_cast, var_3182_cast));
            tensor<fp16, []> var_3280_to_fp16 = const()[name = tensor<string, []>("op_3280_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_179_cast = mul(x = var_3279_cast, y = var_3280_to_fp16);
            tensor<string, []> var_3283_equation_0 = const()[name = tensor<string, []>("op_3283_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_3283_cast = einsum(equation = var_3283_equation_0, values = (var_3221_cast, var_3186_cast));
            tensor<fp16, []> var_3284_to_fp16 = const()[name = tensor<string, []>("op_3284_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_181_cast = mul(x = var_3283_cast, y = var_3284_to_fp16);
            tensor<string, []> var_3287_equation_0 = const()[name = tensor<string, []>("op_3287_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_3287_cast = einsum(equation = var_3287_equation_0, values = (var_3225_cast, var_3190_cast));
            tensor<fp16, []> var_3288_to_fp16 = const()[name = tensor<string, []>("op_3288_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_183_cast = mul(x = var_3287_cast, y = var_3288_to_fp16);
            tensor<string, []> var_3291_equation_0 = const()[name = tensor<string, []>("op_3291_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_3291_cast = einsum(equation = var_3291_equation_0, values = (var_3229_cast, var_3194_cast));
            tensor<fp16, []> var_3292_to_fp16 = const()[name = tensor<string, []>("op_3292_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_185_cast = mul(x = var_3291_cast, y = var_3292_to_fp16);
            tensor<string, []> var_3295_equation_0 = const()[name = tensor<string, []>("op_3295_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_3295_cast = einsum(equation = var_3295_equation_0, values = (var_3233_cast, var_3198_cast));
            tensor<fp16, []> var_3296_to_fp16 = const()[name = tensor<string, []>("op_3296_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_187_cast = mul(x = var_3295_cast, y = var_3296_to_fp16);
            tensor<string, []> var_3299_equation_0 = const()[name = tensor<string, []>("op_3299_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_3299_cast = einsum(equation = var_3299_equation_0, values = (var_3237_cast, var_3202_cast));
            tensor<fp16, []> var_3300_to_fp16 = const()[name = tensor<string, []>("op_3300_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_189_cast = mul(x = var_3299_cast, y = var_3300_to_fp16);
            tensor<string, []> var_3303_equation_0 = const()[name = tensor<string, []>("op_3303_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_3303_cast = einsum(equation = var_3303_equation_0, values = (var_3241_cast, var_3206_cast));
            tensor<fp16, []> var_3304_to_fp16 = const()[name = tensor<string, []>("op_3304_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_191_cast = mul(x = var_3303_cast, y = var_3304_to_fp16);
            tensor<fp16, [2, 77, 1, 256]> var_3306_cast = softmax(axis = var_2319, x = aw_177_cast);
            tensor<fp16, [2, 77, 1, 256]> var_3307_cast = softmax(axis = var_2319, x = aw_179_cast);
            tensor<fp16, [2, 77, 1, 256]> var_3308_cast = softmax(axis = var_2319, x = aw_181_cast);
            tensor<fp16, [2, 77, 1, 256]> var_3309_cast = softmax(axis = var_2319, x = aw_183_cast);
            tensor<fp16, [2, 77, 1, 256]> var_3310_cast = softmax(axis = var_2319, x = aw_185_cast);
            tensor<fp16, [2, 77, 1, 256]> var_3311_cast = softmax(axis = var_2319, x = aw_187_cast);
            tensor<fp16, [2, 77, 1, 256]> var_3312_cast = softmax(axis = var_2319, x = aw_189_cast);
            tensor<fp16, [2, 77, 1, 256]> var_3313_cast = softmax(axis = var_2319, x = aw_191_cast);
            tensor<string, []> var_3315_equation_0 = const()[name = tensor<string, []>("op_3315_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_3315_cast = einsum(equation = var_3315_equation_0, values = (var_3243_cast, var_3306_cast));
            tensor<string, []> var_3317_equation_0 = const()[name = tensor<string, []>("op_3317_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_3317_cast = einsum(equation = var_3317_equation_0, values = (var_3247_cast, var_3307_cast));
            tensor<string, []> var_3319_equation_0 = const()[name = tensor<string, []>("op_3319_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_3319_cast = einsum(equation = var_3319_equation_0, values = (var_3251_cast, var_3308_cast));
            tensor<string, []> var_3321_equation_0 = const()[name = tensor<string, []>("op_3321_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_3321_cast = einsum(equation = var_3321_equation_0, values = (var_3255_cast, var_3309_cast));
            tensor<string, []> var_3323_equation_0 = const()[name = tensor<string, []>("op_3323_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_3323_cast = einsum(equation = var_3323_equation_0, values = (var_3259_cast, var_3310_cast));
            tensor<string, []> var_3325_equation_0 = const()[name = tensor<string, []>("op_3325_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_3325_cast = einsum(equation = var_3325_equation_0, values = (var_3263_cast, var_3311_cast));
            tensor<string, []> var_3327_equation_0 = const()[name = tensor<string, []>("op_3327_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_3327_cast = einsum(equation = var_3327_equation_0, values = (var_3267_cast, var_3312_cast));
            tensor<string, []> var_3329_equation_0 = const()[name = tensor<string, []>("op_3329_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_3329_cast = einsum(equation = var_3329_equation_0, values = (var_3271_cast, var_3313_cast));
            tensor<bool, []> input_161_interleave_0 = const()[name = tensor<string, []>("input_161_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 1280, 1, 256]> input_161_cast = concat(axis = var_2319, interleave = input_161_interleave_0, values = (var_3315_cast, var_3317_cast, var_3319_cast, var_3321_cast, var_3323_cast, var_3325_cast, var_3327_cast, var_3329_cast));
            tensor<int32, [2]> var_3335 = const()[name = tensor<string, []>("op_3335"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3337 = const()[name = tensor<string, []>("op_3337"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_3339_pad_type_0 = const()[name = tensor<string, []>("op_3339_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_3339_pad_0 = const()[name = tensor<string, []>("op_3339_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> down_blocks_2_attentions_1_transformer_blocks_0_attn2_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_1_transformer_blocks_0_attn2_to_out_0_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(303460032)))];
            tensor<fp16, [1280]> down_blocks_2_attentions_1_transformer_blocks_0_attn2_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_1_transformer_blocks_0_attn2_to_out_0_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(306736896)))];
            tensor<fp16, [2, 1280, 1, 256]> var_3339_cast = conv(bias = down_blocks_2_attentions_1_transformer_blocks_0_attn2_to_out_0_bias_to_fp16, dilations = var_3337, groups = var_2319, pad = var_3339_pad_0, pad_type = var_3339_pad_type_0, strides = var_3335, weight = down_blocks_2_attentions_1_transformer_blocks_0_attn2_to_out_0_weight_to_fp16, x = input_161_cast);
            tensor<fp16, [2, 1280, 1, 256]> inputs_35_cast = add(x = var_3339_cast, y = inputs_33_cast);
            tensor<int32, [1]> var_3343 = const()[name = tensor<string, []>("op_3343"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> channels_mean_35_cast = reduce_mean(axes = var_3343, keep_dims = var_2314, x = inputs_35_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_35_cast = sub(x = inputs_35_cast, y = channels_mean_35_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_sq_35_cast = mul(x = zero_mean_35_cast, y = zero_mean_35_cast);
            tensor<int32, [1]> var_3347 = const()[name = tensor<string, []>("op_3347"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> var_3348_cast = reduce_mean(axes = var_3347, keep_dims = var_2314, x = zero_mean_sq_35_cast);
            tensor<fp16, []> var_3349_to_fp16 = const()[name = tensor<string, []>("op_3349_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 256]> var_3350_cast = add(x = var_3348_cast, y = var_3349_to_fp16);
            tensor<fp16, []> denom_35_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_35_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 256]> denom_35_cast = rsqrt(epsilon = denom_35_epsilon_0_to_fp16, x = var_3350_cast);
            tensor<fp16, [2, 1280, 1, 256]> out_35_cast = mul(x = zero_mean_35_cast, y = denom_35_cast);
            tensor<fp16, [1, 1280, 1, 1]> var_3354_to_fp16 = const()[name = tensor<string, []>("op_3354_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(306739520)))];
            tensor<fp16, [2, 1280, 1, 256]> var_3355_cast = add(x = out_35_cast, y = var_3354_to_fp16);
            tensor<fp16, [1, 1280, 1, 1]> var_3357_to_fp16 = const()[name = tensor<string, []>("op_3357_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(306742144)))];
            tensor<fp16, [2, 1280, 1, 256]> input_163_cast = mul(x = var_3355_cast, y = var_3357_to_fp16);
            tensor<int32, [2]> var_3365 = const()[name = tensor<string, []>("op_3365"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3367 = const()[name = tensor<string, []>("op_3367"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_3369_pad_type_0 = const()[name = tensor<string, []>("op_3369_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_3369_pad_0 = const()[name = tensor<string, []>("op_3369_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [10240, 1280, 1, 1]> down_blocks_2_attentions_1_transformer_blocks_0_ff_net_0_proj_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_1_transformer_blocks_0_ff_net_0_proj_weight_to_fp16"), val = tensor<fp16, [10240, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(306744768)))];
            tensor<fp16, [10240]> down_blocks_2_attentions_1_transformer_blocks_0_ff_net_0_proj_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_1_transformer_blocks_0_ff_net_0_proj_bias_to_fp16"), val = tensor<fp16, [10240]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(332959232)))];
            tensor<fp16, [2, 10240, 1, 256]> var_3369_cast = conv(bias = down_blocks_2_attentions_1_transformer_blocks_0_ff_net_0_proj_bias_to_fp16, dilations = var_3367, groups = var_2319, pad = var_3369_pad_0, pad_type = var_3369_pad_type_0, strides = var_3365, weight = down_blocks_2_attentions_1_transformer_blocks_0_ff_net_0_proj_weight_to_fp16, x = input_163_cast);
            tensor<int32, [2]> var_3370_split_sizes_0 = const()[name = tensor<string, []>("op_3370_split_sizes_0"), val = tensor<int32, [2]>([5120, 5120])];
            tensor<int32, []> var_3370_axis_0 = const()[name = tensor<string, []>("op_3370_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [2, 5120, 1, 256]> var_3370_cast_0, tensor<fp16, [2, 5120, 1, 256]> var_3370_cast_1 = split(axis = var_3370_axis_0, split_sizes = var_3370_split_sizes_0, x = var_3369_cast);
            tensor<string, []> var_3372_mode_0 = const()[name = tensor<string, []>("op_3372_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [2, 5120, 1, 256]> var_3372_cast = gelu(mode = var_3372_mode_0, x = var_3370_cast_1);
            tensor<fp16, [2, 5120, 1, 256]> input_165_cast = mul(x = var_3370_cast_0, y = var_3372_cast);
            tensor<int32, [2]> var_3376 = const()[name = tensor<string, []>("op_3376"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3378 = const()[name = tensor<string, []>("op_3378"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_3380_pad_type_0 = const()[name = tensor<string, []>("op_3380_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_3380_pad_0 = const()[name = tensor<string, []>("op_3380_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 5120, 1, 1]> down_blocks_2_attentions_1_transformer_blocks_0_ff_net_2_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_1_transformer_blocks_0_ff_net_2_weight_to_fp16"), val = tensor<fp16, [1280, 5120, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(332979776)))];
            tensor<fp16, [1280]> down_blocks_2_attentions_1_transformer_blocks_0_ff_net_2_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_1_transformer_blocks_0_ff_net_2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(346087040)))];
            tensor<fp16, [2, 1280, 1, 256]> var_3380_cast = conv(bias = down_blocks_2_attentions_1_transformer_blocks_0_ff_net_2_bias_to_fp16, dilations = var_3378, groups = var_2319, pad = var_3380_pad_0, pad_type = var_3380_pad_type_0, strides = var_3376, weight = down_blocks_2_attentions_1_transformer_blocks_0_ff_net_2_weight_to_fp16, x = input_165_cast);
            tensor<fp16, [2, 1280, 1, 256]> hidden_states_105_cast = add(x = var_3380_cast, y = inputs_35_cast);
            tensor<int32, [4]> var_3382 = const()[name = tensor<string, []>("op_3382"), val = tensor<int32, [4]>([2, 1280, 16, 16])];
            tensor<fp16, [2, 1280, 16, 16]> input_167_cast = reshape(shape = var_3382, x = hidden_states_105_cast);
            tensor<int32, [2]> var_3386 = const()[name = tensor<string, []>("op_3386"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3388 = const()[name = tensor<string, []>("op_3388"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_107_pad_type_0 = const()[name = tensor<string, []>("hidden_states_107_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_107_pad_0 = const()[name = tensor<string, []>("hidden_states_107_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> down_blocks_2_attentions_1_proj_out_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_1_proj_out_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(346089664)))];
            tensor<fp16, [1280]> down_blocks_2_attentions_1_proj_out_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_1_proj_out_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(349366528)))];
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_107_cast = conv(bias = down_blocks_2_attentions_1_proj_out_bias_to_fp16, dilations = var_3388, groups = var_2319, pad = hidden_states_107_pad_0, pad_type = hidden_states_107_pad_type_0, strides = var_3386, weight = down_blocks_2_attentions_1_proj_out_weight_to_fp16, x = input_167_cast);
            tensor<fp16, [2, 1280, 16, 16]> input_169_cast_1 = add(x = hidden_states_107_cast, y = hidden_states_95_cast);
            tensor<int32, [2]> var_3395 = const()[name = tensor<string, []>("op_3395"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> var_3397 = const()[name = tensor<string, []>("op_3397"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_171_pad_type_0 = const()[name = tensor<string, []>("input_171_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_171_pad_0 = const()[name = tensor<string, []>("input_171_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 1280, 3, 3]> down_blocks_2_downsamplers_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_downsamplers_0_conv_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(349369152)))];
            tensor<fp16, [1280]> down_blocks_2_downsamplers_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_downsamplers_0_conv_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(378860416)))];
            tensor<fp16, [2, 1280, 8, 8]> input_171_cast_1 = conv(bias = down_blocks_2_downsamplers_0_conv_bias_to_fp16, dilations = var_3397, groups = var_2319, pad = input_171_pad_0, pad_type = input_171_pad_type_0, strides = var_3395, weight = down_blocks_2_downsamplers_0_conv_weight_to_fp16, x = input_169_cast_1);
            tensor<int32, []> var_3409 = const()[name = tensor<string, []>("op_3409"), val = tensor<int32, []>(1)];
            tensor<int32, [5]> reshape_72_shape_0 = const()[name = tensor<string, []>("reshape_72_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 8, 8])];
            tensor<fp16, [2, 32, 40, 8, 8]> reshape_72_cast = reshape(shape = reshape_72_shape_0, x = input_171_cast_1);
            tensor<int32, [3]> reduce_mean_54_axes_0 = const()[name = tensor<string, []>("reduce_mean_54_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_54_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_54_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_54_cast = reduce_mean(axes = reduce_mean_54_axes_0, keep_dims = reduce_mean_54_keep_dims_0, x = reshape_72_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> sub_36_cast = sub(x = reshape_72_cast, y = reduce_mean_54_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> square_18_cast = square(x = sub_36_cast);
            tensor<int32, [3]> reduce_mean_56_axes_0 = const()[name = tensor<string, []>("reduce_mean_56_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_56_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_56_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_56_cast = reduce_mean(axes = reduce_mean_56_axes_0, keep_dims = reduce_mean_56_keep_dims_0, x = square_18_cast);
            tensor<fp16, []> add_36_y_0_to_fp16 = const()[name = tensor<string, []>("add_36_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_36_cast = add(x = reduce_mean_56_cast, y = add_36_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_18_cast = sqrt(x = add_36_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> real_div_18_cast = real_div(x = sub_36_cast, y = sqrt_18_cast);
            tensor<int32, [4]> reshape_73_shape_0 = const()[name = tensor<string, []>("reshape_73_shape_0"), val = tensor<int32, [4]>([2, 1280, 8, 8])];
            tensor<fp16, [2, 1280, 8, 8]> reshape_73_cast = reshape(shape = reshape_73_shape_0, x = real_div_18_cast);
            tensor<fp16, [1280]> add_37_mean_0_to_fp16 = const()[name = tensor<string, []>("add_37_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(378863040)))];
            tensor<fp16, [1280]> add_37_variance_0_to_fp16 = const()[name = tensor<string, []>("add_37_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(378865664)))];
            tensor<fp16, [1280]> add_37_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_37_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(378868288)))];
            tensor<fp16, [1280]> add_37_beta_0_to_fp16 = const()[name = tensor<string, []>("add_37_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(378870912)))];
            tensor<fp16, []> add_37_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_37_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 8, 8]> add_37_cast = batch_norm(beta = add_37_beta_0_to_fp16, epsilon = add_37_epsilon_0_to_fp16, gamma = add_37_gamma_0_to_fp16, mean = add_37_mean_0_to_fp16, variance = add_37_variance_0_to_fp16, x = reshape_73_cast);
            tensor<fp16, [2, 1280, 8, 8]> input_175_cast = silu(x = add_37_cast);
            tensor<int32, [2]> var_3425 = const()[name = tensor<string, []>("op_3425"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3427 = const()[name = tensor<string, []>("op_3427"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_109_pad_type_0 = const()[name = tensor<string, []>("hidden_states_109_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_109_pad_0 = const()[name = tensor<string, []>("hidden_states_109_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 1280, 3, 3]> down_blocks_3_resnets_0_conv1_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_3_resnets_0_conv1_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(378873536)))];
            tensor<fp16, [1280]> down_blocks_3_resnets_0_conv1_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_3_resnets_0_conv1_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(408364800)))];
            tensor<fp16, [2, 1280, 8, 8]> hidden_states_109_cast = conv(bias = down_blocks_3_resnets_0_conv1_bias_to_fp16, dilations = var_3427, groups = var_3409, pad = hidden_states_109_pad_0, pad_type = hidden_states_109_pad_type_0, strides = var_3425, weight = down_blocks_3_resnets_0_conv1_weight_to_fp16, x = input_175_cast);
            tensor<int32, [2]> var_3433 = const()[name = tensor<string, []>("op_3433"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3435 = const()[name = tensor<string, []>("op_3435"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> temb_13_pad_type_0 = const()[name = tensor<string, []>("temb_13_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> temb_13_pad_0 = const()[name = tensor<string, []>("temb_13_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> down_blocks_3_resnets_0_time_emb_proj_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_3_resnets_0_time_emb_proj_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(408367424)))];
            tensor<fp16, [1280]> down_blocks_3_resnets_0_time_emb_proj_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_3_resnets_0_time_emb_proj_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(411644288)))];
            tensor<fp16, [2, 1280, 1, 1]> temb_13_cast = conv(bias = down_blocks_3_resnets_0_time_emb_proj_bias_to_fp16, dilations = var_3435, groups = var_3409, pad = temb_13_pad_0, pad_type = temb_13_pad_type_0, strides = var_3433, weight = down_blocks_3_resnets_0_time_emb_proj_weight_to_fp16, x = input_15_cast_1);
            tensor<fp16, [2, 1280, 8, 8]> input_179_cast = add(x = hidden_states_109_cast, y = temb_13_cast);
            tensor<int32, [5]> reshape_76_shape_0 = const()[name = tensor<string, []>("reshape_76_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 8, 8])];
            tensor<fp16, [2, 32, 40, 8, 8]> reshape_76_cast = reshape(shape = reshape_76_shape_0, x = input_179_cast);
            tensor<int32, [3]> reduce_mean_57_axes_0 = const()[name = tensor<string, []>("reduce_mean_57_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_57_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_57_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_57_cast = reduce_mean(axes = reduce_mean_57_axes_0, keep_dims = reduce_mean_57_keep_dims_0, x = reshape_76_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> sub_38_cast = sub(x = reshape_76_cast, y = reduce_mean_57_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> square_19_cast = square(x = sub_38_cast);
            tensor<int32, [3]> reduce_mean_59_axes_0 = const()[name = tensor<string, []>("reduce_mean_59_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_59_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_59_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_59_cast = reduce_mean(axes = reduce_mean_59_axes_0, keep_dims = reduce_mean_59_keep_dims_0, x = square_19_cast);
            tensor<fp16, []> add_38_y_0_to_fp16 = const()[name = tensor<string, []>("add_38_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_38_cast = add(x = reduce_mean_59_cast, y = add_38_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_19_cast = sqrt(x = add_38_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> real_div_19_cast = real_div(x = sub_38_cast, y = sqrt_19_cast);
            tensor<int32, [4]> reshape_77_shape_0 = const()[name = tensor<string, []>("reshape_77_shape_0"), val = tensor<int32, [4]>([2, 1280, 8, 8])];
            tensor<fp16, [2, 1280, 8, 8]> reshape_77_cast = reshape(shape = reshape_77_shape_0, x = real_div_19_cast);
            tensor<fp16, [1280]> add_39_mean_0_to_fp16 = const()[name = tensor<string, []>("add_39_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(411646912)))];
            tensor<fp16, [1280]> add_39_variance_0_to_fp16 = const()[name = tensor<string, []>("add_39_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(411649536)))];
            tensor<fp16, [1280]> add_39_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_39_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(411652160)))];
            tensor<fp16, [1280]> add_39_beta_0_to_fp16 = const()[name = tensor<string, []>("add_39_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(411654784)))];
            tensor<fp16, []> add_39_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_39_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 8, 8]> add_39_cast = batch_norm(beta = add_39_beta_0_to_fp16, epsilon = add_39_epsilon_0_to_fp16, gamma = add_39_gamma_0_to_fp16, mean = add_39_mean_0_to_fp16, variance = add_39_variance_0_to_fp16, x = reshape_77_cast);
            tensor<fp16, [2, 1280, 8, 8]> input_183_cast = silu(x = add_39_cast);
            tensor<int32, [2]> var_3445 = const()[name = tensor<string, []>("op_3445"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3447 = const()[name = tensor<string, []>("op_3447"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_111_pad_type_0 = const()[name = tensor<string, []>("hidden_states_111_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_111_pad_0 = const()[name = tensor<string, []>("hidden_states_111_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 1280, 3, 3]> down_blocks_3_resnets_0_conv2_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_3_resnets_0_conv2_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(411657408)))];
            tensor<fp16, [1280]> down_blocks_3_resnets_0_conv2_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_3_resnets_0_conv2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(441148672)))];
            tensor<fp16, [2, 1280, 8, 8]> hidden_states_111_cast = conv(bias = down_blocks_3_resnets_0_conv2_bias_to_fp16, dilations = var_3447, groups = var_3409, pad = hidden_states_111_pad_0, pad_type = hidden_states_111_pad_type_0, strides = var_3445, weight = down_blocks_3_resnets_0_conv2_weight_to_fp16, x = input_183_cast);
            tensor<fp16, [2, 1280, 8, 8]> input_185_cast = add(x = input_171_cast_1, y = hidden_states_111_cast);
            tensor<int32, [5]> reshape_80_shape_0 = const()[name = tensor<string, []>("reshape_80_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 8, 8])];
            tensor<fp16, [2, 32, 40, 8, 8]> reshape_80_cast = reshape(shape = reshape_80_shape_0, x = input_185_cast);
            tensor<int32, [3]> reduce_mean_60_axes_0 = const()[name = tensor<string, []>("reduce_mean_60_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_60_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_60_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_60_cast = reduce_mean(axes = reduce_mean_60_axes_0, keep_dims = reduce_mean_60_keep_dims_0, x = reshape_80_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> sub_40_cast = sub(x = reshape_80_cast, y = reduce_mean_60_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> square_20_cast = square(x = sub_40_cast);
            tensor<int32, [3]> reduce_mean_62_axes_0 = const()[name = tensor<string, []>("reduce_mean_62_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_62_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_62_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_62_cast = reduce_mean(axes = reduce_mean_62_axes_0, keep_dims = reduce_mean_62_keep_dims_0, x = square_20_cast);
            tensor<fp16, []> add_40_y_0_to_fp16 = const()[name = tensor<string, []>("add_40_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_40_cast = add(x = reduce_mean_62_cast, y = add_40_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_20_cast = sqrt(x = add_40_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> real_div_20_cast = real_div(x = sub_40_cast, y = sqrt_20_cast);
            tensor<int32, [4]> reshape_81_shape_0 = const()[name = tensor<string, []>("reshape_81_shape_0"), val = tensor<int32, [4]>([2, 1280, 8, 8])];
            tensor<fp16, [2, 1280, 8, 8]> reshape_81_cast = reshape(shape = reshape_81_shape_0, x = real_div_20_cast);
            tensor<fp16, [1280]> add_41_mean_0_to_fp16 = const()[name = tensor<string, []>("add_41_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(441151296)))];
            tensor<fp16, [1280]> add_41_variance_0_to_fp16 = const()[name = tensor<string, []>("add_41_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(441153920)))];
            tensor<fp16, [1280]> add_41_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_41_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(441156544)))];
            tensor<fp16, [1280]> add_41_beta_0_to_fp16 = const()[name = tensor<string, []>("add_41_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(441159168)))];
            tensor<fp16, []> add_41_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_41_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 8, 8]> add_41_cast = batch_norm(beta = add_41_beta_0_to_fp16, epsilon = add_41_epsilon_0_to_fp16, gamma = add_41_gamma_0_to_fp16, mean = add_41_mean_0_to_fp16, variance = add_41_variance_0_to_fp16, x = reshape_81_cast);
            tensor<fp16, [2, 1280, 8, 8]> input_189_cast = silu(x = add_41_cast);
            tensor<int32, [2]> var_3462 = const()[name = tensor<string, []>("op_3462"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3464 = const()[name = tensor<string, []>("op_3464"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_113_pad_type_0 = const()[name = tensor<string, []>("hidden_states_113_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_113_pad_0 = const()[name = tensor<string, []>("hidden_states_113_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 1280, 3, 3]> down_blocks_3_resnets_1_conv1_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_3_resnets_1_conv1_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(441161792)))];
            tensor<fp16, [1280]> down_blocks_3_resnets_1_conv1_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_3_resnets_1_conv1_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(470653056)))];
            tensor<fp16, [2, 1280, 8, 8]> hidden_states_113_cast = conv(bias = down_blocks_3_resnets_1_conv1_bias_to_fp16, dilations = var_3464, groups = var_3409, pad = hidden_states_113_pad_0, pad_type = hidden_states_113_pad_type_0, strides = var_3462, weight = down_blocks_3_resnets_1_conv1_weight_to_fp16, x = input_189_cast);
            tensor<int32, [2]> var_3470 = const()[name = tensor<string, []>("op_3470"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3472 = const()[name = tensor<string, []>("op_3472"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> temb_15_pad_type_0 = const()[name = tensor<string, []>("temb_15_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> temb_15_pad_0 = const()[name = tensor<string, []>("temb_15_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> down_blocks_3_resnets_1_time_emb_proj_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_3_resnets_1_time_emb_proj_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(470655680)))];
            tensor<fp16, [1280]> down_blocks_3_resnets_1_time_emb_proj_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_3_resnets_1_time_emb_proj_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(473932544)))];
            tensor<fp16, [2, 1280, 1, 1]> temb_15_cast = conv(bias = down_blocks_3_resnets_1_time_emb_proj_bias_to_fp16, dilations = var_3472, groups = var_3409, pad = temb_15_pad_0, pad_type = temb_15_pad_type_0, strides = var_3470, weight = down_blocks_3_resnets_1_time_emb_proj_weight_to_fp16, x = input_15_cast_1);
            tensor<fp16, [2, 1280, 8, 8]> input_193_cast = add(x = hidden_states_113_cast, y = temb_15_cast);
            tensor<int32, [5]> reshape_84_shape_0 = const()[name = tensor<string, []>("reshape_84_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 8, 8])];
            tensor<fp16, [2, 32, 40, 8, 8]> reshape_84_cast = reshape(shape = reshape_84_shape_0, x = input_193_cast);
            tensor<int32, [3]> reduce_mean_63_axes_0 = const()[name = tensor<string, []>("reduce_mean_63_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_63_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_63_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_63_cast = reduce_mean(axes = reduce_mean_63_axes_0, keep_dims = reduce_mean_63_keep_dims_0, x = reshape_84_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> sub_42_cast = sub(x = reshape_84_cast, y = reduce_mean_63_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> square_21_cast = square(x = sub_42_cast);
            tensor<int32, [3]> reduce_mean_65_axes_0 = const()[name = tensor<string, []>("reduce_mean_65_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_65_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_65_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_65_cast = reduce_mean(axes = reduce_mean_65_axes_0, keep_dims = reduce_mean_65_keep_dims_0, x = square_21_cast);
            tensor<fp16, []> add_42_y_0_to_fp16 = const()[name = tensor<string, []>("add_42_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_42_cast = add(x = reduce_mean_65_cast, y = add_42_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_21_cast = sqrt(x = add_42_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> real_div_21_cast = real_div(x = sub_42_cast, y = sqrt_21_cast);
            tensor<int32, [4]> reshape_85_shape_0 = const()[name = tensor<string, []>("reshape_85_shape_0"), val = tensor<int32, [4]>([2, 1280, 8, 8])];
            tensor<fp16, [2, 1280, 8, 8]> reshape_85_cast = reshape(shape = reshape_85_shape_0, x = real_div_21_cast);
            tensor<fp16, [1280]> add_43_mean_0_to_fp16 = const()[name = tensor<string, []>("add_43_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(473935168)))];
            tensor<fp16, [1280]> add_43_variance_0_to_fp16 = const()[name = tensor<string, []>("add_43_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(473937792)))];
            tensor<fp16, [1280]> add_43_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_43_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(473940416)))];
            tensor<fp16, [1280]> add_43_beta_0_to_fp16 = const()[name = tensor<string, []>("add_43_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(473943040)))];
            tensor<fp16, []> add_43_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_43_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 8, 8]> add_43_cast = batch_norm(beta = add_43_beta_0_to_fp16, epsilon = add_43_epsilon_0_to_fp16, gamma = add_43_gamma_0_to_fp16, mean = add_43_mean_0_to_fp16, variance = add_43_variance_0_to_fp16, x = reshape_85_cast);
            tensor<fp16, [2, 1280, 8, 8]> input_197_cast = silu(x = add_43_cast);
            tensor<int32, [2]> var_3482 = const()[name = tensor<string, []>("op_3482"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3484 = const()[name = tensor<string, []>("op_3484"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_115_pad_type_0 = const()[name = tensor<string, []>("hidden_states_115_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_115_pad_0 = const()[name = tensor<string, []>("hidden_states_115_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 1280, 3, 3]> down_blocks_3_resnets_1_conv2_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_3_resnets_1_conv2_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(473945664)))];
            tensor<fp16, [1280]> down_blocks_3_resnets_1_conv2_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_3_resnets_1_conv2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(503436928)))];
            tensor<fp16, [2, 1280, 8, 8]> hidden_states_115_cast = conv(bias = down_blocks_3_resnets_1_conv2_bias_to_fp16, dilations = var_3484, groups = var_3409, pad = hidden_states_115_pad_0, pad_type = hidden_states_115_pad_type_0, strides = var_3482, weight = down_blocks_3_resnets_1_conv2_weight_to_fp16, x = input_197_cast);
            tensor<fp16, [2, 1280, 8, 8]> input_199_cast = add(x = input_185_cast, y = hidden_states_115_cast);
            tensor<bool, []> var_3507 = const()[name = tensor<string, []>("op_3507"), val = tensor<bool, []>(true)];
            tensor<int32, []> var_3512 = const()[name = tensor<string, []>("op_3512"), val = tensor<int32, []>(1)];
            tensor<int32, [5]> reshape_88_shape_0 = const()[name = tensor<string, []>("reshape_88_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 8, 8])];
            tensor<fp16, [2, 32, 40, 8, 8]> reshape_88_cast = reshape(shape = reshape_88_shape_0, x = input_199_cast);
            tensor<int32, [3]> reduce_mean_66_axes_0 = const()[name = tensor<string, []>("reduce_mean_66_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_66_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_66_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_66_cast = reduce_mean(axes = reduce_mean_66_axes_0, keep_dims = reduce_mean_66_keep_dims_0, x = reshape_88_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> sub_44_cast = sub(x = reshape_88_cast, y = reduce_mean_66_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> square_22_cast = square(x = sub_44_cast);
            tensor<int32, [3]> reduce_mean_68_axes_0 = const()[name = tensor<string, []>("reduce_mean_68_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_68_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_68_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_68_cast = reduce_mean(axes = reduce_mean_68_axes_0, keep_dims = reduce_mean_68_keep_dims_0, x = square_22_cast);
            tensor<fp16, []> add_44_y_0_to_fp16 = const()[name = tensor<string, []>("add_44_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_44_cast = add(x = reduce_mean_68_cast, y = add_44_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_22_cast = sqrt(x = add_44_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> real_div_22_cast = real_div(x = sub_44_cast, y = sqrt_22_cast);
            tensor<int32, [4]> reshape_89_shape_0 = const()[name = tensor<string, []>("reshape_89_shape_0"), val = tensor<int32, [4]>([2, 1280, 8, 8])];
            tensor<fp16, [2, 1280, 8, 8]> reshape_89_cast = reshape(shape = reshape_89_shape_0, x = real_div_22_cast);
            tensor<fp16, [1280]> add_45_mean_0_to_fp16 = const()[name = tensor<string, []>("add_45_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(503439552)))];
            tensor<fp16, [1280]> add_45_variance_0_to_fp16 = const()[name = tensor<string, []>("add_45_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(503442176)))];
            tensor<fp16, [1280]> add_45_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_45_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(503444800)))];
            tensor<fp16, [1280]> add_45_beta_0_to_fp16 = const()[name = tensor<string, []>("add_45_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(503447424)))];
            tensor<fp16, []> add_45_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_45_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 8, 8]> add_45_cast = batch_norm(beta = add_45_beta_0_to_fp16, epsilon = add_45_epsilon_0_to_fp16, gamma = add_45_gamma_0_to_fp16, mean = add_45_mean_0_to_fp16, variance = add_45_variance_0_to_fp16, x = reshape_89_cast);
            tensor<fp16, [2, 1280, 8, 8]> input_203_cast = silu(x = add_45_cast);
            tensor<int32, [2]> var_3530 = const()[name = tensor<string, []>("op_3530"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3532 = const()[name = tensor<string, []>("op_3532"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_117_pad_type_0 = const()[name = tensor<string, []>("hidden_states_117_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_117_pad_0 = const()[name = tensor<string, []>("hidden_states_117_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 1280, 3, 3]> mid_block_resnets_0_conv1_weight_to_fp16 = const()[name = tensor<string, []>("mid_block_resnets_0_conv1_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(503450048)))];
            tensor<fp16, [1280]> mid_block_resnets_0_conv1_bias_to_fp16 = const()[name = tensor<string, []>("mid_block_resnets_0_conv1_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(532941312)))];
            tensor<fp16, [2, 1280, 8, 8]> hidden_states_117_cast = conv(bias = mid_block_resnets_0_conv1_bias_to_fp16, dilations = var_3532, groups = var_3512, pad = hidden_states_117_pad_0, pad_type = hidden_states_117_pad_type_0, strides = var_3530, weight = mid_block_resnets_0_conv1_weight_to_fp16, x = input_203_cast);
            tensor<int32, [2]> var_3538 = const()[name = tensor<string, []>("op_3538"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3540 = const()[name = tensor<string, []>("op_3540"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> temb_17_pad_type_0 = const()[name = tensor<string, []>("temb_17_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> temb_17_pad_0 = const()[name = tensor<string, []>("temb_17_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> mid_block_resnets_0_time_emb_proj_weight_to_fp16 = const()[name = tensor<string, []>("mid_block_resnets_0_time_emb_proj_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(532943936)))];
            tensor<fp16, [1280]> mid_block_resnets_0_time_emb_proj_bias_to_fp16 = const()[name = tensor<string, []>("mid_block_resnets_0_time_emb_proj_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(536220800)))];
            tensor<fp16, [2, 1280, 1, 1]> temb_17_cast = conv(bias = mid_block_resnets_0_time_emb_proj_bias_to_fp16, dilations = var_3540, groups = var_3512, pad = temb_17_pad_0, pad_type = temb_17_pad_type_0, strides = var_3538, weight = mid_block_resnets_0_time_emb_proj_weight_to_fp16, x = input_15_cast_1);
            tensor<fp16, [2, 1280, 8, 8]> input_207_cast = add(x = hidden_states_117_cast, y = temb_17_cast);
            tensor<int32, [5]> reshape_92_shape_0 = const()[name = tensor<string, []>("reshape_92_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 8, 8])];
            tensor<fp16, [2, 32, 40, 8, 8]> reshape_92_cast = reshape(shape = reshape_92_shape_0, x = input_207_cast);
            tensor<int32, [3]> reduce_mean_69_axes_0 = const()[name = tensor<string, []>("reduce_mean_69_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_69_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_69_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_69_cast = reduce_mean(axes = reduce_mean_69_axes_0, keep_dims = reduce_mean_69_keep_dims_0, x = reshape_92_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> sub_46_cast = sub(x = reshape_92_cast, y = reduce_mean_69_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> square_23_cast = square(x = sub_46_cast);
            tensor<int32, [3]> reduce_mean_71_axes_0 = const()[name = tensor<string, []>("reduce_mean_71_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_71_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_71_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_71_cast = reduce_mean(axes = reduce_mean_71_axes_0, keep_dims = reduce_mean_71_keep_dims_0, x = square_23_cast);
            tensor<fp16, []> add_46_y_0_to_fp16 = const()[name = tensor<string, []>("add_46_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_46_cast = add(x = reduce_mean_71_cast, y = add_46_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_23_cast = sqrt(x = add_46_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> real_div_23_cast = real_div(x = sub_46_cast, y = sqrt_23_cast);
            tensor<int32, [4]> reshape_93_shape_0 = const()[name = tensor<string, []>("reshape_93_shape_0"), val = tensor<int32, [4]>([2, 1280, 8, 8])];
            tensor<fp16, [2, 1280, 8, 8]> reshape_93_cast = reshape(shape = reshape_93_shape_0, x = real_div_23_cast);
            tensor<fp16, [1280]> add_47_mean_0_to_fp16 = const()[name = tensor<string, []>("add_47_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(536223424)))];
            tensor<fp16, [1280]> add_47_variance_0_to_fp16 = const()[name = tensor<string, []>("add_47_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(536226048)))];
            tensor<fp16, [1280]> add_47_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_47_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(536228672)))];
            tensor<fp16, [1280]> add_47_beta_0_to_fp16 = const()[name = tensor<string, []>("add_47_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(536231296)))];
            tensor<fp16, []> add_47_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_47_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 8, 8]> add_47_cast = batch_norm(beta = add_47_beta_0_to_fp16, epsilon = add_47_epsilon_0_to_fp16, gamma = add_47_gamma_0_to_fp16, mean = add_47_mean_0_to_fp16, variance = add_47_variance_0_to_fp16, x = reshape_93_cast);
            tensor<fp16, [2, 1280, 8, 8]> input_211_cast = silu(x = add_47_cast);
            tensor<int32, [2]> var_3550 = const()[name = tensor<string, []>("op_3550"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3552 = const()[name = tensor<string, []>("op_3552"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_119_pad_type_0 = const()[name = tensor<string, []>("hidden_states_119_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_119_pad_0 = const()[name = tensor<string, []>("hidden_states_119_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 1280, 3, 3]> mid_block_resnets_0_conv2_weight_to_fp16 = const()[name = tensor<string, []>("mid_block_resnets_0_conv2_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(536233920)))];
            tensor<fp16, [1280]> mid_block_resnets_0_conv2_bias_to_fp16 = const()[name = tensor<string, []>("mid_block_resnets_0_conv2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(565725184)))];
            tensor<fp16, [2, 1280, 8, 8]> hidden_states_119_cast = conv(bias = mid_block_resnets_0_conv2_bias_to_fp16, dilations = var_3552, groups = var_3512, pad = hidden_states_119_pad_0, pad_type = hidden_states_119_pad_type_0, strides = var_3550, weight = mid_block_resnets_0_conv2_weight_to_fp16, x = input_211_cast);
            tensor<fp16, [2, 1280, 8, 8]> hidden_states_121_cast = add(x = input_199_cast, y = hidden_states_119_cast);
            tensor<int32, [5]> reshape_96_shape_0 = const()[name = tensor<string, []>("reshape_96_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 8, 8])];
            tensor<fp16, [2, 32, 40, 8, 8]> reshape_96_cast = reshape(shape = reshape_96_shape_0, x = hidden_states_121_cast);
            tensor<int32, [3]> reduce_mean_72_axes_0 = const()[name = tensor<string, []>("reduce_mean_72_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_72_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_72_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_72_cast = reduce_mean(axes = reduce_mean_72_axes_0, keep_dims = reduce_mean_72_keep_dims_0, x = reshape_96_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> sub_48_cast = sub(x = reshape_96_cast, y = reduce_mean_72_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> square_24_cast = square(x = sub_48_cast);
            tensor<int32, [3]> reduce_mean_74_axes_0 = const()[name = tensor<string, []>("reduce_mean_74_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_74_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_74_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_74_cast = reduce_mean(axes = reduce_mean_74_axes_0, keep_dims = reduce_mean_74_keep_dims_0, x = square_24_cast);
            tensor<fp16, []> add_48_y_0_to_fp16 = const()[name = tensor<string, []>("add_48_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_48_cast = add(x = reduce_mean_74_cast, y = add_48_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_24_cast = sqrt(x = add_48_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> real_div_24_cast = real_div(x = sub_48_cast, y = sqrt_24_cast);
            tensor<int32, [4]> reshape_97_shape_0 = const()[name = tensor<string, []>("reshape_97_shape_0"), val = tensor<int32, [4]>([2, 1280, 8, 8])];
            tensor<fp16, [2, 1280, 8, 8]> reshape_97_cast = reshape(shape = reshape_97_shape_0, x = real_div_24_cast);
            tensor<fp16, [1280]> add_49_mean_0_to_fp16 = const()[name = tensor<string, []>("add_49_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(565727808)))];
            tensor<fp16, [1280]> add_49_variance_0_to_fp16 = const()[name = tensor<string, []>("add_49_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(565730432)))];
            tensor<fp16, [1280]> add_49_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_49_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(565733056)))];
            tensor<fp16, [1280]> add_49_beta_0_to_fp16 = const()[name = tensor<string, []>("add_49_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(565735680)))];
            tensor<fp16, []> add_49_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_49_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 8, 8]> add_49_cast = batch_norm(beta = add_49_beta_0_to_fp16, epsilon = add_49_epsilon_0_to_fp16, gamma = add_49_gamma_0_to_fp16, mean = add_49_mean_0_to_fp16, variance = add_49_variance_0_to_fp16, x = reshape_97_cast);
            tensor<int32, [2]> var_3572 = const()[name = tensor<string, []>("op_3572"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3574 = const()[name = tensor<string, []>("op_3574"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_123_pad_type_0 = const()[name = tensor<string, []>("hidden_states_123_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_123_pad_0 = const()[name = tensor<string, []>("hidden_states_123_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> mid_block_attentions_0_proj_in_weight_to_fp16 = const()[name = tensor<string, []>("mid_block_attentions_0_proj_in_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(565738304)))];
            tensor<fp16, [1280]> mid_block_attentions_0_proj_in_bias_to_fp16 = const()[name = tensor<string, []>("mid_block_attentions_0_proj_in_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(569015168)))];
            tensor<fp16, [2, 1280, 8, 8]> hidden_states_123_cast = conv(bias = mid_block_attentions_0_proj_in_bias_to_fp16, dilations = var_3574, groups = var_3512, pad = hidden_states_123_pad_0, pad_type = hidden_states_123_pad_type_0, strides = var_3572, weight = mid_block_attentions_0_proj_in_weight_to_fp16, x = add_49_cast);
            tensor<int32, [4]> var_3579 = const()[name = tensor<string, []>("op_3579"), val = tensor<int32, [4]>([2, 1280, 1, 64])];
            tensor<fp16, [2, 1280, 1, 64]> inputs_37_cast = reshape(shape = var_3579, x = hidden_states_123_cast);
            tensor<int32, [1]> var_3589 = const()[name = tensor<string, []>("op_3589"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 64]> channels_mean_37_cast = reduce_mean(axes = var_3589, keep_dims = var_3507, x = inputs_37_cast);
            tensor<fp16, [2, 1280, 1, 64]> zero_mean_37_cast = sub(x = inputs_37_cast, y = channels_mean_37_cast);
            tensor<fp16, [2, 1280, 1, 64]> zero_mean_sq_37_cast = mul(x = zero_mean_37_cast, y = zero_mean_37_cast);
            tensor<int32, [1]> var_3593 = const()[name = tensor<string, []>("op_3593"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 64]> var_3594_cast = reduce_mean(axes = var_3593, keep_dims = var_3507, x = zero_mean_sq_37_cast);
            tensor<fp16, []> var_3595_to_fp16 = const()[name = tensor<string, []>("op_3595_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 64]> var_3596_cast = add(x = var_3594_cast, y = var_3595_to_fp16);
            tensor<fp16, []> denom_37_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_37_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 64]> denom_37_cast = rsqrt(epsilon = denom_37_epsilon_0_to_fp16, x = var_3596_cast);
            tensor<fp16, [2, 1280, 1, 64]> out_37_cast = mul(x = zero_mean_37_cast, y = denom_37_cast);
            tensor<fp16, [1, 1280, 1, 1]> var_3600_to_fp16 = const()[name = tensor<string, []>("op_3600_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(569017792)))];
            tensor<fp16, [2, 1280, 1, 64]> var_3601_cast = add(x = out_37_cast, y = var_3600_to_fp16);
            tensor<fp16, [1, 1280, 1, 1]> var_3603_to_fp16 = const()[name = tensor<string, []>("op_3603_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(569020416)))];
            tensor<fp16, [2, 1280, 1, 64]> hidden_states_125_cast = mul(x = var_3601_cast, y = var_3603_to_fp16);
            tensor<int32, [2]> var_3610 = const()[name = tensor<string, []>("op_3610"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3612 = const()[name = tensor<string, []>("op_3612"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_25_pad_type_0 = const()[name = tensor<string, []>("q_25_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_25_pad_0 = const()[name = tensor<string, []>("q_25_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> mid_block_attentions_0_transformer_blocks_0_attn1_to_q_weight_to_fp16 = const()[name = tensor<string, []>("mid_block_attentions_0_transformer_blocks_0_attn1_to_q_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(569023040)))];
            tensor<fp16, [2, 1280, 1, 64]> q_25_cast = conv(dilations = var_3612, groups = var_3512, pad = q_25_pad_0, pad_type = q_25_pad_type_0, strides = var_3610, weight = mid_block_attentions_0_transformer_blocks_0_attn1_to_q_weight_to_fp16, x = hidden_states_125_cast);
            tensor<int32, [2]> var_3616 = const()[name = tensor<string, []>("op_3616"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3618 = const()[name = tensor<string, []>("op_3618"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_49_pad_type_0 = const()[name = tensor<string, []>("k_49_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_49_pad_0 = const()[name = tensor<string, []>("k_49_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> mid_block_attentions_0_transformer_blocks_0_attn1_to_k_weight_to_fp16 = const()[name = tensor<string, []>("mid_block_attentions_0_transformer_blocks_0_attn1_to_k_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(572299904)))];
            tensor<fp16, [2, 1280, 1, 64]> k_49_cast = conv(dilations = var_3618, groups = var_3512, pad = k_49_pad_0, pad_type = k_49_pad_type_0, strides = var_3616, weight = mid_block_attentions_0_transformer_blocks_0_attn1_to_k_weight_to_fp16, x = hidden_states_125_cast);
            tensor<int32, [2]> var_3622 = const()[name = tensor<string, []>("op_3622"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3624 = const()[name = tensor<string, []>("op_3624"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_25_pad_type_0 = const()[name = tensor<string, []>("v_25_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_25_pad_0 = const()[name = tensor<string, []>("v_25_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> mid_block_attentions_0_transformer_blocks_0_attn1_to_v_weight_to_fp16 = const()[name = tensor<string, []>("mid_block_attentions_0_transformer_blocks_0_attn1_to_v_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(575576768)))];
            tensor<fp16, [2, 1280, 1, 64]> v_25_cast = conv(dilations = var_3624, groups = var_3512, pad = v_25_pad_0, pad_type = v_25_pad_type_0, strides = var_3622, weight = mid_block_attentions_0_transformer_blocks_0_attn1_to_v_weight_to_fp16, x = hidden_states_125_cast);
            tensor<int32, [4]> var_3628_begin_0 = const()[name = tensor<string, []>("op_3628_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_3628_end_0 = const()[name = tensor<string, []>("op_3628_end_0"), val = tensor<int32, [4]>([2, 160, 1, 64])];
            tensor<bool, [4]> var_3628_end_mask_0 = const()[name = tensor<string, []>("op_3628_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 64]> var_3628_cast = slice_by_index(begin = var_3628_begin_0, end = var_3628_end_0, end_mask = var_3628_end_mask_0, x = q_25_cast);
            tensor<int32, [4]> var_3632_begin_0 = const()[name = tensor<string, []>("op_3632_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_3632_end_0 = const()[name = tensor<string, []>("op_3632_end_0"), val = tensor<int32, [4]>([2, 320, 1, 64])];
            tensor<bool, [4]> var_3632_end_mask_0 = const()[name = tensor<string, []>("op_3632_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 64]> var_3632_cast = slice_by_index(begin = var_3632_begin_0, end = var_3632_end_0, end_mask = var_3632_end_mask_0, x = q_25_cast);
            tensor<int32, [4]> var_3636_begin_0 = const()[name = tensor<string, []>("op_3636_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_3636_end_0 = const()[name = tensor<string, []>("op_3636_end_0"), val = tensor<int32, [4]>([2, 480, 1, 64])];
            tensor<bool, [4]> var_3636_end_mask_0 = const()[name = tensor<string, []>("op_3636_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 64]> var_3636_cast = slice_by_index(begin = var_3636_begin_0, end = var_3636_end_0, end_mask = var_3636_end_mask_0, x = q_25_cast);
            tensor<int32, [4]> var_3640_begin_0 = const()[name = tensor<string, []>("op_3640_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_3640_end_0 = const()[name = tensor<string, []>("op_3640_end_0"), val = tensor<int32, [4]>([2, 640, 1, 64])];
            tensor<bool, [4]> var_3640_end_mask_0 = const()[name = tensor<string, []>("op_3640_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 64]> var_3640_cast = slice_by_index(begin = var_3640_begin_0, end = var_3640_end_0, end_mask = var_3640_end_mask_0, x = q_25_cast);
            tensor<int32, [4]> var_3644_begin_0 = const()[name = tensor<string, []>("op_3644_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_3644_end_0 = const()[name = tensor<string, []>("op_3644_end_0"), val = tensor<int32, [4]>([2, 800, 1, 64])];
            tensor<bool, [4]> var_3644_end_mask_0 = const()[name = tensor<string, []>("op_3644_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 64]> var_3644_cast = slice_by_index(begin = var_3644_begin_0, end = var_3644_end_0, end_mask = var_3644_end_mask_0, x = q_25_cast);
            tensor<int32, [4]> var_3648_begin_0 = const()[name = tensor<string, []>("op_3648_begin_0"), val = tensor<int32, [4]>([0, 800, 0, 0])];
            tensor<int32, [4]> var_3648_end_0 = const()[name = tensor<string, []>("op_3648_end_0"), val = tensor<int32, [4]>([2, 960, 1, 64])];
            tensor<bool, [4]> var_3648_end_mask_0 = const()[name = tensor<string, []>("op_3648_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 64]> var_3648_cast = slice_by_index(begin = var_3648_begin_0, end = var_3648_end_0, end_mask = var_3648_end_mask_0, x = q_25_cast);
            tensor<int32, [4]> var_3652_begin_0 = const()[name = tensor<string, []>("op_3652_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_3652_end_0 = const()[name = tensor<string, []>("op_3652_end_0"), val = tensor<int32, [4]>([2, 1120, 1, 64])];
            tensor<bool, [4]> var_3652_end_mask_0 = const()[name = tensor<string, []>("op_3652_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 64]> var_3652_cast = slice_by_index(begin = var_3652_begin_0, end = var_3652_end_0, end_mask = var_3652_end_mask_0, x = q_25_cast);
            tensor<int32, [4]> var_3656_begin_0 = const()[name = tensor<string, []>("op_3656_begin_0"), val = tensor<int32, [4]>([0, 1120, 0, 0])];
            tensor<int32, [4]> var_3656_end_0 = const()[name = tensor<string, []>("op_3656_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 64])];
            tensor<bool, [4]> var_3656_end_mask_0 = const()[name = tensor<string, []>("op_3656_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 64]> var_3656_cast = slice_by_index(begin = var_3656_begin_0, end = var_3656_end_0, end_mask = var_3656_end_mask_0, x = q_25_cast);
            tensor<int32, [4]> k_51_perm_0 = const()[name = tensor<string, []>("k_51_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_3663_begin_0 = const()[name = tensor<string, []>("op_3663_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_3663_end_0 = const()[name = tensor<string, []>("op_3663_end_0"), val = tensor<int32, [4]>([2, 64, 1, 160])];
            tensor<bool, [4]> var_3663_end_mask_0 = const()[name = tensor<string, []>("op_3663_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 64, 1, 1280]> transpose_65 = transpose(perm = k_51_perm_0, x = k_49_cast);
            tensor<fp16, [2, 64, 1, 160]> var_3663_cast = slice_by_index(begin = var_3663_begin_0, end = var_3663_end_0, end_mask = var_3663_end_mask_0, x = transpose_65);
            tensor<int32, [4]> var_3667_begin_0 = const()[name = tensor<string, []>("op_3667_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 160])];
            tensor<int32, [4]> var_3667_end_0 = const()[name = tensor<string, []>("op_3667_end_0"), val = tensor<int32, [4]>([2, 64, 1, 320])];
            tensor<bool, [4]> var_3667_end_mask_0 = const()[name = tensor<string, []>("op_3667_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 64, 1, 160]> var_3667_cast = slice_by_index(begin = var_3667_begin_0, end = var_3667_end_0, end_mask = var_3667_end_mask_0, x = transpose_65);
            tensor<int32, [4]> var_3671_begin_0 = const()[name = tensor<string, []>("op_3671_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_3671_end_0 = const()[name = tensor<string, []>("op_3671_end_0"), val = tensor<int32, [4]>([2, 64, 1, 480])];
            tensor<bool, [4]> var_3671_end_mask_0 = const()[name = tensor<string, []>("op_3671_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 64, 1, 160]> var_3671_cast = slice_by_index(begin = var_3671_begin_0, end = var_3671_end_0, end_mask = var_3671_end_mask_0, x = transpose_65);
            tensor<int32, [4]> var_3675_begin_0 = const()[name = tensor<string, []>("op_3675_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 480])];
            tensor<int32, [4]> var_3675_end_0 = const()[name = tensor<string, []>("op_3675_end_0"), val = tensor<int32, [4]>([2, 64, 1, 640])];
            tensor<bool, [4]> var_3675_end_mask_0 = const()[name = tensor<string, []>("op_3675_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 64, 1, 160]> var_3675_cast = slice_by_index(begin = var_3675_begin_0, end = var_3675_end_0, end_mask = var_3675_end_mask_0, x = transpose_65);
            tensor<int32, [4]> var_3679_begin_0 = const()[name = tensor<string, []>("op_3679_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 640])];
            tensor<int32, [4]> var_3679_end_0 = const()[name = tensor<string, []>("op_3679_end_0"), val = tensor<int32, [4]>([2, 64, 1, 800])];
            tensor<bool, [4]> var_3679_end_mask_0 = const()[name = tensor<string, []>("op_3679_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 64, 1, 160]> var_3679_cast = slice_by_index(begin = var_3679_begin_0, end = var_3679_end_0, end_mask = var_3679_end_mask_0, x = transpose_65);
            tensor<int32, [4]> var_3683_begin_0 = const()[name = tensor<string, []>("op_3683_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 800])];
            tensor<int32, [4]> var_3683_end_0 = const()[name = tensor<string, []>("op_3683_end_0"), val = tensor<int32, [4]>([2, 64, 1, 960])];
            tensor<bool, [4]> var_3683_end_mask_0 = const()[name = tensor<string, []>("op_3683_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 64, 1, 160]> var_3683_cast = slice_by_index(begin = var_3683_begin_0, end = var_3683_end_0, end_mask = var_3683_end_mask_0, x = transpose_65);
            tensor<int32, [4]> var_3687_begin_0 = const()[name = tensor<string, []>("op_3687_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 960])];
            tensor<int32, [4]> var_3687_end_0 = const()[name = tensor<string, []>("op_3687_end_0"), val = tensor<int32, [4]>([2, 64, 1, 1120])];
            tensor<bool, [4]> var_3687_end_mask_0 = const()[name = tensor<string, []>("op_3687_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 64, 1, 160]> var_3687_cast = slice_by_index(begin = var_3687_begin_0, end = var_3687_end_0, end_mask = var_3687_end_mask_0, x = transpose_65);
            tensor<int32, [4]> var_3691_begin_0 = const()[name = tensor<string, []>("op_3691_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1120])];
            tensor<int32, [4]> var_3691_end_0 = const()[name = tensor<string, []>("op_3691_end_0"), val = tensor<int32, [4]>([2, 64, 1, 1280])];
            tensor<bool, [4]> var_3691_end_mask_0 = const()[name = tensor<string, []>("op_3691_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 64, 1, 160]> var_3691_cast = slice_by_index(begin = var_3691_begin_0, end = var_3691_end_0, end_mask = var_3691_end_mask_0, x = transpose_65);
            tensor<int32, [4]> var_3693_begin_0 = const()[name = tensor<string, []>("op_3693_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_3693_end_0 = const()[name = tensor<string, []>("op_3693_end_0"), val = tensor<int32, [4]>([2, 160, 1, 64])];
            tensor<bool, [4]> var_3693_end_mask_0 = const()[name = tensor<string, []>("op_3693_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 64]> var_3693_cast = slice_by_index(begin = var_3693_begin_0, end = var_3693_end_0, end_mask = var_3693_end_mask_0, x = v_25_cast);
            tensor<int32, [4]> var_3697_begin_0 = const()[name = tensor<string, []>("op_3697_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_3697_end_0 = const()[name = tensor<string, []>("op_3697_end_0"), val = tensor<int32, [4]>([2, 320, 1, 64])];
            tensor<bool, [4]> var_3697_end_mask_0 = const()[name = tensor<string, []>("op_3697_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 64]> var_3697_cast = slice_by_index(begin = var_3697_begin_0, end = var_3697_end_0, end_mask = var_3697_end_mask_0, x = v_25_cast);
            tensor<int32, [4]> var_3701_begin_0 = const()[name = tensor<string, []>("op_3701_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_3701_end_0 = const()[name = tensor<string, []>("op_3701_end_0"), val = tensor<int32, [4]>([2, 480, 1, 64])];
            tensor<bool, [4]> var_3701_end_mask_0 = const()[name = tensor<string, []>("op_3701_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 64]> var_3701_cast = slice_by_index(begin = var_3701_begin_0, end = var_3701_end_0, end_mask = var_3701_end_mask_0, x = v_25_cast);
            tensor<int32, [4]> var_3705_begin_0 = const()[name = tensor<string, []>("op_3705_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_3705_end_0 = const()[name = tensor<string, []>("op_3705_end_0"), val = tensor<int32, [4]>([2, 640, 1, 64])];
            tensor<bool, [4]> var_3705_end_mask_0 = const()[name = tensor<string, []>("op_3705_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 64]> var_3705_cast = slice_by_index(begin = var_3705_begin_0, end = var_3705_end_0, end_mask = var_3705_end_mask_0, x = v_25_cast);
            tensor<int32, [4]> var_3709_begin_0 = const()[name = tensor<string, []>("op_3709_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_3709_end_0 = const()[name = tensor<string, []>("op_3709_end_0"), val = tensor<int32, [4]>([2, 800, 1, 64])];
            tensor<bool, [4]> var_3709_end_mask_0 = const()[name = tensor<string, []>("op_3709_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 64]> var_3709_cast = slice_by_index(begin = var_3709_begin_0, end = var_3709_end_0, end_mask = var_3709_end_mask_0, x = v_25_cast);
            tensor<int32, [4]> var_3713_begin_0 = const()[name = tensor<string, []>("op_3713_begin_0"), val = tensor<int32, [4]>([0, 800, 0, 0])];
            tensor<int32, [4]> var_3713_end_0 = const()[name = tensor<string, []>("op_3713_end_0"), val = tensor<int32, [4]>([2, 960, 1, 64])];
            tensor<bool, [4]> var_3713_end_mask_0 = const()[name = tensor<string, []>("op_3713_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 64]> var_3713_cast = slice_by_index(begin = var_3713_begin_0, end = var_3713_end_0, end_mask = var_3713_end_mask_0, x = v_25_cast);
            tensor<int32, [4]> var_3717_begin_0 = const()[name = tensor<string, []>("op_3717_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_3717_end_0 = const()[name = tensor<string, []>("op_3717_end_0"), val = tensor<int32, [4]>([2, 1120, 1, 64])];
            tensor<bool, [4]> var_3717_end_mask_0 = const()[name = tensor<string, []>("op_3717_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 64]> var_3717_cast = slice_by_index(begin = var_3717_begin_0, end = var_3717_end_0, end_mask = var_3717_end_mask_0, x = v_25_cast);
            tensor<int32, [4]> var_3721_begin_0 = const()[name = tensor<string, []>("op_3721_begin_0"), val = tensor<int32, [4]>([0, 1120, 0, 0])];
            tensor<int32, [4]> var_3721_end_0 = const()[name = tensor<string, []>("op_3721_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 64])];
            tensor<bool, [4]> var_3721_end_mask_0 = const()[name = tensor<string, []>("op_3721_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 64]> var_3721_cast = slice_by_index(begin = var_3721_begin_0, end = var_3721_end_0, end_mask = var_3721_end_mask_0, x = v_25_cast);
            tensor<string, []> var_3725_equation_0 = const()[name = tensor<string, []>("op_3725_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 64, 1, 64]> var_3725_cast = einsum(equation = var_3725_equation_0, values = (var_3663_cast, var_3628_cast));
            tensor<fp16, []> var_3726_to_fp16 = const()[name = tensor<string, []>("op_3726_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 64, 1, 64]> aw_193_cast = mul(x = var_3725_cast, y = var_3726_to_fp16);
            tensor<string, []> var_3729_equation_0 = const()[name = tensor<string, []>("op_3729_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 64, 1, 64]> var_3729_cast = einsum(equation = var_3729_equation_0, values = (var_3667_cast, var_3632_cast));
            tensor<fp16, []> var_3730_to_fp16 = const()[name = tensor<string, []>("op_3730_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 64, 1, 64]> aw_195_cast = mul(x = var_3729_cast, y = var_3730_to_fp16);
            tensor<string, []> var_3733_equation_0 = const()[name = tensor<string, []>("op_3733_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 64, 1, 64]> var_3733_cast = einsum(equation = var_3733_equation_0, values = (var_3671_cast, var_3636_cast));
            tensor<fp16, []> var_3734_to_fp16 = const()[name = tensor<string, []>("op_3734_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 64, 1, 64]> aw_197_cast = mul(x = var_3733_cast, y = var_3734_to_fp16);
            tensor<string, []> var_3737_equation_0 = const()[name = tensor<string, []>("op_3737_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 64, 1, 64]> var_3737_cast = einsum(equation = var_3737_equation_0, values = (var_3675_cast, var_3640_cast));
            tensor<fp16, []> var_3738_to_fp16 = const()[name = tensor<string, []>("op_3738_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 64, 1, 64]> aw_199_cast = mul(x = var_3737_cast, y = var_3738_to_fp16);
            tensor<string, []> var_3741_equation_0 = const()[name = tensor<string, []>("op_3741_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 64, 1, 64]> var_3741_cast = einsum(equation = var_3741_equation_0, values = (var_3679_cast, var_3644_cast));
            tensor<fp16, []> var_3742_to_fp16 = const()[name = tensor<string, []>("op_3742_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 64, 1, 64]> aw_201_cast = mul(x = var_3741_cast, y = var_3742_to_fp16);
            tensor<string, []> var_3745_equation_0 = const()[name = tensor<string, []>("op_3745_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 64, 1, 64]> var_3745_cast = einsum(equation = var_3745_equation_0, values = (var_3683_cast, var_3648_cast));
            tensor<fp16, []> var_3746_to_fp16 = const()[name = tensor<string, []>("op_3746_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 64, 1, 64]> aw_203_cast = mul(x = var_3745_cast, y = var_3746_to_fp16);
            tensor<string, []> var_3749_equation_0 = const()[name = tensor<string, []>("op_3749_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 64, 1, 64]> var_3749_cast = einsum(equation = var_3749_equation_0, values = (var_3687_cast, var_3652_cast));
            tensor<fp16, []> var_3750_to_fp16 = const()[name = tensor<string, []>("op_3750_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 64, 1, 64]> aw_205_cast = mul(x = var_3749_cast, y = var_3750_to_fp16);
            tensor<string, []> var_3753_equation_0 = const()[name = tensor<string, []>("op_3753_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 64, 1, 64]> var_3753_cast = einsum(equation = var_3753_equation_0, values = (var_3691_cast, var_3656_cast));
            tensor<fp16, []> var_3754_to_fp16 = const()[name = tensor<string, []>("op_3754_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 64, 1, 64]> aw_207_cast = mul(x = var_3753_cast, y = var_3754_to_fp16);
            tensor<fp16, [2, 64, 1, 64]> var_3756_cast = softmax(axis = var_3512, x = aw_193_cast);
            tensor<fp16, [2, 64, 1, 64]> var_3757_cast = softmax(axis = var_3512, x = aw_195_cast);
            tensor<fp16, [2, 64, 1, 64]> var_3758_cast = softmax(axis = var_3512, x = aw_197_cast);
            tensor<fp16, [2, 64, 1, 64]> var_3759_cast = softmax(axis = var_3512, x = aw_199_cast);
            tensor<fp16, [2, 64, 1, 64]> var_3760_cast = softmax(axis = var_3512, x = aw_201_cast);
            tensor<fp16, [2, 64, 1, 64]> var_3761_cast = softmax(axis = var_3512, x = aw_203_cast);
            tensor<fp16, [2, 64, 1, 64]> var_3762_cast = softmax(axis = var_3512, x = aw_205_cast);
            tensor<fp16, [2, 64, 1, 64]> var_3763_cast = softmax(axis = var_3512, x = aw_207_cast);
            tensor<string, []> var_3765_equation_0 = const()[name = tensor<string, []>("op_3765_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 64]> var_3765_cast = einsum(equation = var_3765_equation_0, values = (var_3693_cast, var_3756_cast));
            tensor<string, []> var_3767_equation_0 = const()[name = tensor<string, []>("op_3767_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 64]> var_3767_cast = einsum(equation = var_3767_equation_0, values = (var_3697_cast, var_3757_cast));
            tensor<string, []> var_3769_equation_0 = const()[name = tensor<string, []>("op_3769_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 64]> var_3769_cast = einsum(equation = var_3769_equation_0, values = (var_3701_cast, var_3758_cast));
            tensor<string, []> var_3771_equation_0 = const()[name = tensor<string, []>("op_3771_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 64]> var_3771_cast = einsum(equation = var_3771_equation_0, values = (var_3705_cast, var_3759_cast));
            tensor<string, []> var_3773_equation_0 = const()[name = tensor<string, []>("op_3773_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 64]> var_3773_cast = einsum(equation = var_3773_equation_0, values = (var_3709_cast, var_3760_cast));
            tensor<string, []> var_3775_equation_0 = const()[name = tensor<string, []>("op_3775_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 64]> var_3775_cast = einsum(equation = var_3775_equation_0, values = (var_3713_cast, var_3761_cast));
            tensor<string, []> var_3777_equation_0 = const()[name = tensor<string, []>("op_3777_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 64]> var_3777_cast = einsum(equation = var_3777_equation_0, values = (var_3717_cast, var_3762_cast));
            tensor<string, []> var_3779_equation_0 = const()[name = tensor<string, []>("op_3779_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 64]> var_3779_cast = einsum(equation = var_3779_equation_0, values = (var_3721_cast, var_3763_cast));
            tensor<bool, []> input_215_interleave_0 = const()[name = tensor<string, []>("input_215_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 1280, 1, 64]> input_215_cast = concat(axis = var_3512, interleave = input_215_interleave_0, values = (var_3765_cast, var_3767_cast, var_3769_cast, var_3771_cast, var_3773_cast, var_3775_cast, var_3777_cast, var_3779_cast));
            tensor<int32, [2]> var_3785 = const()[name = tensor<string, []>("op_3785"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3787 = const()[name = tensor<string, []>("op_3787"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_3789_pad_type_0 = const()[name = tensor<string, []>("op_3789_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_3789_pad_0 = const()[name = tensor<string, []>("op_3789_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> mid_block_attentions_0_transformer_blocks_0_attn1_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("mid_block_attentions_0_transformer_blocks_0_attn1_to_out_0_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(578853632)))];
            tensor<fp16, [1280]> mid_block_attentions_0_transformer_blocks_0_attn1_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("mid_block_attentions_0_transformer_blocks_0_attn1_to_out_0_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(582130496)))];
            tensor<fp16, [2, 1280, 1, 64]> var_3789_cast = conv(bias = mid_block_attentions_0_transformer_blocks_0_attn1_to_out_0_bias_to_fp16, dilations = var_3787, groups = var_3512, pad = var_3789_pad_0, pad_type = var_3789_pad_type_0, strides = var_3785, weight = mid_block_attentions_0_transformer_blocks_0_attn1_to_out_0_weight_to_fp16, x = input_215_cast);
            tensor<fp16, [2, 1280, 1, 64]> inputs_39_cast = add(x = var_3789_cast, y = inputs_37_cast);
            tensor<int32, [1]> var_3793 = const()[name = tensor<string, []>("op_3793"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 64]> channels_mean_39_cast = reduce_mean(axes = var_3793, keep_dims = var_3507, x = inputs_39_cast);
            tensor<fp16, [2, 1280, 1, 64]> zero_mean_39_cast = sub(x = inputs_39_cast, y = channels_mean_39_cast);
            tensor<fp16, [2, 1280, 1, 64]> zero_mean_sq_39_cast = mul(x = zero_mean_39_cast, y = zero_mean_39_cast);
            tensor<int32, [1]> var_3797 = const()[name = tensor<string, []>("op_3797"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 64]> var_3798_cast = reduce_mean(axes = var_3797, keep_dims = var_3507, x = zero_mean_sq_39_cast);
            tensor<fp16, []> var_3799_to_fp16 = const()[name = tensor<string, []>("op_3799_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 64]> var_3800_cast = add(x = var_3798_cast, y = var_3799_to_fp16);
            tensor<fp16, []> denom_39_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_39_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 64]> denom_39_cast = rsqrt(epsilon = denom_39_epsilon_0_to_fp16, x = var_3800_cast);
            tensor<fp16, [2, 1280, 1, 64]> out_39_cast = mul(x = zero_mean_39_cast, y = denom_39_cast);
            tensor<fp16, [1, 1280, 1, 1]> var_3804_to_fp16 = const()[name = tensor<string, []>("op_3804_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(582133120)))];
            tensor<fp16, [2, 1280, 1, 64]> var_3805_cast = add(x = out_39_cast, y = var_3804_to_fp16);
            tensor<fp16, [1, 1280, 1, 1]> var_3807_to_fp16 = const()[name = tensor<string, []>("op_3807_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(582135744)))];
            tensor<fp16, [2, 1280, 1, 64]> hidden_states_127_cast = mul(x = var_3805_cast, y = var_3807_to_fp16);
            tensor<int32, [2]> var_3814 = const()[name = tensor<string, []>("op_3814"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3816 = const()[name = tensor<string, []>("op_3816"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_27_pad_type_0 = const()[name = tensor<string, []>("q_27_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_27_pad_0 = const()[name = tensor<string, []>("q_27_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> mid_block_attentions_0_transformer_blocks_0_attn2_to_q_weight_to_fp16 = const()[name = tensor<string, []>("mid_block_attentions_0_transformer_blocks_0_attn2_to_q_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(582138368)))];
            tensor<fp16, [2, 1280, 1, 64]> q_27_cast = conv(dilations = var_3816, groups = var_3512, pad = q_27_pad_0, pad_type = q_27_pad_type_0, strides = var_3814, weight = mid_block_attentions_0_transformer_blocks_0_attn2_to_q_weight_to_fp16, x = hidden_states_127_cast);
            tensor<int32, [2]> var_3820 = const()[name = tensor<string, []>("op_3820"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3822 = const()[name = tensor<string, []>("op_3822"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_53_pad_type_0 = const()[name = tensor<string, []>("k_53_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_53_pad_0 = const()[name = tensor<string, []>("k_53_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 768, 1, 1]> mid_block_attentions_0_transformer_blocks_0_attn2_to_k_weight_to_fp16 = const()[name = tensor<string, []>("mid_block_attentions_0_transformer_blocks_0_attn2_to_k_weight_to_fp16"), val = tensor<fp16, [1280, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(585415232)))];
            tensor<fp16, [2, 1280, 1, 77]> k_53_cast = conv(dilations = var_3822, groups = var_3512, pad = k_53_pad_0, pad_type = k_53_pad_type_0, strides = var_3820, weight = mid_block_attentions_0_transformer_blocks_0_attn2_to_k_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [2]> var_3826 = const()[name = tensor<string, []>("op_3826"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3828 = const()[name = tensor<string, []>("op_3828"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_27_pad_type_0 = const()[name = tensor<string, []>("v_27_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_27_pad_0 = const()[name = tensor<string, []>("v_27_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 768, 1, 1]> mid_block_attentions_0_transformer_blocks_0_attn2_to_v_weight_to_fp16 = const()[name = tensor<string, []>("mid_block_attentions_0_transformer_blocks_0_attn2_to_v_weight_to_fp16"), val = tensor<fp16, [1280, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(587381376)))];
            tensor<fp16, [2, 1280, 1, 77]> v_27_cast = conv(dilations = var_3828, groups = var_3512, pad = v_27_pad_0, pad_type = v_27_pad_type_0, strides = var_3826, weight = mid_block_attentions_0_transformer_blocks_0_attn2_to_v_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [4]> var_3832_begin_0 = const()[name = tensor<string, []>("op_3832_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_3832_end_0 = const()[name = tensor<string, []>("op_3832_end_0"), val = tensor<int32, [4]>([2, 160, 1, 64])];
            tensor<bool, [4]> var_3832_end_mask_0 = const()[name = tensor<string, []>("op_3832_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 64]> var_3832_cast = slice_by_index(begin = var_3832_begin_0, end = var_3832_end_0, end_mask = var_3832_end_mask_0, x = q_27_cast);
            tensor<int32, [4]> var_3836_begin_0 = const()[name = tensor<string, []>("op_3836_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_3836_end_0 = const()[name = tensor<string, []>("op_3836_end_0"), val = tensor<int32, [4]>([2, 320, 1, 64])];
            tensor<bool, [4]> var_3836_end_mask_0 = const()[name = tensor<string, []>("op_3836_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 64]> var_3836_cast = slice_by_index(begin = var_3836_begin_0, end = var_3836_end_0, end_mask = var_3836_end_mask_0, x = q_27_cast);
            tensor<int32, [4]> var_3840_begin_0 = const()[name = tensor<string, []>("op_3840_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_3840_end_0 = const()[name = tensor<string, []>("op_3840_end_0"), val = tensor<int32, [4]>([2, 480, 1, 64])];
            tensor<bool, [4]> var_3840_end_mask_0 = const()[name = tensor<string, []>("op_3840_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 64]> var_3840_cast = slice_by_index(begin = var_3840_begin_0, end = var_3840_end_0, end_mask = var_3840_end_mask_0, x = q_27_cast);
            tensor<int32, [4]> var_3844_begin_0 = const()[name = tensor<string, []>("op_3844_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_3844_end_0 = const()[name = tensor<string, []>("op_3844_end_0"), val = tensor<int32, [4]>([2, 640, 1, 64])];
            tensor<bool, [4]> var_3844_end_mask_0 = const()[name = tensor<string, []>("op_3844_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 64]> var_3844_cast = slice_by_index(begin = var_3844_begin_0, end = var_3844_end_0, end_mask = var_3844_end_mask_0, x = q_27_cast);
            tensor<int32, [4]> var_3848_begin_0 = const()[name = tensor<string, []>("op_3848_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_3848_end_0 = const()[name = tensor<string, []>("op_3848_end_0"), val = tensor<int32, [4]>([2, 800, 1, 64])];
            tensor<bool, [4]> var_3848_end_mask_0 = const()[name = tensor<string, []>("op_3848_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 64]> var_3848_cast = slice_by_index(begin = var_3848_begin_0, end = var_3848_end_0, end_mask = var_3848_end_mask_0, x = q_27_cast);
            tensor<int32, [4]> var_3852_begin_0 = const()[name = tensor<string, []>("op_3852_begin_0"), val = tensor<int32, [4]>([0, 800, 0, 0])];
            tensor<int32, [4]> var_3852_end_0 = const()[name = tensor<string, []>("op_3852_end_0"), val = tensor<int32, [4]>([2, 960, 1, 64])];
            tensor<bool, [4]> var_3852_end_mask_0 = const()[name = tensor<string, []>("op_3852_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 64]> var_3852_cast = slice_by_index(begin = var_3852_begin_0, end = var_3852_end_0, end_mask = var_3852_end_mask_0, x = q_27_cast);
            tensor<int32, [4]> var_3856_begin_0 = const()[name = tensor<string, []>("op_3856_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_3856_end_0 = const()[name = tensor<string, []>("op_3856_end_0"), val = tensor<int32, [4]>([2, 1120, 1, 64])];
            tensor<bool, [4]> var_3856_end_mask_0 = const()[name = tensor<string, []>("op_3856_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 64]> var_3856_cast = slice_by_index(begin = var_3856_begin_0, end = var_3856_end_0, end_mask = var_3856_end_mask_0, x = q_27_cast);
            tensor<int32, [4]> var_3860_begin_0 = const()[name = tensor<string, []>("op_3860_begin_0"), val = tensor<int32, [4]>([0, 1120, 0, 0])];
            tensor<int32, [4]> var_3860_end_0 = const()[name = tensor<string, []>("op_3860_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 64])];
            tensor<bool, [4]> var_3860_end_mask_0 = const()[name = tensor<string, []>("op_3860_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 64]> var_3860_cast = slice_by_index(begin = var_3860_begin_0, end = var_3860_end_0, end_mask = var_3860_end_mask_0, x = q_27_cast);
            tensor<int32, [4]> k_55_perm_0 = const()[name = tensor<string, []>("k_55_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_3867_begin_0 = const()[name = tensor<string, []>("op_3867_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_3867_end_0 = const()[name = tensor<string, []>("op_3867_end_0"), val = tensor<int32, [4]>([2, 77, 1, 160])];
            tensor<bool, [4]> var_3867_end_mask_0 = const()[name = tensor<string, []>("op_3867_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 1280]> transpose_64 = transpose(perm = k_55_perm_0, x = k_53_cast);
            tensor<fp16, [2, 77, 1, 160]> var_3867_cast = slice_by_index(begin = var_3867_begin_0, end = var_3867_end_0, end_mask = var_3867_end_mask_0, x = transpose_64);
            tensor<int32, [4]> var_3871_begin_0 = const()[name = tensor<string, []>("op_3871_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 160])];
            tensor<int32, [4]> var_3871_end_0 = const()[name = tensor<string, []>("op_3871_end_0"), val = tensor<int32, [4]>([2, 77, 1, 320])];
            tensor<bool, [4]> var_3871_end_mask_0 = const()[name = tensor<string, []>("op_3871_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_3871_cast = slice_by_index(begin = var_3871_begin_0, end = var_3871_end_0, end_mask = var_3871_end_mask_0, x = transpose_64);
            tensor<int32, [4]> var_3875_begin_0 = const()[name = tensor<string, []>("op_3875_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_3875_end_0 = const()[name = tensor<string, []>("op_3875_end_0"), val = tensor<int32, [4]>([2, 77, 1, 480])];
            tensor<bool, [4]> var_3875_end_mask_0 = const()[name = tensor<string, []>("op_3875_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_3875_cast = slice_by_index(begin = var_3875_begin_0, end = var_3875_end_0, end_mask = var_3875_end_mask_0, x = transpose_64);
            tensor<int32, [4]> var_3879_begin_0 = const()[name = tensor<string, []>("op_3879_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 480])];
            tensor<int32, [4]> var_3879_end_0 = const()[name = tensor<string, []>("op_3879_end_0"), val = tensor<int32, [4]>([2, 77, 1, 640])];
            tensor<bool, [4]> var_3879_end_mask_0 = const()[name = tensor<string, []>("op_3879_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_3879_cast = slice_by_index(begin = var_3879_begin_0, end = var_3879_end_0, end_mask = var_3879_end_mask_0, x = transpose_64);
            tensor<int32, [4]> var_3883_begin_0 = const()[name = tensor<string, []>("op_3883_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 640])];
            tensor<int32, [4]> var_3883_end_0 = const()[name = tensor<string, []>("op_3883_end_0"), val = tensor<int32, [4]>([2, 77, 1, 800])];
            tensor<bool, [4]> var_3883_end_mask_0 = const()[name = tensor<string, []>("op_3883_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_3883_cast = slice_by_index(begin = var_3883_begin_0, end = var_3883_end_0, end_mask = var_3883_end_mask_0, x = transpose_64);
            tensor<int32, [4]> var_3887_begin_0 = const()[name = tensor<string, []>("op_3887_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 800])];
            tensor<int32, [4]> var_3887_end_0 = const()[name = tensor<string, []>("op_3887_end_0"), val = tensor<int32, [4]>([2, 77, 1, 960])];
            tensor<bool, [4]> var_3887_end_mask_0 = const()[name = tensor<string, []>("op_3887_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_3887_cast = slice_by_index(begin = var_3887_begin_0, end = var_3887_end_0, end_mask = var_3887_end_mask_0, x = transpose_64);
            tensor<int32, [4]> var_3891_begin_0 = const()[name = tensor<string, []>("op_3891_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 960])];
            tensor<int32, [4]> var_3891_end_0 = const()[name = tensor<string, []>("op_3891_end_0"), val = tensor<int32, [4]>([2, 77, 1, 1120])];
            tensor<bool, [4]> var_3891_end_mask_0 = const()[name = tensor<string, []>("op_3891_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_3891_cast = slice_by_index(begin = var_3891_begin_0, end = var_3891_end_0, end_mask = var_3891_end_mask_0, x = transpose_64);
            tensor<int32, [4]> var_3895_begin_0 = const()[name = tensor<string, []>("op_3895_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1120])];
            tensor<int32, [4]> var_3895_end_0 = const()[name = tensor<string, []>("op_3895_end_0"), val = tensor<int32, [4]>([2, 77, 1, 1280])];
            tensor<bool, [4]> var_3895_end_mask_0 = const()[name = tensor<string, []>("op_3895_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_3895_cast = slice_by_index(begin = var_3895_begin_0, end = var_3895_end_0, end_mask = var_3895_end_mask_0, x = transpose_64);
            tensor<int32, [4]> var_3897_begin_0 = const()[name = tensor<string, []>("op_3897_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_3897_end_0 = const()[name = tensor<string, []>("op_3897_end_0"), val = tensor<int32, [4]>([2, 160, 1, 77])];
            tensor<bool, [4]> var_3897_end_mask_0 = const()[name = tensor<string, []>("op_3897_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_3897_cast = slice_by_index(begin = var_3897_begin_0, end = var_3897_end_0, end_mask = var_3897_end_mask_0, x = v_27_cast);
            tensor<int32, [4]> var_3901_begin_0 = const()[name = tensor<string, []>("op_3901_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_3901_end_0 = const()[name = tensor<string, []>("op_3901_end_0"), val = tensor<int32, [4]>([2, 320, 1, 77])];
            tensor<bool, [4]> var_3901_end_mask_0 = const()[name = tensor<string, []>("op_3901_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_3901_cast = slice_by_index(begin = var_3901_begin_0, end = var_3901_end_0, end_mask = var_3901_end_mask_0, x = v_27_cast);
            tensor<int32, [4]> var_3905_begin_0 = const()[name = tensor<string, []>("op_3905_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_3905_end_0 = const()[name = tensor<string, []>("op_3905_end_0"), val = tensor<int32, [4]>([2, 480, 1, 77])];
            tensor<bool, [4]> var_3905_end_mask_0 = const()[name = tensor<string, []>("op_3905_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_3905_cast = slice_by_index(begin = var_3905_begin_0, end = var_3905_end_0, end_mask = var_3905_end_mask_0, x = v_27_cast);
            tensor<int32, [4]> var_3909_begin_0 = const()[name = tensor<string, []>("op_3909_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_3909_end_0 = const()[name = tensor<string, []>("op_3909_end_0"), val = tensor<int32, [4]>([2, 640, 1, 77])];
            tensor<bool, [4]> var_3909_end_mask_0 = const()[name = tensor<string, []>("op_3909_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_3909_cast = slice_by_index(begin = var_3909_begin_0, end = var_3909_end_0, end_mask = var_3909_end_mask_0, x = v_27_cast);
            tensor<int32, [4]> var_3913_begin_0 = const()[name = tensor<string, []>("op_3913_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_3913_end_0 = const()[name = tensor<string, []>("op_3913_end_0"), val = tensor<int32, [4]>([2, 800, 1, 77])];
            tensor<bool, [4]> var_3913_end_mask_0 = const()[name = tensor<string, []>("op_3913_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_3913_cast = slice_by_index(begin = var_3913_begin_0, end = var_3913_end_0, end_mask = var_3913_end_mask_0, x = v_27_cast);
            tensor<int32, [4]> var_3917_begin_0 = const()[name = tensor<string, []>("op_3917_begin_0"), val = tensor<int32, [4]>([0, 800, 0, 0])];
            tensor<int32, [4]> var_3917_end_0 = const()[name = tensor<string, []>("op_3917_end_0"), val = tensor<int32, [4]>([2, 960, 1, 77])];
            tensor<bool, [4]> var_3917_end_mask_0 = const()[name = tensor<string, []>("op_3917_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_3917_cast = slice_by_index(begin = var_3917_begin_0, end = var_3917_end_0, end_mask = var_3917_end_mask_0, x = v_27_cast);
            tensor<int32, [4]> var_3921_begin_0 = const()[name = tensor<string, []>("op_3921_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_3921_end_0 = const()[name = tensor<string, []>("op_3921_end_0"), val = tensor<int32, [4]>([2, 1120, 1, 77])];
            tensor<bool, [4]> var_3921_end_mask_0 = const()[name = tensor<string, []>("op_3921_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_3921_cast = slice_by_index(begin = var_3921_begin_0, end = var_3921_end_0, end_mask = var_3921_end_mask_0, x = v_27_cast);
            tensor<int32, [4]> var_3925_begin_0 = const()[name = tensor<string, []>("op_3925_begin_0"), val = tensor<int32, [4]>([0, 1120, 0, 0])];
            tensor<int32, [4]> var_3925_end_0 = const()[name = tensor<string, []>("op_3925_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 77])];
            tensor<bool, [4]> var_3925_end_mask_0 = const()[name = tensor<string, []>("op_3925_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_3925_cast = slice_by_index(begin = var_3925_begin_0, end = var_3925_end_0, end_mask = var_3925_end_mask_0, x = v_27_cast);
            tensor<string, []> var_3929_equation_0 = const()[name = tensor<string, []>("op_3929_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 64]> var_3929_cast = einsum(equation = var_3929_equation_0, values = (var_3867_cast, var_3832_cast));
            tensor<fp16, []> var_3930_to_fp16 = const()[name = tensor<string, []>("op_3930_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 64]> aw_209_cast = mul(x = var_3929_cast, y = var_3930_to_fp16);
            tensor<string, []> var_3933_equation_0 = const()[name = tensor<string, []>("op_3933_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 64]> var_3933_cast = einsum(equation = var_3933_equation_0, values = (var_3871_cast, var_3836_cast));
            tensor<fp16, []> var_3934_to_fp16 = const()[name = tensor<string, []>("op_3934_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 64]> aw_211_cast = mul(x = var_3933_cast, y = var_3934_to_fp16);
            tensor<string, []> var_3937_equation_0 = const()[name = tensor<string, []>("op_3937_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 64]> var_3937_cast = einsum(equation = var_3937_equation_0, values = (var_3875_cast, var_3840_cast));
            tensor<fp16, []> var_3938_to_fp16 = const()[name = tensor<string, []>("op_3938_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 64]> aw_213_cast = mul(x = var_3937_cast, y = var_3938_to_fp16);
            tensor<string, []> var_3941_equation_0 = const()[name = tensor<string, []>("op_3941_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 64]> var_3941_cast = einsum(equation = var_3941_equation_0, values = (var_3879_cast, var_3844_cast));
            tensor<fp16, []> var_3942_to_fp16 = const()[name = tensor<string, []>("op_3942_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 64]> aw_215_cast = mul(x = var_3941_cast, y = var_3942_to_fp16);
            tensor<string, []> var_3945_equation_0 = const()[name = tensor<string, []>("op_3945_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 64]> var_3945_cast = einsum(equation = var_3945_equation_0, values = (var_3883_cast, var_3848_cast));
            tensor<fp16, []> var_3946_to_fp16 = const()[name = tensor<string, []>("op_3946_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 64]> aw_217_cast = mul(x = var_3945_cast, y = var_3946_to_fp16);
            tensor<string, []> var_3949_equation_0 = const()[name = tensor<string, []>("op_3949_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 64]> var_3949_cast = einsum(equation = var_3949_equation_0, values = (var_3887_cast, var_3852_cast));
            tensor<fp16, []> var_3950_to_fp16 = const()[name = tensor<string, []>("op_3950_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 64]> aw_219_cast = mul(x = var_3949_cast, y = var_3950_to_fp16);
            tensor<string, []> var_3953_equation_0 = const()[name = tensor<string, []>("op_3953_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 64]> var_3953_cast = einsum(equation = var_3953_equation_0, values = (var_3891_cast, var_3856_cast));
            tensor<fp16, []> var_3954_to_fp16 = const()[name = tensor<string, []>("op_3954_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 64]> aw_221_cast = mul(x = var_3953_cast, y = var_3954_to_fp16);
            tensor<string, []> var_3957_equation_0 = const()[name = tensor<string, []>("op_3957_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 64]> var_3957_cast = einsum(equation = var_3957_equation_0, values = (var_3895_cast, var_3860_cast));
            tensor<fp16, []> var_3958_to_fp16 = const()[name = tensor<string, []>("op_3958_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 64]> aw_223_cast = mul(x = var_3957_cast, y = var_3958_to_fp16);
            tensor<fp16, [2, 77, 1, 64]> var_3960_cast = softmax(axis = var_3512, x = aw_209_cast);
            tensor<fp16, [2, 77, 1, 64]> var_3961_cast = softmax(axis = var_3512, x = aw_211_cast);
            tensor<fp16, [2, 77, 1, 64]> var_3962_cast = softmax(axis = var_3512, x = aw_213_cast);
            tensor<fp16, [2, 77, 1, 64]> var_3963_cast = softmax(axis = var_3512, x = aw_215_cast);
            tensor<fp16, [2, 77, 1, 64]> var_3964_cast = softmax(axis = var_3512, x = aw_217_cast);
            tensor<fp16, [2, 77, 1, 64]> var_3965_cast = softmax(axis = var_3512, x = aw_219_cast);
            tensor<fp16, [2, 77, 1, 64]> var_3966_cast = softmax(axis = var_3512, x = aw_221_cast);
            tensor<fp16, [2, 77, 1, 64]> var_3967_cast = softmax(axis = var_3512, x = aw_223_cast);
            tensor<string, []> var_3969_equation_0 = const()[name = tensor<string, []>("op_3969_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 64]> var_3969_cast = einsum(equation = var_3969_equation_0, values = (var_3897_cast, var_3960_cast));
            tensor<string, []> var_3971_equation_0 = const()[name = tensor<string, []>("op_3971_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 64]> var_3971_cast = einsum(equation = var_3971_equation_0, values = (var_3901_cast, var_3961_cast));
            tensor<string, []> var_3973_equation_0 = const()[name = tensor<string, []>("op_3973_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 64]> var_3973_cast = einsum(equation = var_3973_equation_0, values = (var_3905_cast, var_3962_cast));
            tensor<string, []> var_3975_equation_0 = const()[name = tensor<string, []>("op_3975_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 64]> var_3975_cast = einsum(equation = var_3975_equation_0, values = (var_3909_cast, var_3963_cast));
            tensor<string, []> var_3977_equation_0 = const()[name = tensor<string, []>("op_3977_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 64]> var_3977_cast = einsum(equation = var_3977_equation_0, values = (var_3913_cast, var_3964_cast));
            tensor<string, []> var_3979_equation_0 = const()[name = tensor<string, []>("op_3979_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 64]> var_3979_cast = einsum(equation = var_3979_equation_0, values = (var_3917_cast, var_3965_cast));
            tensor<string, []> var_3981_equation_0 = const()[name = tensor<string, []>("op_3981_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 64]> var_3981_cast = einsum(equation = var_3981_equation_0, values = (var_3921_cast, var_3966_cast));
            tensor<string, []> var_3983_equation_0 = const()[name = tensor<string, []>("op_3983_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 64]> var_3983_cast = einsum(equation = var_3983_equation_0, values = (var_3925_cast, var_3967_cast));
            tensor<bool, []> input_217_interleave_0 = const()[name = tensor<string, []>("input_217_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 1280, 1, 64]> input_217_cast = concat(axis = var_3512, interleave = input_217_interleave_0, values = (var_3969_cast, var_3971_cast, var_3973_cast, var_3975_cast, var_3977_cast, var_3979_cast, var_3981_cast, var_3983_cast));
            tensor<int32, [2]> var_3989 = const()[name = tensor<string, []>("op_3989"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3991 = const()[name = tensor<string, []>("op_3991"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_3993_pad_type_0 = const()[name = tensor<string, []>("op_3993_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_3993_pad_0 = const()[name = tensor<string, []>("op_3993_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> mid_block_attentions_0_transformer_blocks_0_attn2_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("mid_block_attentions_0_transformer_blocks_0_attn2_to_out_0_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(589347520)))];
            tensor<fp16, [1280]> mid_block_attentions_0_transformer_blocks_0_attn2_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("mid_block_attentions_0_transformer_blocks_0_attn2_to_out_0_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(592624384)))];
            tensor<fp16, [2, 1280, 1, 64]> var_3993_cast = conv(bias = mid_block_attentions_0_transformer_blocks_0_attn2_to_out_0_bias_to_fp16, dilations = var_3991, groups = var_3512, pad = var_3993_pad_0, pad_type = var_3993_pad_type_0, strides = var_3989, weight = mid_block_attentions_0_transformer_blocks_0_attn2_to_out_0_weight_to_fp16, x = input_217_cast);
            tensor<fp16, [2, 1280, 1, 64]> inputs_41_cast = add(x = var_3993_cast, y = inputs_39_cast);
            tensor<int32, [1]> var_3997 = const()[name = tensor<string, []>("op_3997"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 64]> channels_mean_41_cast = reduce_mean(axes = var_3997, keep_dims = var_3507, x = inputs_41_cast);
            tensor<fp16, [2, 1280, 1, 64]> zero_mean_41_cast = sub(x = inputs_41_cast, y = channels_mean_41_cast);
            tensor<fp16, [2, 1280, 1, 64]> zero_mean_sq_41_cast = mul(x = zero_mean_41_cast, y = zero_mean_41_cast);
            tensor<int32, [1]> var_4001 = const()[name = tensor<string, []>("op_4001"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 64]> var_4002_cast = reduce_mean(axes = var_4001, keep_dims = var_3507, x = zero_mean_sq_41_cast);
            tensor<fp16, []> var_4003_to_fp16 = const()[name = tensor<string, []>("op_4003_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 64]> var_4004_cast = add(x = var_4002_cast, y = var_4003_to_fp16);
            tensor<fp16, []> denom_41_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_41_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 64]> denom_41_cast = rsqrt(epsilon = denom_41_epsilon_0_to_fp16, x = var_4004_cast);
            tensor<fp16, [2, 1280, 1, 64]> out_41_cast = mul(x = zero_mean_41_cast, y = denom_41_cast);
            tensor<fp16, [1, 1280, 1, 1]> var_4008_to_fp16 = const()[name = tensor<string, []>("op_4008_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(592627008)))];
            tensor<fp16, [2, 1280, 1, 64]> var_4009_cast = add(x = out_41_cast, y = var_4008_to_fp16);
            tensor<fp16, [1, 1280, 1, 1]> var_4011_to_fp16 = const()[name = tensor<string, []>("op_4011_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(592629632)))];
            tensor<fp16, [2, 1280, 1, 64]> input_219_cast = mul(x = var_4009_cast, y = var_4011_to_fp16);
            tensor<int32, [2]> var_4019 = const()[name = tensor<string, []>("op_4019"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4021 = const()[name = tensor<string, []>("op_4021"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_4023_pad_type_0 = const()[name = tensor<string, []>("op_4023_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_4023_pad_0 = const()[name = tensor<string, []>("op_4023_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [10240, 1280, 1, 1]> mid_block_attentions_0_transformer_blocks_0_ff_net_0_proj_weight_to_fp16 = const()[name = tensor<string, []>("mid_block_attentions_0_transformer_blocks_0_ff_net_0_proj_weight_to_fp16"), val = tensor<fp16, [10240, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(592632256)))];
            tensor<fp16, [10240]> mid_block_attentions_0_transformer_blocks_0_ff_net_0_proj_bias_to_fp16 = const()[name = tensor<string, []>("mid_block_attentions_0_transformer_blocks_0_ff_net_0_proj_bias_to_fp16"), val = tensor<fp16, [10240]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(618846720)))];
            tensor<fp16, [2, 10240, 1, 64]> var_4023_cast = conv(bias = mid_block_attentions_0_transformer_blocks_0_ff_net_0_proj_bias_to_fp16, dilations = var_4021, groups = var_3512, pad = var_4023_pad_0, pad_type = var_4023_pad_type_0, strides = var_4019, weight = mid_block_attentions_0_transformer_blocks_0_ff_net_0_proj_weight_to_fp16, x = input_219_cast);
            tensor<int32, [2]> var_4024_split_sizes_0 = const()[name = tensor<string, []>("op_4024_split_sizes_0"), val = tensor<int32, [2]>([5120, 5120])];
            tensor<int32, []> var_4024_axis_0 = const()[name = tensor<string, []>("op_4024_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [2, 5120, 1, 64]> var_4024_cast_0, tensor<fp16, [2, 5120, 1, 64]> var_4024_cast_1 = split(axis = var_4024_axis_0, split_sizes = var_4024_split_sizes_0, x = var_4023_cast);
            tensor<string, []> var_4026_mode_0 = const()[name = tensor<string, []>("op_4026_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [2, 5120, 1, 64]> var_4026_cast = gelu(mode = var_4026_mode_0, x = var_4024_cast_1);
            tensor<fp16, [2, 5120, 1, 64]> input_221_cast = mul(x = var_4024_cast_0, y = var_4026_cast);
            tensor<int32, [2]> var_4030 = const()[name = tensor<string, []>("op_4030"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4032 = const()[name = tensor<string, []>("op_4032"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_4034_pad_type_0 = const()[name = tensor<string, []>("op_4034_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_4034_pad_0 = const()[name = tensor<string, []>("op_4034_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 5120, 1, 1]> mid_block_attentions_0_transformer_blocks_0_ff_net_2_weight_to_fp16 = const()[name = tensor<string, []>("mid_block_attentions_0_transformer_blocks_0_ff_net_2_weight_to_fp16"), val = tensor<fp16, [1280, 5120, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(618867264)))];
            tensor<fp16, [1280]> mid_block_attentions_0_transformer_blocks_0_ff_net_2_bias_to_fp16 = const()[name = tensor<string, []>("mid_block_attentions_0_transformer_blocks_0_ff_net_2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(631974528)))];
            tensor<fp16, [2, 1280, 1, 64]> var_4034_cast = conv(bias = mid_block_attentions_0_transformer_blocks_0_ff_net_2_bias_to_fp16, dilations = var_4032, groups = var_3512, pad = var_4034_pad_0, pad_type = var_4034_pad_type_0, strides = var_4030, weight = mid_block_attentions_0_transformer_blocks_0_ff_net_2_weight_to_fp16, x = input_221_cast);
            tensor<fp16, [2, 1280, 1, 64]> hidden_states_131_cast = add(x = var_4034_cast, y = inputs_41_cast);
            tensor<int32, [4]> var_4036 = const()[name = tensor<string, []>("op_4036"), val = tensor<int32, [4]>([2, 1280, 8, 8])];
            tensor<fp16, [2, 1280, 8, 8]> input_223_cast = reshape(shape = var_4036, x = hidden_states_131_cast);
            tensor<int32, [2]> var_4040 = const()[name = tensor<string, []>("op_4040"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4042 = const()[name = tensor<string, []>("op_4042"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_133_pad_type_0 = const()[name = tensor<string, []>("hidden_states_133_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_133_pad_0 = const()[name = tensor<string, []>("hidden_states_133_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> mid_block_attentions_0_proj_out_weight_to_fp16 = const()[name = tensor<string, []>("mid_block_attentions_0_proj_out_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(631977152)))];
            tensor<fp16, [1280]> mid_block_attentions_0_proj_out_bias_to_fp16 = const()[name = tensor<string, []>("mid_block_attentions_0_proj_out_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(635254016)))];
            tensor<fp16, [2, 1280, 8, 8]> hidden_states_133_cast = conv(bias = mid_block_attentions_0_proj_out_bias_to_fp16, dilations = var_4042, groups = var_3512, pad = hidden_states_133_pad_0, pad_type = hidden_states_133_pad_type_0, strides = var_4040, weight = mid_block_attentions_0_proj_out_weight_to_fp16, x = input_223_cast);
            tensor<fp16, [2, 1280, 8, 8]> input_225_cast = add(x = hidden_states_133_cast, y = hidden_states_121_cast);
            tensor<int32, [5]> reshape_100_shape_0 = const()[name = tensor<string, []>("reshape_100_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 8, 8])];
            tensor<fp16, [2, 32, 40, 8, 8]> reshape_100_cast = reshape(shape = reshape_100_shape_0, x = input_225_cast);
            tensor<int32, [3]> reduce_mean_75_axes_0 = const()[name = tensor<string, []>("reduce_mean_75_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_75_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_75_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_75_cast = reduce_mean(axes = reduce_mean_75_axes_0, keep_dims = reduce_mean_75_keep_dims_0, x = reshape_100_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> sub_50_cast = sub(x = reshape_100_cast, y = reduce_mean_75_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> square_25_cast = square(x = sub_50_cast);
            tensor<int32, [3]> reduce_mean_77_axes_0 = const()[name = tensor<string, []>("reduce_mean_77_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_77_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_77_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_77_cast = reduce_mean(axes = reduce_mean_77_axes_0, keep_dims = reduce_mean_77_keep_dims_0, x = square_25_cast);
            tensor<fp16, []> add_50_y_0_to_fp16 = const()[name = tensor<string, []>("add_50_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_50_cast = add(x = reduce_mean_77_cast, y = add_50_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_25_cast = sqrt(x = add_50_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> real_div_25_cast = real_div(x = sub_50_cast, y = sqrt_25_cast);
            tensor<int32, [4]> reshape_101_shape_0 = const()[name = tensor<string, []>("reshape_101_shape_0"), val = tensor<int32, [4]>([2, 1280, 8, 8])];
            tensor<fp16, [2, 1280, 8, 8]> reshape_101_cast = reshape(shape = reshape_101_shape_0, x = real_div_25_cast);
            tensor<fp16, [1280]> add_51_mean_0_to_fp16 = const()[name = tensor<string, []>("add_51_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(635256640)))];
            tensor<fp16, [1280]> add_51_variance_0_to_fp16 = const()[name = tensor<string, []>("add_51_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(635259264)))];
            tensor<fp16, [1280]> add_51_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_51_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(635261888)))];
            tensor<fp16, [1280]> add_51_beta_0_to_fp16 = const()[name = tensor<string, []>("add_51_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(635264512)))];
            tensor<fp16, []> add_51_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_51_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 8, 8]> add_51_cast = batch_norm(beta = add_51_beta_0_to_fp16, epsilon = add_51_epsilon_0_to_fp16, gamma = add_51_gamma_0_to_fp16, mean = add_51_mean_0_to_fp16, variance = add_51_variance_0_to_fp16, x = reshape_101_cast);
            tensor<fp16, [2, 1280, 8, 8]> input_229_cast = silu(x = add_51_cast);
            tensor<int32, [2]> var_4057 = const()[name = tensor<string, []>("op_4057"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4059 = const()[name = tensor<string, []>("op_4059"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_135_pad_type_0 = const()[name = tensor<string, []>("hidden_states_135_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_135_pad_0 = const()[name = tensor<string, []>("hidden_states_135_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 1280, 3, 3]> mid_block_resnets_1_conv1_weight_to_fp16 = const()[name = tensor<string, []>("mid_block_resnets_1_conv1_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(635267136)))];
            tensor<fp16, [1280]> mid_block_resnets_1_conv1_bias_to_fp16 = const()[name = tensor<string, []>("mid_block_resnets_1_conv1_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(664758400)))];
            tensor<fp16, [2, 1280, 8, 8]> hidden_states_135_cast = conv(bias = mid_block_resnets_1_conv1_bias_to_fp16, dilations = var_4059, groups = var_3512, pad = hidden_states_135_pad_0, pad_type = hidden_states_135_pad_type_0, strides = var_4057, weight = mid_block_resnets_1_conv1_weight_to_fp16, x = input_229_cast);
            tensor<int32, [2]> var_4065 = const()[name = tensor<string, []>("op_4065"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4067 = const()[name = tensor<string, []>("op_4067"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> temb_19_pad_type_0 = const()[name = tensor<string, []>("temb_19_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> temb_19_pad_0 = const()[name = tensor<string, []>("temb_19_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> mid_block_resnets_1_time_emb_proj_weight_to_fp16 = const()[name = tensor<string, []>("mid_block_resnets_1_time_emb_proj_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(664761024)))];
            tensor<fp16, [1280]> mid_block_resnets_1_time_emb_proj_bias_to_fp16 = const()[name = tensor<string, []>("mid_block_resnets_1_time_emb_proj_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(668037888)))];
            tensor<fp16, [2, 1280, 1, 1]> temb_19_cast = conv(bias = mid_block_resnets_1_time_emb_proj_bias_to_fp16, dilations = var_4067, groups = var_3512, pad = temb_19_pad_0, pad_type = temb_19_pad_type_0, strides = var_4065, weight = mid_block_resnets_1_time_emb_proj_weight_to_fp16, x = input_15_cast_1);
            tensor<fp16, [2, 1280, 8, 8]> input_233_cast = add(x = hidden_states_135_cast, y = temb_19_cast);
            tensor<int32, [5]> reshape_104_shape_0 = const()[name = tensor<string, []>("reshape_104_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 8, 8])];
            tensor<fp16, [2, 32, 40, 8, 8]> reshape_104_cast = reshape(shape = reshape_104_shape_0, x = input_233_cast);
            tensor<int32, [3]> reduce_mean_78_axes_0 = const()[name = tensor<string, []>("reduce_mean_78_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_78_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_78_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_78_cast = reduce_mean(axes = reduce_mean_78_axes_0, keep_dims = reduce_mean_78_keep_dims_0, x = reshape_104_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> sub_52_cast = sub(x = reshape_104_cast, y = reduce_mean_78_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> square_26_cast = square(x = sub_52_cast);
            tensor<int32, [3]> reduce_mean_80_axes_0 = const()[name = tensor<string, []>("reduce_mean_80_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_80_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_80_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_80_cast = reduce_mean(axes = reduce_mean_80_axes_0, keep_dims = reduce_mean_80_keep_dims_0, x = square_26_cast);
            tensor<fp16, []> add_52_y_0_to_fp16 = const()[name = tensor<string, []>("add_52_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_52_cast = add(x = reduce_mean_80_cast, y = add_52_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_26_cast = sqrt(x = add_52_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> real_div_26_cast = real_div(x = sub_52_cast, y = sqrt_26_cast);
            tensor<int32, [4]> reshape_105_shape_0 = const()[name = tensor<string, []>("reshape_105_shape_0"), val = tensor<int32, [4]>([2, 1280, 8, 8])];
            tensor<fp16, [2, 1280, 8, 8]> reshape_105_cast = reshape(shape = reshape_105_shape_0, x = real_div_26_cast);
            tensor<fp16, [1280]> add_53_mean_0_to_fp16 = const()[name = tensor<string, []>("add_53_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(668040512)))];
            tensor<fp16, [1280]> add_53_variance_0_to_fp16 = const()[name = tensor<string, []>("add_53_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(668043136)))];
            tensor<fp16, [1280]> add_53_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_53_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(668045760)))];
            tensor<fp16, [1280]> add_53_beta_0_to_fp16 = const()[name = tensor<string, []>("add_53_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(668048384)))];
            tensor<fp16, []> add_53_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_53_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 8, 8]> add_53_cast = batch_norm(beta = add_53_beta_0_to_fp16, epsilon = add_53_epsilon_0_to_fp16, gamma = add_53_gamma_0_to_fp16, mean = add_53_mean_0_to_fp16, variance = add_53_variance_0_to_fp16, x = reshape_105_cast);
            tensor<fp16, [2, 1280, 8, 8]> input_237_cast = silu(x = add_53_cast);
            tensor<int32, [2]> var_4077 = const()[name = tensor<string, []>("op_4077"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4079 = const()[name = tensor<string, []>("op_4079"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_137_pad_type_0 = const()[name = tensor<string, []>("hidden_states_137_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_137_pad_0 = const()[name = tensor<string, []>("hidden_states_137_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 1280, 3, 3]> mid_block_resnets_1_conv2_weight_to_fp16 = const()[name = tensor<string, []>("mid_block_resnets_1_conv2_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(668051008)))];
            tensor<fp16, [1280]> mid_block_resnets_1_conv2_bias_to_fp16 = const()[name = tensor<string, []>("mid_block_resnets_1_conv2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(697542272)))];
            tensor<fp16, [2, 1280, 8, 8]> hidden_states_137_cast = conv(bias = mid_block_resnets_1_conv2_bias_to_fp16, dilations = var_4079, groups = var_3512, pad = hidden_states_137_pad_0, pad_type = hidden_states_137_pad_type_0, strides = var_4077, weight = mid_block_resnets_1_conv2_weight_to_fp16, x = input_237_cast);
            tensor<fp16, [2, 1280, 8, 8]> hidden_states_139_cast = add(x = input_225_cast, y = hidden_states_137_cast);
            tensor<int32, []> var_4090 = const()[name = tensor<string, []>("op_4090"), val = tensor<int32, []>(1)];
            tensor<bool, []> input_239_interleave_0 = const()[name = tensor<string, []>("input_239_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 2560, 8, 8]> input_239_cast = concat(axis = var_4090, interleave = input_239_interleave_0, values = (hidden_states_139_cast, input_199_cast));
            tensor<int32, [5]> reshape_108_shape_0 = const()[name = tensor<string, []>("reshape_108_shape_0"), val = tensor<int32, [5]>([2, 32, 80, 8, 8])];
            tensor<fp16, [2, 32, 80, 8, 8]> reshape_108_cast = reshape(shape = reshape_108_shape_0, x = input_239_cast);
            tensor<int32, [3]> reduce_mean_81_axes_0 = const()[name = tensor<string, []>("reduce_mean_81_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_81_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_81_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_81_cast = reduce_mean(axes = reduce_mean_81_axes_0, keep_dims = reduce_mean_81_keep_dims_0, x = reshape_108_cast);
            tensor<fp16, [2, 32, 80, 8, 8]> sub_54_cast = sub(x = reshape_108_cast, y = reduce_mean_81_cast);
            tensor<fp16, [2, 32, 80, 8, 8]> square_27_cast = square(x = sub_54_cast);
            tensor<int32, [3]> reduce_mean_83_axes_0 = const()[name = tensor<string, []>("reduce_mean_83_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_83_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_83_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_83_cast = reduce_mean(axes = reduce_mean_83_axes_0, keep_dims = reduce_mean_83_keep_dims_0, x = square_27_cast);
            tensor<fp16, []> add_54_y_0_to_fp16 = const()[name = tensor<string, []>("add_54_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_54_cast = add(x = reduce_mean_83_cast, y = add_54_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_27_cast = sqrt(x = add_54_cast);
            tensor<fp16, [2, 32, 80, 8, 8]> real_div_27_cast = real_div(x = sub_54_cast, y = sqrt_27_cast);
            tensor<int32, [4]> reshape_109_shape_0 = const()[name = tensor<string, []>("reshape_109_shape_0"), val = tensor<int32, [4]>([2, 2560, 8, 8])];
            tensor<fp16, [2, 2560, 8, 8]> reshape_109_cast = reshape(shape = reshape_109_shape_0, x = real_div_27_cast);
            tensor<fp16, [2560]> add_55_mean_0_to_fp16 = const()[name = tensor<string, []>("add_55_mean_0_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(697544896)))];
            tensor<fp16, [2560]> add_55_variance_0_to_fp16 = const()[name = tensor<string, []>("add_55_variance_0_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(697550080)))];
            tensor<fp16, [2560]> add_55_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_55_gamma_0_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(697555264)))];
            tensor<fp16, [2560]> add_55_beta_0_to_fp16 = const()[name = tensor<string, []>("add_55_beta_0_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(697560448)))];
            tensor<fp16, []> add_55_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_55_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 2560, 8, 8]> add_55_cast = batch_norm(beta = add_55_beta_0_to_fp16, epsilon = add_55_epsilon_0_to_fp16, gamma = add_55_gamma_0_to_fp16, mean = add_55_mean_0_to_fp16, variance = add_55_variance_0_to_fp16, x = reshape_109_cast);
            tensor<fp16, [2, 2560, 8, 8]> input_243_cast = silu(x = add_55_cast);
            tensor<int32, [2]> var_4113 = const()[name = tensor<string, []>("op_4113"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4115 = const()[name = tensor<string, []>("op_4115"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_141_pad_type_0 = const()[name = tensor<string, []>("hidden_states_141_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_141_pad_0 = const()[name = tensor<string, []>("hidden_states_141_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 2560, 3, 3]> up_blocks_0_resnets_0_conv1_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_0_conv1_weight_to_fp16"), val = tensor<fp16, [1280, 2560, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(697565632)))];
            tensor<fp16, [1280]> up_blocks_0_resnets_0_conv1_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_0_conv1_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(756548096)))];
            tensor<fp16, [2, 1280, 8, 8]> hidden_states_141_cast = conv(bias = up_blocks_0_resnets_0_conv1_bias_to_fp16, dilations = var_4115, groups = var_4090, pad = hidden_states_141_pad_0, pad_type = hidden_states_141_pad_type_0, strides = var_4113, weight = up_blocks_0_resnets_0_conv1_weight_to_fp16, x = input_243_cast);
            tensor<int32, [2]> var_4121 = const()[name = tensor<string, []>("op_4121"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4123 = const()[name = tensor<string, []>("op_4123"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> temb_21_pad_type_0 = const()[name = tensor<string, []>("temb_21_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> temb_21_pad_0 = const()[name = tensor<string, []>("temb_21_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_0_resnets_0_time_emb_proj_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_0_time_emb_proj_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(756550720)))];
            tensor<fp16, [1280]> up_blocks_0_resnets_0_time_emb_proj_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_0_time_emb_proj_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(759827584)))];
            tensor<fp16, [2, 1280, 1, 1]> temb_21_cast = conv(bias = up_blocks_0_resnets_0_time_emb_proj_bias_to_fp16, dilations = var_4123, groups = var_4090, pad = temb_21_pad_0, pad_type = temb_21_pad_type_0, strides = var_4121, weight = up_blocks_0_resnets_0_time_emb_proj_weight_to_fp16, x = input_15_cast_1);
            tensor<fp16, [2, 1280, 8, 8]> input_247_cast = add(x = hidden_states_141_cast, y = temb_21_cast);
            tensor<int32, [5]> reshape_112_shape_0 = const()[name = tensor<string, []>("reshape_112_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 8, 8])];
            tensor<fp16, [2, 32, 40, 8, 8]> reshape_112_cast = reshape(shape = reshape_112_shape_0, x = input_247_cast);
            tensor<int32, [3]> reduce_mean_84_axes_0 = const()[name = tensor<string, []>("reduce_mean_84_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_84_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_84_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_84_cast = reduce_mean(axes = reduce_mean_84_axes_0, keep_dims = reduce_mean_84_keep_dims_0, x = reshape_112_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> sub_56_cast = sub(x = reshape_112_cast, y = reduce_mean_84_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> square_28_cast = square(x = sub_56_cast);
            tensor<int32, [3]> reduce_mean_86_axes_0 = const()[name = tensor<string, []>("reduce_mean_86_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_86_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_86_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_86_cast = reduce_mean(axes = reduce_mean_86_axes_0, keep_dims = reduce_mean_86_keep_dims_0, x = square_28_cast);
            tensor<fp16, []> add_56_y_0_to_fp16 = const()[name = tensor<string, []>("add_56_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_56_cast = add(x = reduce_mean_86_cast, y = add_56_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_28_cast = sqrt(x = add_56_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> real_div_28_cast = real_div(x = sub_56_cast, y = sqrt_28_cast);
            tensor<int32, [4]> reshape_113_shape_0 = const()[name = tensor<string, []>("reshape_113_shape_0"), val = tensor<int32, [4]>([2, 1280, 8, 8])];
            tensor<fp16, [2, 1280, 8, 8]> reshape_113_cast = reshape(shape = reshape_113_shape_0, x = real_div_28_cast);
            tensor<fp16, [1280]> add_57_mean_0_to_fp16 = const()[name = tensor<string, []>("add_57_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(759830208)))];
            tensor<fp16, [1280]> add_57_variance_0_to_fp16 = const()[name = tensor<string, []>("add_57_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(759832832)))];
            tensor<fp16, [1280]> add_57_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_57_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(759835456)))];
            tensor<fp16, [1280]> add_57_beta_0_to_fp16 = const()[name = tensor<string, []>("add_57_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(759838080)))];
            tensor<fp16, []> add_57_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_57_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 8, 8]> add_57_cast = batch_norm(beta = add_57_beta_0_to_fp16, epsilon = add_57_epsilon_0_to_fp16, gamma = add_57_gamma_0_to_fp16, mean = add_57_mean_0_to_fp16, variance = add_57_variance_0_to_fp16, x = reshape_113_cast);
            tensor<fp16, [2, 1280, 8, 8]> input_251_cast = silu(x = add_57_cast);
            tensor<int32, [2]> var_4133 = const()[name = tensor<string, []>("op_4133"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4135 = const()[name = tensor<string, []>("op_4135"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_143_pad_type_0 = const()[name = tensor<string, []>("hidden_states_143_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_143_pad_0 = const()[name = tensor<string, []>("hidden_states_143_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 1280, 3, 3]> up_blocks_0_resnets_0_conv2_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_0_conv2_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(759840704)))];
            tensor<fp16, [1280]> up_blocks_0_resnets_0_conv2_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_0_conv2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(789331968)))];
            tensor<fp16, [2, 1280, 8, 8]> hidden_states_143_cast = conv(bias = up_blocks_0_resnets_0_conv2_bias_to_fp16, dilations = var_4135, groups = var_4090, pad = hidden_states_143_pad_0, pad_type = hidden_states_143_pad_type_0, strides = var_4133, weight = up_blocks_0_resnets_0_conv2_weight_to_fp16, x = input_251_cast);
            tensor<int32, [2]> var_4140 = const()[name = tensor<string, []>("op_4140"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4142 = const()[name = tensor<string, []>("op_4142"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_5_pad_type_0 = const()[name = tensor<string, []>("x_5_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_5_pad_0 = const()[name = tensor<string, []>("x_5_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 2560, 1, 1]> up_blocks_0_resnets_0_conv_shortcut_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_0_conv_shortcut_weight_to_fp16"), val = tensor<fp16, [1280, 2560, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(789334592)))];
            tensor<fp16, [1280]> up_blocks_0_resnets_0_conv_shortcut_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_0_conv_shortcut_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(795888256)))];
            tensor<fp16, [2, 1280, 8, 8]> x_5_cast = conv(bias = up_blocks_0_resnets_0_conv_shortcut_bias_to_fp16, dilations = var_4142, groups = var_4090, pad = x_5_pad_0, pad_type = x_5_pad_type_0, strides = var_4140, weight = up_blocks_0_resnets_0_conv_shortcut_weight_to_fp16, x = input_239_cast);
            tensor<fp16, [2, 1280, 8, 8]> hidden_states_145_cast = add(x = x_5_cast, y = hidden_states_143_cast);
            tensor<bool, []> input_253_interleave_0 = const()[name = tensor<string, []>("input_253_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 2560, 8, 8]> input_253_cast_1 = concat(axis = var_4090, interleave = input_253_interleave_0, values = (hidden_states_145_cast, input_185_cast));
            tensor<int32, [5]> reshape_116_shape_0 = const()[name = tensor<string, []>("reshape_116_shape_0"), val = tensor<int32, [5]>([2, 32, 80, 8, 8])];
            tensor<fp16, [2, 32, 80, 8, 8]> reshape_116_cast = reshape(shape = reshape_116_shape_0, x = input_253_cast_1);
            tensor<int32, [3]> reduce_mean_87_axes_0 = const()[name = tensor<string, []>("reduce_mean_87_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_87_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_87_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_87_cast = reduce_mean(axes = reduce_mean_87_axes_0, keep_dims = reduce_mean_87_keep_dims_0, x = reshape_116_cast);
            tensor<fp16, [2, 32, 80, 8, 8]> sub_58_cast = sub(x = reshape_116_cast, y = reduce_mean_87_cast);
            tensor<fp16, [2, 32, 80, 8, 8]> square_29_cast = square(x = sub_58_cast);
            tensor<int32, [3]> reduce_mean_89_axes_0 = const()[name = tensor<string, []>("reduce_mean_89_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_89_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_89_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_89_cast = reduce_mean(axes = reduce_mean_89_axes_0, keep_dims = reduce_mean_89_keep_dims_0, x = square_29_cast);
            tensor<fp16, []> add_58_y_0_to_fp16 = const()[name = tensor<string, []>("add_58_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_58_cast = add(x = reduce_mean_89_cast, y = add_58_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_29_cast = sqrt(x = add_58_cast);
            tensor<fp16, [2, 32, 80, 8, 8]> real_div_29_cast = real_div(x = sub_58_cast, y = sqrt_29_cast);
            tensor<int32, [4]> reshape_117_shape_0 = const()[name = tensor<string, []>("reshape_117_shape_0"), val = tensor<int32, [4]>([2, 2560, 8, 8])];
            tensor<fp16, [2, 2560, 8, 8]> reshape_117_cast = reshape(shape = reshape_117_shape_0, x = real_div_29_cast);
            tensor<fp16, [2560]> add_59_mean_0_to_fp16 = const()[name = tensor<string, []>("add_59_mean_0_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(795890880)))];
            tensor<fp16, [2560]> add_59_variance_0_to_fp16 = const()[name = tensor<string, []>("add_59_variance_0_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(795896064)))];
            tensor<fp16, [2560]> add_59_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_59_gamma_0_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(795901248)))];
            tensor<fp16, [2560]> add_59_beta_0_to_fp16 = const()[name = tensor<string, []>("add_59_beta_0_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(795906432)))];
            tensor<fp16, []> add_59_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_59_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 2560, 8, 8]> add_59_cast = batch_norm(beta = add_59_beta_0_to_fp16, epsilon = add_59_epsilon_0_to_fp16, gamma = add_59_gamma_0_to_fp16, mean = add_59_mean_0_to_fp16, variance = add_59_variance_0_to_fp16, x = reshape_117_cast);
            tensor<fp16, [2, 2560, 8, 8]> input_257_cast = silu(x = add_59_cast);
            tensor<int32, [2]> var_4160 = const()[name = tensor<string, []>("op_4160"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4162 = const()[name = tensor<string, []>("op_4162"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_147_pad_type_0 = const()[name = tensor<string, []>("hidden_states_147_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_147_pad_0 = const()[name = tensor<string, []>("hidden_states_147_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 2560, 3, 3]> up_blocks_0_resnets_1_conv1_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_1_conv1_weight_to_fp16"), val = tensor<fp16, [1280, 2560, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(795911616)))];
            tensor<fp16, [1280]> up_blocks_0_resnets_1_conv1_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_1_conv1_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(854894080)))];
            tensor<fp16, [2, 1280, 8, 8]> hidden_states_147_cast = conv(bias = up_blocks_0_resnets_1_conv1_bias_to_fp16, dilations = var_4162, groups = var_4090, pad = hidden_states_147_pad_0, pad_type = hidden_states_147_pad_type_0, strides = var_4160, weight = up_blocks_0_resnets_1_conv1_weight_to_fp16, x = input_257_cast);
            tensor<int32, [2]> var_4168 = const()[name = tensor<string, []>("op_4168"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4170 = const()[name = tensor<string, []>("op_4170"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> temb_23_pad_type_0 = const()[name = tensor<string, []>("temb_23_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> temb_23_pad_0 = const()[name = tensor<string, []>("temb_23_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_0_resnets_1_time_emb_proj_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_1_time_emb_proj_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(854896704)))];
            tensor<fp16, [1280]> up_blocks_0_resnets_1_time_emb_proj_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_1_time_emb_proj_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(858173568)))];
            tensor<fp16, [2, 1280, 1, 1]> temb_23_cast = conv(bias = up_blocks_0_resnets_1_time_emb_proj_bias_to_fp16, dilations = var_4170, groups = var_4090, pad = temb_23_pad_0, pad_type = temb_23_pad_type_0, strides = var_4168, weight = up_blocks_0_resnets_1_time_emb_proj_weight_to_fp16, x = input_15_cast_1);
            tensor<fp16, [2, 1280, 8, 8]> input_261_cast = add(x = hidden_states_147_cast, y = temb_23_cast);
            tensor<int32, [5]> reshape_120_shape_0 = const()[name = tensor<string, []>("reshape_120_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 8, 8])];
            tensor<fp16, [2, 32, 40, 8, 8]> reshape_120_cast = reshape(shape = reshape_120_shape_0, x = input_261_cast);
            tensor<int32, [3]> reduce_mean_90_axes_0 = const()[name = tensor<string, []>("reduce_mean_90_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_90_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_90_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_90_cast = reduce_mean(axes = reduce_mean_90_axes_0, keep_dims = reduce_mean_90_keep_dims_0, x = reshape_120_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> sub_60_cast = sub(x = reshape_120_cast, y = reduce_mean_90_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> square_30_cast = square(x = sub_60_cast);
            tensor<int32, [3]> reduce_mean_92_axes_0 = const()[name = tensor<string, []>("reduce_mean_92_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_92_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_92_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_92_cast = reduce_mean(axes = reduce_mean_92_axes_0, keep_dims = reduce_mean_92_keep_dims_0, x = square_30_cast);
            tensor<fp16, []> add_60_y_0_to_fp16 = const()[name = tensor<string, []>("add_60_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_60_cast = add(x = reduce_mean_92_cast, y = add_60_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_30_cast = sqrt(x = add_60_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> real_div_30_cast = real_div(x = sub_60_cast, y = sqrt_30_cast);
            tensor<int32, [4]> reshape_121_shape_0 = const()[name = tensor<string, []>("reshape_121_shape_0"), val = tensor<int32, [4]>([2, 1280, 8, 8])];
            tensor<fp16, [2, 1280, 8, 8]> reshape_121_cast = reshape(shape = reshape_121_shape_0, x = real_div_30_cast);
            tensor<fp16, [1280]> add_61_mean_0_to_fp16 = const()[name = tensor<string, []>("add_61_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(858176192)))];
            tensor<fp16, [1280]> add_61_variance_0_to_fp16 = const()[name = tensor<string, []>("add_61_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(858178816)))];
            tensor<fp16, [1280]> add_61_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_61_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(858181440)))];
            tensor<fp16, [1280]> add_61_beta_0_to_fp16 = const()[name = tensor<string, []>("add_61_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(858184064)))];
            tensor<fp16, []> add_61_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_61_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 8, 8]> add_61_cast = batch_norm(beta = add_61_beta_0_to_fp16, epsilon = add_61_epsilon_0_to_fp16, gamma = add_61_gamma_0_to_fp16, mean = add_61_mean_0_to_fp16, variance = add_61_variance_0_to_fp16, x = reshape_121_cast);
            tensor<fp16, [2, 1280, 8, 8]> input_265_cast = silu(x = add_61_cast);
            tensor<int32, [2]> var_4180 = const()[name = tensor<string, []>("op_4180"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4182 = const()[name = tensor<string, []>("op_4182"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_149_pad_type_0 = const()[name = tensor<string, []>("hidden_states_149_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_149_pad_0 = const()[name = tensor<string, []>("hidden_states_149_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 1280, 3, 3]> up_blocks_0_resnets_1_conv2_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_1_conv2_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(858186688)))];
            tensor<fp16, [1280]> up_blocks_0_resnets_1_conv2_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_1_conv2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(887677952)))];
            tensor<fp16, [2, 1280, 8, 8]> hidden_states_149_cast_1 = conv(bias = up_blocks_0_resnets_1_conv2_bias_to_fp16, dilations = var_4182, groups = var_4090, pad = hidden_states_149_pad_0, pad_type = hidden_states_149_pad_type_0, strides = var_4180, weight = up_blocks_0_resnets_1_conv2_weight_to_fp16, x = input_265_cast);
            tensor<string, []> input_169_cast_dtype_0 = const()[name = tensor<string, []>("input_169_cast_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<string, []> input_253_cast_dtype_0 = const()[name = tensor<string, []>("input_253_cast_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<string, []> input_89_cast_dtype_0 = const()[name = tensor<string, []>("input_89_cast_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<string, []> input_171_cast_dtype_0 = const()[name = tensor<string, []>("input_171_cast_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<string, []> input_143_cast_dtype_0 = const()[name = tensor<string, []>("input_143_cast_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<string, []> input_35_cast_dtype_0 = const()[name = tensor<string, []>("input_35_cast_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<string, []> input_61_cast_dtype_0 = const()[name = tensor<string, []>("input_61_cast_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<string, []> input_7_cast_dtype_0 = const()[name = tensor<string, []>("input_7_cast_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<string, []> input_63_cast_dtype_0 = const()[name = tensor<string, []>("input_63_cast_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<string, []> input_115_cast_dtype_0 = const()[name = tensor<string, []>("input_115_cast_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<string, []> input_117_cast_dtype_0 = const()[name = tensor<string, []>("input_117_cast_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<string, []> hidden_states_149_cast_dtype_0 = const()[name = tensor<string, []>("hidden_states_149_cast_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<string, []> input_15_cast_dtype_0 = const()[name = tensor<string, []>("input_15_cast_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<fp32, [2, 1280, 1, 1]> input_15_cast = cast(dtype = input_15_cast_dtype_0, x = input_15_cast_1);
            tensor<fp32, [2, 1280, 8, 8]> hidden_states_149_cast = cast(dtype = hidden_states_149_cast_dtype_0, x = hidden_states_149_cast_1);
            tensor<fp32, [2, 640, 16, 16]> input_117_cast = cast(dtype = input_117_cast_dtype_0, x = input_117_cast_1);
            tensor<fp32, [2, 640, 32, 32]> input_115_cast = cast(dtype = input_115_cast_dtype_0, x = input_115_cast_1);
            tensor<fp32, [2, 320, 32, 32]> input_63_cast = cast(dtype = input_63_cast_dtype_0, x = input_63_cast_1);
            tensor<fp32, [2, 320, 64, 64]> input_7_cast = cast(dtype = input_7_cast_dtype_0, x = input_7_cast_1);
            tensor<fp32, [2, 320, 64, 64]> input_61_cast = cast(dtype = input_61_cast_dtype_0, x = input_61_cast_1);
            tensor<fp32, [2, 320, 64, 64]> input_35_cast = cast(dtype = input_35_cast_dtype_0, x = input_35_cast_1);
            tensor<fp32, [2, 1280, 16, 16]> input_143_cast = cast(dtype = input_143_cast_dtype_0, x = input_143_cast_1);
            tensor<fp32, [2, 1280, 8, 8]> input_171_cast = cast(dtype = input_171_cast_dtype_0, x = input_171_cast_1);
            tensor<fp32, [2, 640, 32, 32]> input_89_cast = cast(dtype = input_89_cast_dtype_0, x = input_89_cast_1);
            tensor<fp32, [2, 2560, 8, 8]> input_253_cast = cast(dtype = input_253_cast_dtype_0, x = input_253_cast_1);
            tensor<fp32, [2, 1280, 16, 16]> input_169_cast = cast(dtype = input_169_cast_dtype_0, x = input_169_cast_1);
        } -> (input_169_cast, input_253_cast, input_89_cast, input_171_cast, input_143_cast, input_35_cast, input_61_cast, input_7_cast, input_63_cast, input_115_cast, input_117_cast, hidden_states_149_cast, input_15_cast);
}