program(1.0)
[buildInfo = dict<tensor<string, []>, tensor<string, []>>({{"coremlc-component-MIL", "4.28.4"}, {"coremlc-version", "1429.0.0"}})]
{
    func main<ios16>(tensor<fp16, [2, 768, 1, 77]> encoder_hidden_states, tensor<fp32, [2, 1280, 8, 8]> hidden_states_149_cast, tensor<fp32, [2, 640, 32, 32]> input_115_cast, tensor<fp32, [2, 640, 16, 16]> input_117_cast, tensor<fp32, [2, 1280, 16, 16]> input_143_cast, tensor<fp32, [2, 1280, 1, 1]> input_15_cast, tensor<fp32, [2, 1280, 16, 16]> input_169_cast, tensor<fp32, [2, 1280, 8, 8]> input_171_cast, tensor<fp32, [2, 2560, 8, 8]> input_253_cast, tensor<fp32, [2, 320, 64, 64]> input_35_cast, tensor<fp32, [2, 320, 64, 64]> input_61_cast, tensor<fp32, [2, 320, 32, 32]> input_63_cast, tensor<fp32, [2, 320, 64, 64]> input_7_cast, tensor<fp32, [2, 640, 32, 32]> input_89_cast) {
            tensor<string, []> cast_13_dtype_0 = const()[name = tensor<string, []>("cast_13_dtype_0"), val = tensor<string, []>("fp16")];
            tensor<string, []> cast_2_dtype_0 = const()[name = tensor<string, []>("cast_2_dtype_0"), val = tensor<string, []>("fp16")];
            tensor<string, []> cast_12_dtype_0 = const()[name = tensor<string, []>("cast_12_dtype_0"), val = tensor<string, []>("fp16")];
            tensor<string, []> cast_3_dtype_0 = const()[name = tensor<string, []>("cast_3_dtype_0"), val = tensor<string, []>("fp16")];
            tensor<string, []> cast_6_dtype_0 = const()[name = tensor<string, []>("cast_6_dtype_0"), val = tensor<string, []>("fp16")];
            tensor<string, []> cast_8_dtype_0 = const()[name = tensor<string, []>("cast_8_dtype_0"), val = tensor<string, []>("fp16")];
            tensor<string, []> cast_4_dtype_0 = const()[name = tensor<string, []>("cast_4_dtype_0"), val = tensor<string, []>("fp16")];
            tensor<string, []> cast_9_dtype_0 = const()[name = tensor<string, []>("cast_9_dtype_0"), val = tensor<string, []>("fp16")];
            tensor<string, []> cast_14_dtype_0 = const()[name = tensor<string, []>("cast_14_dtype_0"), val = tensor<string, []>("fp16")];
            tensor<string, []> cast_7_dtype_0 = const()[name = tensor<string, []>("cast_7_dtype_0"), val = tensor<string, []>("fp16")];
            tensor<string, []> cast_10_dtype_0 = const()[name = tensor<string, []>("cast_10_dtype_0"), val = tensor<string, []>("fp16")];
            tensor<int32, []> var_4090 = const()[name = tensor<string, []>("op_4090"), val = tensor<int32, []>(1)];
            tensor<string, []> cast_11_dtype_0 = const()[name = tensor<string, []>("cast_11_dtype_0"), val = tensor<string, []>("fp16")];
            tensor<string, []> cast_5_dtype_0 = const()[name = tensor<string, []>("cast_5_dtype_0"), val = tensor<string, []>("fp16")];
            tensor<int32, [2]> var_4187 = const()[name = tensor<string, []>("op_4187"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4189 = const()[name = tensor<string, []>("op_4189"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_7_pad_type_0 = const()[name = tensor<string, []>("x_7_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_7_pad_0 = const()[name = tensor<string, []>("x_7_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 2560, 1, 1]> up_blocks_0_resnets_1_conv_shortcut_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_1_conv_shortcut_weight_to_fp16"), val = tensor<fp16, [1280, 2560, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(64)))];
            tensor<fp16, [1280]> up_blocks_0_resnets_1_conv_shortcut_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_1_conv_shortcut_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6553728)))];
            tensor<fp16, [2, 2560, 8, 8]> cast_2 = cast(dtype = cast_11_dtype_0, x = input_253_cast);
            tensor<fp16, [2, 1280, 8, 8]> x_7_cast = conv(bias = up_blocks_0_resnets_1_conv_shortcut_bias_to_fp16, dilations = var_4189, groups = var_4090, pad = x_7_pad_0, pad_type = x_7_pad_type_0, strides = var_4187, weight = up_blocks_0_resnets_1_conv_shortcut_weight_to_fp16, x = cast_2);
            tensor<fp16, [2, 1280, 8, 8]> cast_1 = cast(dtype = cast_5_dtype_0, x = hidden_states_149_cast);
            tensor<fp16, [2, 1280, 8, 8]> hidden_states_151_cast = add(x = x_7_cast, y = cast_1);
            tensor<bool, []> input_267_interleave_0 = const()[name = tensor<string, []>("input_267_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 1280, 8, 8]> cast_3 = cast(dtype = cast_10_dtype_0, x = input_171_cast);
            tensor<fp16, [2, 2560, 8, 8]> input_267_cast = concat(axis = var_4090, interleave = input_267_interleave_0, values = (hidden_states_151_cast, cast_3));
            tensor<int32, [5]> reshape_124_shape_0 = const()[name = tensor<string, []>("reshape_124_shape_0"), val = tensor<int32, [5]>([2, 32, 80, 8, 8])];
            tensor<fp16, [2, 32, 80, 8, 8]> reshape_124_cast = reshape(shape = reshape_124_shape_0, x = input_267_cast);
            tensor<int32, [3]> reduce_mean_93_axes_0 = const()[name = tensor<string, []>("reduce_mean_93_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_93_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_93_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_93_cast = reduce_mean(axes = reduce_mean_93_axes_0, keep_dims = reduce_mean_93_keep_dims_0, x = reshape_124_cast);
            tensor<fp16, [2, 32, 80, 8, 8]> sub_62_cast = sub(x = reshape_124_cast, y = reduce_mean_93_cast);
            tensor<fp16, [2, 32, 80, 8, 8]> square_31_cast = square(x = sub_62_cast);
            tensor<int32, [3]> reduce_mean_95_axes_0 = const()[name = tensor<string, []>("reduce_mean_95_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_95_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_95_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_95_cast = reduce_mean(axes = reduce_mean_95_axes_0, keep_dims = reduce_mean_95_keep_dims_0, x = square_31_cast);
            tensor<fp16, []> add_62_y_0_to_fp16 = const()[name = tensor<string, []>("add_62_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_62_cast = add(x = reduce_mean_95_cast, y = add_62_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_31_cast = sqrt(x = add_62_cast);
            tensor<fp16, [2, 32, 80, 8, 8]> real_div_31_cast = real_div(x = sub_62_cast, y = sqrt_31_cast);
            tensor<int32, [4]> reshape_125_shape_0 = const()[name = tensor<string, []>("reshape_125_shape_0"), val = tensor<int32, [4]>([2, 2560, 8, 8])];
            tensor<fp16, [2, 2560, 8, 8]> reshape_125_cast = reshape(shape = reshape_125_shape_0, x = real_div_31_cast);
            tensor<fp16, [2560]> add_63_mean_0_to_fp16 = const()[name = tensor<string, []>("add_63_mean_0_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6556352)))];
            tensor<fp16, [2560]> add_63_variance_0_to_fp16 = const()[name = tensor<string, []>("add_63_variance_0_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6561536)))];
            tensor<fp16, [2560]> add_63_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_63_gamma_0_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6566720)))];
            tensor<fp16, [2560]> add_63_beta_0_to_fp16 = const()[name = tensor<string, []>("add_63_beta_0_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6571904)))];
            tensor<fp16, []> add_63_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_63_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 2560, 8, 8]> add_63_cast = batch_norm(beta = add_63_beta_0_to_fp16, epsilon = add_63_epsilon_0_to_fp16, gamma = add_63_gamma_0_to_fp16, mean = add_63_mean_0_to_fp16, variance = add_63_variance_0_to_fp16, x = reshape_125_cast);
            tensor<fp16, [2, 2560, 8, 8]> input_271_cast = silu(x = add_63_cast);
            tensor<int32, [2]> var_4207 = const()[name = tensor<string, []>("op_4207"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4209 = const()[name = tensor<string, []>("op_4209"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_153_pad_type_0 = const()[name = tensor<string, []>("hidden_states_153_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_153_pad_0 = const()[name = tensor<string, []>("hidden_states_153_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 2560, 3, 3]> up_blocks_0_resnets_2_conv1_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_2_conv1_weight_to_fp16"), val = tensor<fp16, [1280, 2560, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6577088)))];
            tensor<fp16, [1280]> up_blocks_0_resnets_2_conv1_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_2_conv1_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(65559552)))];
            tensor<fp16, [2, 1280, 8, 8]> hidden_states_153_cast = conv(bias = up_blocks_0_resnets_2_conv1_bias_to_fp16, dilations = var_4209, groups = var_4090, pad = hidden_states_153_pad_0, pad_type = hidden_states_153_pad_type_0, strides = var_4207, weight = up_blocks_0_resnets_2_conv1_weight_to_fp16, x = input_271_cast);
            tensor<int32, [2]> var_4215 = const()[name = tensor<string, []>("op_4215"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4217 = const()[name = tensor<string, []>("op_4217"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> temb_25_pad_type_0 = const()[name = tensor<string, []>("temb_25_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> temb_25_pad_0 = const()[name = tensor<string, []>("temb_25_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_0_resnets_2_time_emb_proj_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_2_time_emb_proj_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(65562176)))];
            tensor<fp16, [1280]> up_blocks_0_resnets_2_time_emb_proj_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_2_time_emb_proj_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(68839040)))];
            tensor<fp16, [2, 1280, 1, 1]> cast_12 = cast(dtype = cast_2_dtype_0, x = input_15_cast);
            tensor<fp16, [2, 1280, 1, 1]> temb_25_cast = conv(bias = up_blocks_0_resnets_2_time_emb_proj_bias_to_fp16, dilations = var_4217, groups = var_4090, pad = temb_25_pad_0, pad_type = temb_25_pad_type_0, strides = var_4215, weight = up_blocks_0_resnets_2_time_emb_proj_weight_to_fp16, x = cast_12);
            tensor<fp16, [2, 1280, 8, 8]> input_275_cast = add(x = hidden_states_153_cast, y = temb_25_cast);
            tensor<int32, [5]> reshape_128_shape_0 = const()[name = tensor<string, []>("reshape_128_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 8, 8])];
            tensor<fp16, [2, 32, 40, 8, 8]> reshape_128_cast = reshape(shape = reshape_128_shape_0, x = input_275_cast);
            tensor<int32, [3]> reduce_mean_96_axes_0 = const()[name = tensor<string, []>("reduce_mean_96_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_96_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_96_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_96_cast = reduce_mean(axes = reduce_mean_96_axes_0, keep_dims = reduce_mean_96_keep_dims_0, x = reshape_128_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> sub_64_cast = sub(x = reshape_128_cast, y = reduce_mean_96_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> square_32_cast = square(x = sub_64_cast);
            tensor<int32, [3]> reduce_mean_98_axes_0 = const()[name = tensor<string, []>("reduce_mean_98_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_98_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_98_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_98_cast = reduce_mean(axes = reduce_mean_98_axes_0, keep_dims = reduce_mean_98_keep_dims_0, x = square_32_cast);
            tensor<fp16, []> add_64_y_0_to_fp16 = const()[name = tensor<string, []>("add_64_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_64_cast = add(x = reduce_mean_98_cast, y = add_64_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_32_cast = sqrt(x = add_64_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> real_div_32_cast = real_div(x = sub_64_cast, y = sqrt_32_cast);
            tensor<int32, [4]> reshape_129_shape_0 = const()[name = tensor<string, []>("reshape_129_shape_0"), val = tensor<int32, [4]>([2, 1280, 8, 8])];
            tensor<fp16, [2, 1280, 8, 8]> reshape_129_cast = reshape(shape = reshape_129_shape_0, x = real_div_32_cast);
            tensor<fp16, [1280]> add_65_mean_0_to_fp16 = const()[name = tensor<string, []>("add_65_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(68841664)))];
            tensor<fp16, [1280]> add_65_variance_0_to_fp16 = const()[name = tensor<string, []>("add_65_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(68844288)))];
            tensor<fp16, [1280]> add_65_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_65_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(68846912)))];
            tensor<fp16, [1280]> add_65_beta_0_to_fp16 = const()[name = tensor<string, []>("add_65_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(68849536)))];
            tensor<fp16, []> add_65_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_65_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 8, 8]> add_65_cast = batch_norm(beta = add_65_beta_0_to_fp16, epsilon = add_65_epsilon_0_to_fp16, gamma = add_65_gamma_0_to_fp16, mean = add_65_mean_0_to_fp16, variance = add_65_variance_0_to_fp16, x = reshape_129_cast);
            tensor<fp16, [2, 1280, 8, 8]> input_279_cast = silu(x = add_65_cast);
            tensor<int32, [2]> var_4227 = const()[name = tensor<string, []>("op_4227"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4229 = const()[name = tensor<string, []>("op_4229"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_155_pad_type_0 = const()[name = tensor<string, []>("hidden_states_155_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_155_pad_0 = const()[name = tensor<string, []>("hidden_states_155_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 1280, 3, 3]> up_blocks_0_resnets_2_conv2_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_2_conv2_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(68852160)))];
            tensor<fp16, [1280]> up_blocks_0_resnets_2_conv2_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_2_conv2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(98343424)))];
            tensor<fp16, [2, 1280, 8, 8]> hidden_states_155_cast = conv(bias = up_blocks_0_resnets_2_conv2_bias_to_fp16, dilations = var_4229, groups = var_4090, pad = hidden_states_155_pad_0, pad_type = hidden_states_155_pad_type_0, strides = var_4227, weight = up_blocks_0_resnets_2_conv2_weight_to_fp16, x = input_279_cast);
            tensor<int32, [2]> var_4234 = const()[name = tensor<string, []>("op_4234"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4236 = const()[name = tensor<string, []>("op_4236"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_9_pad_type_0 = const()[name = tensor<string, []>("x_9_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_9_pad_0 = const()[name = tensor<string, []>("x_9_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 2560, 1, 1]> up_blocks_0_resnets_2_conv_shortcut_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_2_conv_shortcut_weight_to_fp16"), val = tensor<fp16, [1280, 2560, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(98346048)))];
            tensor<fp16, [1280]> up_blocks_0_resnets_2_conv_shortcut_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_2_conv_shortcut_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(104899712)))];
            tensor<fp16, [2, 1280, 8, 8]> x_9_cast = conv(bias = up_blocks_0_resnets_2_conv_shortcut_bias_to_fp16, dilations = var_4236, groups = var_4090, pad = x_9_pad_0, pad_type = x_9_pad_type_0, strides = var_4234, weight = up_blocks_0_resnets_2_conv_shortcut_weight_to_fp16, x = input_267_cast);
            tensor<fp16, [2, 1280, 8, 8]> input_281_cast = add(x = x_9_cast, y = hidden_states_155_cast);
            tensor<fp32, []> input_283_scale_factor_height_0 = const()[name = tensor<string, []>("input_283_scale_factor_height_0"), val = tensor<fp32, []>(0x1p+1)];
            tensor<fp32, []> input_283_scale_factor_width_0 = const()[name = tensor<string, []>("input_283_scale_factor_width_0"), val = tensor<fp32, []>(0x1p+1)];
            tensor<fp16, [2, 1280, 16, 16]> input_283_cast = upsample_nearest_neighbor(scale_factor_height = input_283_scale_factor_height_0, scale_factor_width = input_283_scale_factor_width_0, x = input_281_cast);
            tensor<int32, [2]> var_4245 = const()[name = tensor<string, []>("op_4245"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4247 = const()[name = tensor<string, []>("op_4247"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_157_pad_type_0 = const()[name = tensor<string, []>("hidden_states_157_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_157_pad_0 = const()[name = tensor<string, []>("hidden_states_157_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 1280, 3, 3]> up_blocks_0_upsamplers_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_upsamplers_0_conv_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(104902336)))];
            tensor<fp16, [1280]> up_blocks_0_upsamplers_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_upsamplers_0_conv_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(134393600)))];
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_157_cast = conv(bias = up_blocks_0_upsamplers_0_conv_bias_to_fp16, dilations = var_4247, groups = var_4090, pad = hidden_states_157_pad_0, pad_type = hidden_states_157_pad_type_0, strides = var_4245, weight = up_blocks_0_upsamplers_0_conv_weight_to_fp16, x = input_283_cast);
            tensor<bool, []> var_4267 = const()[name = tensor<string, []>("op_4267"), val = tensor<bool, []>(true)];
            tensor<int32, []> var_4272 = const()[name = tensor<string, []>("op_4272"), val = tensor<int32, []>(1)];
            tensor<bool, []> input_285_interleave_0 = const()[name = tensor<string, []>("input_285_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 1280, 16, 16]> cast_4 = cast(dtype = cast_7_dtype_0, x = input_169_cast);
            tensor<fp16, [2, 2560, 16, 16]> input_285_cast = concat(axis = var_4272, interleave = input_285_interleave_0, values = (hidden_states_157_cast, cast_4));
            tensor<int32, [5]> reshape_132_shape_0 = const()[name = tensor<string, []>("reshape_132_shape_0"), val = tensor<int32, [5]>([2, 32, 80, 16, 16])];
            tensor<fp16, [2, 32, 80, 16, 16]> reshape_132_cast = reshape(shape = reshape_132_shape_0, x = input_285_cast);
            tensor<int32, [3]> reduce_mean_99_axes_0 = const()[name = tensor<string, []>("reduce_mean_99_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_99_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_99_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_99_cast = reduce_mean(axes = reduce_mean_99_axes_0, keep_dims = reduce_mean_99_keep_dims_0, x = reshape_132_cast);
            tensor<fp16, [2, 32, 80, 16, 16]> sub_66_cast = sub(x = reshape_132_cast, y = reduce_mean_99_cast);
            tensor<fp16, [2, 32, 80, 16, 16]> square_33_cast = square(x = sub_66_cast);
            tensor<int32, [3]> reduce_mean_101_axes_0 = const()[name = tensor<string, []>("reduce_mean_101_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_101_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_101_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_101_cast = reduce_mean(axes = reduce_mean_101_axes_0, keep_dims = reduce_mean_101_keep_dims_0, x = square_33_cast);
            tensor<fp16, []> add_66_y_0_to_fp16 = const()[name = tensor<string, []>("add_66_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_66_cast = add(x = reduce_mean_101_cast, y = add_66_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_33_cast = sqrt(x = add_66_cast);
            tensor<fp16, [2, 32, 80, 16, 16]> real_div_33_cast = real_div(x = sub_66_cast, y = sqrt_33_cast);
            tensor<int32, [4]> reshape_133_shape_0 = const()[name = tensor<string, []>("reshape_133_shape_0"), val = tensor<int32, [4]>([2, 2560, 16, 16])];
            tensor<fp16, [2, 2560, 16, 16]> reshape_133_cast = reshape(shape = reshape_133_shape_0, x = real_div_33_cast);
            tensor<fp16, [2560]> add_67_mean_0_to_fp16 = const()[name = tensor<string, []>("add_67_mean_0_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(134396224)))];
            tensor<fp16, [2560]> add_67_variance_0_to_fp16 = const()[name = tensor<string, []>("add_67_variance_0_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(134401408)))];
            tensor<fp16, [2560]> add_67_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_67_gamma_0_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(134406592)))];
            tensor<fp16, [2560]> add_67_beta_0_to_fp16 = const()[name = tensor<string, []>("add_67_beta_0_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(134411776)))];
            tensor<fp16, []> add_67_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_67_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 2560, 16, 16]> add_67_cast = batch_norm(beta = add_67_beta_0_to_fp16, epsilon = add_67_epsilon_0_to_fp16, gamma = add_67_gamma_0_to_fp16, mean = add_67_mean_0_to_fp16, variance = add_67_variance_0_to_fp16, x = reshape_133_cast);
            tensor<fp16, [2, 2560, 16, 16]> input_289_cast = silu(x = add_67_cast);
            tensor<int32, [2]> var_4301 = const()[name = tensor<string, []>("op_4301"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4303 = const()[name = tensor<string, []>("op_4303"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_159_pad_type_0 = const()[name = tensor<string, []>("hidden_states_159_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_159_pad_0 = const()[name = tensor<string, []>("hidden_states_159_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 2560, 3, 3]> up_blocks_1_resnets_0_conv1_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_0_conv1_weight_to_fp16"), val = tensor<fp16, [1280, 2560, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(134416960)))];
            tensor<fp16, [1280]> up_blocks_1_resnets_0_conv1_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_0_conv1_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(193399424)))];
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_159_cast = conv(bias = up_blocks_1_resnets_0_conv1_bias_to_fp16, dilations = var_4303, groups = var_4272, pad = hidden_states_159_pad_0, pad_type = hidden_states_159_pad_type_0, strides = var_4301, weight = up_blocks_1_resnets_0_conv1_weight_to_fp16, x = input_289_cast);
            tensor<int32, [2]> var_4309 = const()[name = tensor<string, []>("op_4309"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4311 = const()[name = tensor<string, []>("op_4311"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> temb_27_pad_type_0 = const()[name = tensor<string, []>("temb_27_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> temb_27_pad_0 = const()[name = tensor<string, []>("temb_27_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_resnets_0_time_emb_proj_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_0_time_emb_proj_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(193402048)))];
            tensor<fp16, [1280]> up_blocks_1_resnets_0_time_emb_proj_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_0_time_emb_proj_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(196678912)))];
            tensor<fp16, [2, 1280, 1, 1]> temb_27_cast = conv(bias = up_blocks_1_resnets_0_time_emb_proj_bias_to_fp16, dilations = var_4311, groups = var_4272, pad = temb_27_pad_0, pad_type = temb_27_pad_type_0, strides = var_4309, weight = up_blocks_1_resnets_0_time_emb_proj_weight_to_fp16, x = cast_12);
            tensor<fp16, [2, 1280, 16, 16]> input_293_cast = add(x = hidden_states_159_cast, y = temb_27_cast);
            tensor<int32, [5]> reshape_136_shape_0 = const()[name = tensor<string, []>("reshape_136_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 16, 16])];
            tensor<fp16, [2, 32, 40, 16, 16]> reshape_136_cast = reshape(shape = reshape_136_shape_0, x = input_293_cast);
            tensor<int32, [3]> reduce_mean_102_axes_0 = const()[name = tensor<string, []>("reduce_mean_102_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_102_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_102_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_102_cast = reduce_mean(axes = reduce_mean_102_axes_0, keep_dims = reduce_mean_102_keep_dims_0, x = reshape_136_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> sub_68_cast = sub(x = reshape_136_cast, y = reduce_mean_102_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> square_34_cast = square(x = sub_68_cast);
            tensor<int32, [3]> reduce_mean_104_axes_0 = const()[name = tensor<string, []>("reduce_mean_104_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_104_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_104_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_104_cast = reduce_mean(axes = reduce_mean_104_axes_0, keep_dims = reduce_mean_104_keep_dims_0, x = square_34_cast);
            tensor<fp16, []> add_68_y_0_to_fp16 = const()[name = tensor<string, []>("add_68_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_68_cast = add(x = reduce_mean_104_cast, y = add_68_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_34_cast = sqrt(x = add_68_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> real_div_34_cast = real_div(x = sub_68_cast, y = sqrt_34_cast);
            tensor<int32, [4]> reshape_137_shape_0 = const()[name = tensor<string, []>("reshape_137_shape_0"), val = tensor<int32, [4]>([2, 1280, 16, 16])];
            tensor<fp16, [2, 1280, 16, 16]> reshape_137_cast = reshape(shape = reshape_137_shape_0, x = real_div_34_cast);
            tensor<fp16, [1280]> add_69_mean_0_to_fp16 = const()[name = tensor<string, []>("add_69_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(196681536)))];
            tensor<fp16, [1280]> add_69_variance_0_to_fp16 = const()[name = tensor<string, []>("add_69_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(196684160)))];
            tensor<fp16, [1280]> add_69_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_69_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(196686784)))];
            tensor<fp16, [1280]> add_69_beta_0_to_fp16 = const()[name = tensor<string, []>("add_69_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(196689408)))];
            tensor<fp16, []> add_69_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_69_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 16, 16]> add_69_cast = batch_norm(beta = add_69_beta_0_to_fp16, epsilon = add_69_epsilon_0_to_fp16, gamma = add_69_gamma_0_to_fp16, mean = add_69_mean_0_to_fp16, variance = add_69_variance_0_to_fp16, x = reshape_137_cast);
            tensor<fp16, [2, 1280, 16, 16]> input_297_cast = silu(x = add_69_cast);
            tensor<int32, [2]> var_4321 = const()[name = tensor<string, []>("op_4321"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4323 = const()[name = tensor<string, []>("op_4323"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_161_pad_type_0 = const()[name = tensor<string, []>("hidden_states_161_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_161_pad_0 = const()[name = tensor<string, []>("hidden_states_161_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 1280, 3, 3]> up_blocks_1_resnets_0_conv2_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_0_conv2_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(196692032)))];
            tensor<fp16, [1280]> up_blocks_1_resnets_0_conv2_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_0_conv2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(226183296)))];
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_161_cast = conv(bias = up_blocks_1_resnets_0_conv2_bias_to_fp16, dilations = var_4323, groups = var_4272, pad = hidden_states_161_pad_0, pad_type = hidden_states_161_pad_type_0, strides = var_4321, weight = up_blocks_1_resnets_0_conv2_weight_to_fp16, x = input_297_cast);
            tensor<int32, [2]> var_4328 = const()[name = tensor<string, []>("op_4328"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4330 = const()[name = tensor<string, []>("op_4330"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_11_pad_type_0 = const()[name = tensor<string, []>("x_11_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_11_pad_0 = const()[name = tensor<string, []>("x_11_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 2560, 1, 1]> up_blocks_1_resnets_0_conv_shortcut_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_0_conv_shortcut_weight_to_fp16"), val = tensor<fp16, [1280, 2560, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(226185920)))];
            tensor<fp16, [1280]> up_blocks_1_resnets_0_conv_shortcut_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_0_conv_shortcut_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(232739584)))];
            tensor<fp16, [2, 1280, 16, 16]> x_11_cast = conv(bias = up_blocks_1_resnets_0_conv_shortcut_bias_to_fp16, dilations = var_4330, groups = var_4272, pad = x_11_pad_0, pad_type = x_11_pad_type_0, strides = var_4328, weight = up_blocks_1_resnets_0_conv_shortcut_weight_to_fp16, x = input_285_cast);
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_163_cast = add(x = x_11_cast, y = hidden_states_161_cast);
            tensor<int32, [5]> reshape_140_shape_0 = const()[name = tensor<string, []>("reshape_140_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 16, 16])];
            tensor<fp16, [2, 32, 40, 16, 16]> reshape_140_cast = reshape(shape = reshape_140_shape_0, x = hidden_states_163_cast);
            tensor<int32, [3]> reduce_mean_105_axes_0 = const()[name = tensor<string, []>("reduce_mean_105_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_105_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_105_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_105_cast = reduce_mean(axes = reduce_mean_105_axes_0, keep_dims = reduce_mean_105_keep_dims_0, x = reshape_140_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> sub_70_cast = sub(x = reshape_140_cast, y = reduce_mean_105_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> square_35_cast = square(x = sub_70_cast);
            tensor<int32, [3]> reduce_mean_107_axes_0 = const()[name = tensor<string, []>("reduce_mean_107_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_107_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_107_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_107_cast = reduce_mean(axes = reduce_mean_107_axes_0, keep_dims = reduce_mean_107_keep_dims_0, x = square_35_cast);
            tensor<fp16, []> add_70_y_0_to_fp16 = const()[name = tensor<string, []>("add_70_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_70_cast = add(x = reduce_mean_107_cast, y = add_70_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_35_cast = sqrt(x = add_70_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> real_div_35_cast = real_div(x = sub_70_cast, y = sqrt_35_cast);
            tensor<int32, [4]> reshape_141_shape_0 = const()[name = tensor<string, []>("reshape_141_shape_0"), val = tensor<int32, [4]>([2, 1280, 16, 16])];
            tensor<fp16, [2, 1280, 16, 16]> reshape_141_cast = reshape(shape = reshape_141_shape_0, x = real_div_35_cast);
            tensor<fp16, [1280]> add_71_mean_0_to_fp16 = const()[name = tensor<string, []>("add_71_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(232742208)))];
            tensor<fp16, [1280]> add_71_variance_0_to_fp16 = const()[name = tensor<string, []>("add_71_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(232744832)))];
            tensor<fp16, [1280]> add_71_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_71_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(232747456)))];
            tensor<fp16, [1280]> add_71_beta_0_to_fp16 = const()[name = tensor<string, []>("add_71_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(232750080)))];
            tensor<fp16, []> add_71_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_71_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 16, 16]> add_71_cast = batch_norm(beta = add_71_beta_0_to_fp16, epsilon = add_71_epsilon_0_to_fp16, gamma = add_71_gamma_0_to_fp16, mean = add_71_mean_0_to_fp16, variance = add_71_variance_0_to_fp16, x = reshape_141_cast);
            tensor<int32, [2]> var_4350 = const()[name = tensor<string, []>("op_4350"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4352 = const()[name = tensor<string, []>("op_4352"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_165_pad_type_0 = const()[name = tensor<string, []>("hidden_states_165_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_165_pad_0 = const()[name = tensor<string, []>("hidden_states_165_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_0_proj_in_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_0_proj_in_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(232752704)))];
            tensor<fp16, [1280]> up_blocks_1_attentions_0_proj_in_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_0_proj_in_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(236029568)))];
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_165_cast = conv(bias = up_blocks_1_attentions_0_proj_in_bias_to_fp16, dilations = var_4352, groups = var_4272, pad = hidden_states_165_pad_0, pad_type = hidden_states_165_pad_type_0, strides = var_4350, weight = up_blocks_1_attentions_0_proj_in_weight_to_fp16, x = add_71_cast);
            tensor<int32, [4]> var_4357 = const()[name = tensor<string, []>("op_4357"), val = tensor<int32, [4]>([2, 1280, 1, 256])];
            tensor<fp16, [2, 1280, 1, 256]> inputs_43_cast = reshape(shape = var_4357, x = hidden_states_165_cast);
            tensor<int32, [1]> var_4367 = const()[name = tensor<string, []>("op_4367"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> channels_mean_43_cast = reduce_mean(axes = var_4367, keep_dims = var_4267, x = inputs_43_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_43_cast = sub(x = inputs_43_cast, y = channels_mean_43_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_sq_43_cast = mul(x = zero_mean_43_cast, y = zero_mean_43_cast);
            tensor<int32, [1]> var_4371 = const()[name = tensor<string, []>("op_4371"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> var_4372_cast = reduce_mean(axes = var_4371, keep_dims = var_4267, x = zero_mean_sq_43_cast);
            tensor<fp16, []> var_4373_to_fp16 = const()[name = tensor<string, []>("op_4373_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 256]> var_4374_cast = add(x = var_4372_cast, y = var_4373_to_fp16);
            tensor<fp16, []> denom_43_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_43_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 256]> denom_43_cast = rsqrt(epsilon = denom_43_epsilon_0_to_fp16, x = var_4374_cast);
            tensor<fp16, [2, 1280, 1, 256]> out_43_cast = mul(x = zero_mean_43_cast, y = denom_43_cast);
            tensor<fp16, [1, 1280, 1, 1]> var_4378_to_fp16 = const()[name = tensor<string, []>("op_4378_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(236032192)))];
            tensor<fp16, [2, 1280, 1, 256]> var_4379_cast = add(x = out_43_cast, y = var_4378_to_fp16);
            tensor<fp16, [1, 1280, 1, 1]> var_4381_to_fp16 = const()[name = tensor<string, []>("op_4381_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(236034816)))];
            tensor<fp16, [2, 1280, 1, 256]> hidden_states_167_cast = mul(x = var_4379_cast, y = var_4381_to_fp16);
            tensor<int32, [2]> var_4388 = const()[name = tensor<string, []>("op_4388"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4390 = const()[name = tensor<string, []>("op_4390"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_29_pad_type_0 = const()[name = tensor<string, []>("q_29_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_29_pad_0 = const()[name = tensor<string, []>("q_29_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_0_transformer_blocks_0_attn1_to_q_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_0_transformer_blocks_0_attn1_to_q_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(236037440)))];
            tensor<fp16, [2, 1280, 1, 256]> q_29_cast = conv(dilations = var_4390, groups = var_4272, pad = q_29_pad_0, pad_type = q_29_pad_type_0, strides = var_4388, weight = up_blocks_1_attentions_0_transformer_blocks_0_attn1_to_q_weight_to_fp16, x = hidden_states_167_cast);
            tensor<int32, [2]> var_4394 = const()[name = tensor<string, []>("op_4394"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4396 = const()[name = tensor<string, []>("op_4396"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_57_pad_type_0 = const()[name = tensor<string, []>("k_57_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_57_pad_0 = const()[name = tensor<string, []>("k_57_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_0_transformer_blocks_0_attn1_to_k_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_0_transformer_blocks_0_attn1_to_k_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(239314304)))];
            tensor<fp16, [2, 1280, 1, 256]> k_57_cast = conv(dilations = var_4396, groups = var_4272, pad = k_57_pad_0, pad_type = k_57_pad_type_0, strides = var_4394, weight = up_blocks_1_attentions_0_transformer_blocks_0_attn1_to_k_weight_to_fp16, x = hidden_states_167_cast);
            tensor<int32, [2]> var_4400 = const()[name = tensor<string, []>("op_4400"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4402 = const()[name = tensor<string, []>("op_4402"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_29_pad_type_0 = const()[name = tensor<string, []>("v_29_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_29_pad_0 = const()[name = tensor<string, []>("v_29_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_0_transformer_blocks_0_attn1_to_v_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_0_transformer_blocks_0_attn1_to_v_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(242591168)))];
            tensor<fp16, [2, 1280, 1, 256]> v_29_cast = conv(dilations = var_4402, groups = var_4272, pad = v_29_pad_0, pad_type = v_29_pad_type_0, strides = var_4400, weight = up_blocks_1_attentions_0_transformer_blocks_0_attn1_to_v_weight_to_fp16, x = hidden_states_167_cast);
            tensor<int32, [4]> var_4406_begin_0 = const()[name = tensor<string, []>("op_4406_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_4406_end_0 = const()[name = tensor<string, []>("op_4406_end_0"), val = tensor<int32, [4]>([2, 160, 1, 256])];
            tensor<bool, [4]> var_4406_end_mask_0 = const()[name = tensor<string, []>("op_4406_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_4406_cast = slice_by_index(begin = var_4406_begin_0, end = var_4406_end_0, end_mask = var_4406_end_mask_0, x = q_29_cast);
            tensor<int32, [4]> var_4410_begin_0 = const()[name = tensor<string, []>("op_4410_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_4410_end_0 = const()[name = tensor<string, []>("op_4410_end_0"), val = tensor<int32, [4]>([2, 320, 1, 256])];
            tensor<bool, [4]> var_4410_end_mask_0 = const()[name = tensor<string, []>("op_4410_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_4410_cast = slice_by_index(begin = var_4410_begin_0, end = var_4410_end_0, end_mask = var_4410_end_mask_0, x = q_29_cast);
            tensor<int32, [4]> var_4414_begin_0 = const()[name = tensor<string, []>("op_4414_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_4414_end_0 = const()[name = tensor<string, []>("op_4414_end_0"), val = tensor<int32, [4]>([2, 480, 1, 256])];
            tensor<bool, [4]> var_4414_end_mask_0 = const()[name = tensor<string, []>("op_4414_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_4414_cast = slice_by_index(begin = var_4414_begin_0, end = var_4414_end_0, end_mask = var_4414_end_mask_0, x = q_29_cast);
            tensor<int32, [4]> var_4418_begin_0 = const()[name = tensor<string, []>("op_4418_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_4418_end_0 = const()[name = tensor<string, []>("op_4418_end_0"), val = tensor<int32, [4]>([2, 640, 1, 256])];
            tensor<bool, [4]> var_4418_end_mask_0 = const()[name = tensor<string, []>("op_4418_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_4418_cast = slice_by_index(begin = var_4418_begin_0, end = var_4418_end_0, end_mask = var_4418_end_mask_0, x = q_29_cast);
            tensor<int32, [4]> var_4422_begin_0 = const()[name = tensor<string, []>("op_4422_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_4422_end_0 = const()[name = tensor<string, []>("op_4422_end_0"), val = tensor<int32, [4]>([2, 800, 1, 256])];
            tensor<bool, [4]> var_4422_end_mask_0 = const()[name = tensor<string, []>("op_4422_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_4422_cast = slice_by_index(begin = var_4422_begin_0, end = var_4422_end_0, end_mask = var_4422_end_mask_0, x = q_29_cast);
            tensor<int32, [4]> var_4426_begin_0 = const()[name = tensor<string, []>("op_4426_begin_0"), val = tensor<int32, [4]>([0, 800, 0, 0])];
            tensor<int32, [4]> var_4426_end_0 = const()[name = tensor<string, []>("op_4426_end_0"), val = tensor<int32, [4]>([2, 960, 1, 256])];
            tensor<bool, [4]> var_4426_end_mask_0 = const()[name = tensor<string, []>("op_4426_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_4426_cast = slice_by_index(begin = var_4426_begin_0, end = var_4426_end_0, end_mask = var_4426_end_mask_0, x = q_29_cast);
            tensor<int32, [4]> var_4430_begin_0 = const()[name = tensor<string, []>("op_4430_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_4430_end_0 = const()[name = tensor<string, []>("op_4430_end_0"), val = tensor<int32, [4]>([2, 1120, 1, 256])];
            tensor<bool, [4]> var_4430_end_mask_0 = const()[name = tensor<string, []>("op_4430_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_4430_cast = slice_by_index(begin = var_4430_begin_0, end = var_4430_end_0, end_mask = var_4430_end_mask_0, x = q_29_cast);
            tensor<int32, [4]> var_4434_begin_0 = const()[name = tensor<string, []>("op_4434_begin_0"), val = tensor<int32, [4]>([0, 1120, 0, 0])];
            tensor<int32, [4]> var_4434_end_0 = const()[name = tensor<string, []>("op_4434_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 256])];
            tensor<bool, [4]> var_4434_end_mask_0 = const()[name = tensor<string, []>("op_4434_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_4434_cast = slice_by_index(begin = var_4434_begin_0, end = var_4434_end_0, end_mask = var_4434_end_mask_0, x = q_29_cast);
            tensor<int32, [4]> k_59_perm_0 = const()[name = tensor<string, []>("k_59_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_4441_begin_0 = const()[name = tensor<string, []>("op_4441_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_4441_end_0 = const()[name = tensor<string, []>("op_4441_end_0"), val = tensor<int32, [4]>([2, 256, 1, 160])];
            tensor<bool, [4]> var_4441_end_mask_0 = const()[name = tensor<string, []>("op_4441_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 1280]> transpose_17 = transpose(perm = k_59_perm_0, x = k_57_cast);
            tensor<fp16, [2, 256, 1, 160]> var_4441_cast = slice_by_index(begin = var_4441_begin_0, end = var_4441_end_0, end_mask = var_4441_end_mask_0, x = transpose_17);
            tensor<int32, [4]> var_4445_begin_0 = const()[name = tensor<string, []>("op_4445_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 160])];
            tensor<int32, [4]> var_4445_end_0 = const()[name = tensor<string, []>("op_4445_end_0"), val = tensor<int32, [4]>([2, 256, 1, 320])];
            tensor<bool, [4]> var_4445_end_mask_0 = const()[name = tensor<string, []>("op_4445_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_4445_cast = slice_by_index(begin = var_4445_begin_0, end = var_4445_end_0, end_mask = var_4445_end_mask_0, x = transpose_17);
            tensor<int32, [4]> var_4449_begin_0 = const()[name = tensor<string, []>("op_4449_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_4449_end_0 = const()[name = tensor<string, []>("op_4449_end_0"), val = tensor<int32, [4]>([2, 256, 1, 480])];
            tensor<bool, [4]> var_4449_end_mask_0 = const()[name = tensor<string, []>("op_4449_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_4449_cast = slice_by_index(begin = var_4449_begin_0, end = var_4449_end_0, end_mask = var_4449_end_mask_0, x = transpose_17);
            tensor<int32, [4]> var_4453_begin_0 = const()[name = tensor<string, []>("op_4453_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 480])];
            tensor<int32, [4]> var_4453_end_0 = const()[name = tensor<string, []>("op_4453_end_0"), val = tensor<int32, [4]>([2, 256, 1, 640])];
            tensor<bool, [4]> var_4453_end_mask_0 = const()[name = tensor<string, []>("op_4453_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_4453_cast = slice_by_index(begin = var_4453_begin_0, end = var_4453_end_0, end_mask = var_4453_end_mask_0, x = transpose_17);
            tensor<int32, [4]> var_4457_begin_0 = const()[name = tensor<string, []>("op_4457_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 640])];
            tensor<int32, [4]> var_4457_end_0 = const()[name = tensor<string, []>("op_4457_end_0"), val = tensor<int32, [4]>([2, 256, 1, 800])];
            tensor<bool, [4]> var_4457_end_mask_0 = const()[name = tensor<string, []>("op_4457_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_4457_cast = slice_by_index(begin = var_4457_begin_0, end = var_4457_end_0, end_mask = var_4457_end_mask_0, x = transpose_17);
            tensor<int32, [4]> var_4461_begin_0 = const()[name = tensor<string, []>("op_4461_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 800])];
            tensor<int32, [4]> var_4461_end_0 = const()[name = tensor<string, []>("op_4461_end_0"), val = tensor<int32, [4]>([2, 256, 1, 960])];
            tensor<bool, [4]> var_4461_end_mask_0 = const()[name = tensor<string, []>("op_4461_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_4461_cast = slice_by_index(begin = var_4461_begin_0, end = var_4461_end_0, end_mask = var_4461_end_mask_0, x = transpose_17);
            tensor<int32, [4]> var_4465_begin_0 = const()[name = tensor<string, []>("op_4465_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 960])];
            tensor<int32, [4]> var_4465_end_0 = const()[name = tensor<string, []>("op_4465_end_0"), val = tensor<int32, [4]>([2, 256, 1, 1120])];
            tensor<bool, [4]> var_4465_end_mask_0 = const()[name = tensor<string, []>("op_4465_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_4465_cast = slice_by_index(begin = var_4465_begin_0, end = var_4465_end_0, end_mask = var_4465_end_mask_0, x = transpose_17);
            tensor<int32, [4]> var_4469_begin_0 = const()[name = tensor<string, []>("op_4469_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1120])];
            tensor<int32, [4]> var_4469_end_0 = const()[name = tensor<string, []>("op_4469_end_0"), val = tensor<int32, [4]>([2, 256, 1, 1280])];
            tensor<bool, [4]> var_4469_end_mask_0 = const()[name = tensor<string, []>("op_4469_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_4469_cast = slice_by_index(begin = var_4469_begin_0, end = var_4469_end_0, end_mask = var_4469_end_mask_0, x = transpose_17);
            tensor<int32, [4]> var_4471_begin_0 = const()[name = tensor<string, []>("op_4471_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_4471_end_0 = const()[name = tensor<string, []>("op_4471_end_0"), val = tensor<int32, [4]>([2, 160, 1, 256])];
            tensor<bool, [4]> var_4471_end_mask_0 = const()[name = tensor<string, []>("op_4471_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_4471_cast = slice_by_index(begin = var_4471_begin_0, end = var_4471_end_0, end_mask = var_4471_end_mask_0, x = v_29_cast);
            tensor<int32, [4]> var_4475_begin_0 = const()[name = tensor<string, []>("op_4475_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_4475_end_0 = const()[name = tensor<string, []>("op_4475_end_0"), val = tensor<int32, [4]>([2, 320, 1, 256])];
            tensor<bool, [4]> var_4475_end_mask_0 = const()[name = tensor<string, []>("op_4475_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_4475_cast = slice_by_index(begin = var_4475_begin_0, end = var_4475_end_0, end_mask = var_4475_end_mask_0, x = v_29_cast);
            tensor<int32, [4]> var_4479_begin_0 = const()[name = tensor<string, []>("op_4479_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_4479_end_0 = const()[name = tensor<string, []>("op_4479_end_0"), val = tensor<int32, [4]>([2, 480, 1, 256])];
            tensor<bool, [4]> var_4479_end_mask_0 = const()[name = tensor<string, []>("op_4479_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_4479_cast = slice_by_index(begin = var_4479_begin_0, end = var_4479_end_0, end_mask = var_4479_end_mask_0, x = v_29_cast);
            tensor<int32, [4]> var_4483_begin_0 = const()[name = tensor<string, []>("op_4483_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_4483_end_0 = const()[name = tensor<string, []>("op_4483_end_0"), val = tensor<int32, [4]>([2, 640, 1, 256])];
            tensor<bool, [4]> var_4483_end_mask_0 = const()[name = tensor<string, []>("op_4483_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_4483_cast = slice_by_index(begin = var_4483_begin_0, end = var_4483_end_0, end_mask = var_4483_end_mask_0, x = v_29_cast);
            tensor<int32, [4]> var_4487_begin_0 = const()[name = tensor<string, []>("op_4487_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_4487_end_0 = const()[name = tensor<string, []>("op_4487_end_0"), val = tensor<int32, [4]>([2, 800, 1, 256])];
            tensor<bool, [4]> var_4487_end_mask_0 = const()[name = tensor<string, []>("op_4487_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_4487_cast = slice_by_index(begin = var_4487_begin_0, end = var_4487_end_0, end_mask = var_4487_end_mask_0, x = v_29_cast);
            tensor<int32, [4]> var_4491_begin_0 = const()[name = tensor<string, []>("op_4491_begin_0"), val = tensor<int32, [4]>([0, 800, 0, 0])];
            tensor<int32, [4]> var_4491_end_0 = const()[name = tensor<string, []>("op_4491_end_0"), val = tensor<int32, [4]>([2, 960, 1, 256])];
            tensor<bool, [4]> var_4491_end_mask_0 = const()[name = tensor<string, []>("op_4491_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_4491_cast = slice_by_index(begin = var_4491_begin_0, end = var_4491_end_0, end_mask = var_4491_end_mask_0, x = v_29_cast);
            tensor<int32, [4]> var_4495_begin_0 = const()[name = tensor<string, []>("op_4495_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_4495_end_0 = const()[name = tensor<string, []>("op_4495_end_0"), val = tensor<int32, [4]>([2, 1120, 1, 256])];
            tensor<bool, [4]> var_4495_end_mask_0 = const()[name = tensor<string, []>("op_4495_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_4495_cast = slice_by_index(begin = var_4495_begin_0, end = var_4495_end_0, end_mask = var_4495_end_mask_0, x = v_29_cast);
            tensor<int32, [4]> var_4499_begin_0 = const()[name = tensor<string, []>("op_4499_begin_0"), val = tensor<int32, [4]>([0, 1120, 0, 0])];
            tensor<int32, [4]> var_4499_end_0 = const()[name = tensor<string, []>("op_4499_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 256])];
            tensor<bool, [4]> var_4499_end_mask_0 = const()[name = tensor<string, []>("op_4499_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_4499_cast = slice_by_index(begin = var_4499_begin_0, end = var_4499_end_0, end_mask = var_4499_end_mask_0, x = v_29_cast);
            tensor<string, []> var_4503_equation_0 = const()[name = tensor<string, []>("op_4503_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_4503_cast = einsum(equation = var_4503_equation_0, values = (var_4441_cast, var_4406_cast));
            tensor<fp16, []> var_4504_to_fp16 = const()[name = tensor<string, []>("op_4504_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_225_cast = mul(x = var_4503_cast, y = var_4504_to_fp16);
            tensor<string, []> var_4507_equation_0 = const()[name = tensor<string, []>("op_4507_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_4507_cast = einsum(equation = var_4507_equation_0, values = (var_4445_cast, var_4410_cast));
            tensor<fp16, []> var_4508_to_fp16 = const()[name = tensor<string, []>("op_4508_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_227_cast = mul(x = var_4507_cast, y = var_4508_to_fp16);
            tensor<string, []> var_4511_equation_0 = const()[name = tensor<string, []>("op_4511_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_4511_cast = einsum(equation = var_4511_equation_0, values = (var_4449_cast, var_4414_cast));
            tensor<fp16, []> var_4512_to_fp16 = const()[name = tensor<string, []>("op_4512_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_229_cast = mul(x = var_4511_cast, y = var_4512_to_fp16);
            tensor<string, []> var_4515_equation_0 = const()[name = tensor<string, []>("op_4515_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_4515_cast = einsum(equation = var_4515_equation_0, values = (var_4453_cast, var_4418_cast));
            tensor<fp16, []> var_4516_to_fp16 = const()[name = tensor<string, []>("op_4516_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_231_cast = mul(x = var_4515_cast, y = var_4516_to_fp16);
            tensor<string, []> var_4519_equation_0 = const()[name = tensor<string, []>("op_4519_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_4519_cast = einsum(equation = var_4519_equation_0, values = (var_4457_cast, var_4422_cast));
            tensor<fp16, []> var_4520_to_fp16 = const()[name = tensor<string, []>("op_4520_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_233_cast = mul(x = var_4519_cast, y = var_4520_to_fp16);
            tensor<string, []> var_4523_equation_0 = const()[name = tensor<string, []>("op_4523_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_4523_cast = einsum(equation = var_4523_equation_0, values = (var_4461_cast, var_4426_cast));
            tensor<fp16, []> var_4524_to_fp16 = const()[name = tensor<string, []>("op_4524_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_235_cast = mul(x = var_4523_cast, y = var_4524_to_fp16);
            tensor<string, []> var_4527_equation_0 = const()[name = tensor<string, []>("op_4527_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_4527_cast = einsum(equation = var_4527_equation_0, values = (var_4465_cast, var_4430_cast));
            tensor<fp16, []> var_4528_to_fp16 = const()[name = tensor<string, []>("op_4528_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_237_cast = mul(x = var_4527_cast, y = var_4528_to_fp16);
            tensor<string, []> var_4531_equation_0 = const()[name = tensor<string, []>("op_4531_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_4531_cast = einsum(equation = var_4531_equation_0, values = (var_4469_cast, var_4434_cast));
            tensor<fp16, []> var_4532_to_fp16 = const()[name = tensor<string, []>("op_4532_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_239_cast = mul(x = var_4531_cast, y = var_4532_to_fp16);
            tensor<fp16, [2, 256, 1, 256]> var_4534_cast = softmax(axis = var_4272, x = aw_225_cast);
            tensor<fp16, [2, 256, 1, 256]> var_4535_cast = softmax(axis = var_4272, x = aw_227_cast);
            tensor<fp16, [2, 256, 1, 256]> var_4536_cast = softmax(axis = var_4272, x = aw_229_cast);
            tensor<fp16, [2, 256, 1, 256]> var_4537_cast = softmax(axis = var_4272, x = aw_231_cast);
            tensor<fp16, [2, 256, 1, 256]> var_4538_cast = softmax(axis = var_4272, x = aw_233_cast);
            tensor<fp16, [2, 256, 1, 256]> var_4539_cast = softmax(axis = var_4272, x = aw_235_cast);
            tensor<fp16, [2, 256, 1, 256]> var_4540_cast = softmax(axis = var_4272, x = aw_237_cast);
            tensor<fp16, [2, 256, 1, 256]> var_4541_cast = softmax(axis = var_4272, x = aw_239_cast);
            tensor<string, []> var_4543_equation_0 = const()[name = tensor<string, []>("op_4543_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_4543_cast = einsum(equation = var_4543_equation_0, values = (var_4471_cast, var_4534_cast));
            tensor<string, []> var_4545_equation_0 = const()[name = tensor<string, []>("op_4545_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_4545_cast = einsum(equation = var_4545_equation_0, values = (var_4475_cast, var_4535_cast));
            tensor<string, []> var_4547_equation_0 = const()[name = tensor<string, []>("op_4547_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_4547_cast = einsum(equation = var_4547_equation_0, values = (var_4479_cast, var_4536_cast));
            tensor<string, []> var_4549_equation_0 = const()[name = tensor<string, []>("op_4549_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_4549_cast = einsum(equation = var_4549_equation_0, values = (var_4483_cast, var_4537_cast));
            tensor<string, []> var_4551_equation_0 = const()[name = tensor<string, []>("op_4551_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_4551_cast = einsum(equation = var_4551_equation_0, values = (var_4487_cast, var_4538_cast));
            tensor<string, []> var_4553_equation_0 = const()[name = tensor<string, []>("op_4553_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_4553_cast = einsum(equation = var_4553_equation_0, values = (var_4491_cast, var_4539_cast));
            tensor<string, []> var_4555_equation_0 = const()[name = tensor<string, []>("op_4555_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_4555_cast = einsum(equation = var_4555_equation_0, values = (var_4495_cast, var_4540_cast));
            tensor<string, []> var_4557_equation_0 = const()[name = tensor<string, []>("op_4557_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_4557_cast = einsum(equation = var_4557_equation_0, values = (var_4499_cast, var_4541_cast));
            tensor<bool, []> input_301_interleave_0 = const()[name = tensor<string, []>("input_301_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 1280, 1, 256]> input_301_cast = concat(axis = var_4272, interleave = input_301_interleave_0, values = (var_4543_cast, var_4545_cast, var_4547_cast, var_4549_cast, var_4551_cast, var_4553_cast, var_4555_cast, var_4557_cast));
            tensor<int32, [2]> var_4563 = const()[name = tensor<string, []>("op_4563"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4565 = const()[name = tensor<string, []>("op_4565"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_4567_pad_type_0 = const()[name = tensor<string, []>("op_4567_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_4567_pad_0 = const()[name = tensor<string, []>("op_4567_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_0_transformer_blocks_0_attn1_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_0_transformer_blocks_0_attn1_to_out_0_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(245868032)))];
            tensor<fp16, [1280]> up_blocks_1_attentions_0_transformer_blocks_0_attn1_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_0_transformer_blocks_0_attn1_to_out_0_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(249144896)))];
            tensor<fp16, [2, 1280, 1, 256]> var_4567_cast = conv(bias = up_blocks_1_attentions_0_transformer_blocks_0_attn1_to_out_0_bias_to_fp16, dilations = var_4565, groups = var_4272, pad = var_4567_pad_0, pad_type = var_4567_pad_type_0, strides = var_4563, weight = up_blocks_1_attentions_0_transformer_blocks_0_attn1_to_out_0_weight_to_fp16, x = input_301_cast);
            tensor<fp16, [2, 1280, 1, 256]> inputs_45_cast = add(x = var_4567_cast, y = inputs_43_cast);
            tensor<int32, [1]> var_4571 = const()[name = tensor<string, []>("op_4571"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> channels_mean_45_cast = reduce_mean(axes = var_4571, keep_dims = var_4267, x = inputs_45_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_45_cast = sub(x = inputs_45_cast, y = channels_mean_45_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_sq_45_cast = mul(x = zero_mean_45_cast, y = zero_mean_45_cast);
            tensor<int32, [1]> var_4575 = const()[name = tensor<string, []>("op_4575"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> var_4576_cast = reduce_mean(axes = var_4575, keep_dims = var_4267, x = zero_mean_sq_45_cast);
            tensor<fp16, []> var_4577_to_fp16 = const()[name = tensor<string, []>("op_4577_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 256]> var_4578_cast = add(x = var_4576_cast, y = var_4577_to_fp16);
            tensor<fp16, []> denom_45_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_45_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 256]> denom_45_cast = rsqrt(epsilon = denom_45_epsilon_0_to_fp16, x = var_4578_cast);
            tensor<fp16, [2, 1280, 1, 256]> out_45_cast = mul(x = zero_mean_45_cast, y = denom_45_cast);
            tensor<fp16, [1, 1280, 1, 1]> var_4582_to_fp16 = const()[name = tensor<string, []>("op_4582_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(249147520)))];
            tensor<fp16, [2, 1280, 1, 256]> var_4583_cast = add(x = out_45_cast, y = var_4582_to_fp16);
            tensor<fp16, [1, 1280, 1, 1]> var_4585_to_fp16 = const()[name = tensor<string, []>("op_4585_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(249150144)))];
            tensor<fp16, [2, 1280, 1, 256]> hidden_states_169_cast = mul(x = var_4583_cast, y = var_4585_to_fp16);
            tensor<int32, [2]> var_4592 = const()[name = tensor<string, []>("op_4592"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4594 = const()[name = tensor<string, []>("op_4594"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_31_pad_type_0 = const()[name = tensor<string, []>("q_31_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_31_pad_0 = const()[name = tensor<string, []>("q_31_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_0_transformer_blocks_0_attn2_to_q_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_0_transformer_blocks_0_attn2_to_q_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(249152768)))];
            tensor<fp16, [2, 1280, 1, 256]> q_31_cast = conv(dilations = var_4594, groups = var_4272, pad = q_31_pad_0, pad_type = q_31_pad_type_0, strides = var_4592, weight = up_blocks_1_attentions_0_transformer_blocks_0_attn2_to_q_weight_to_fp16, x = hidden_states_169_cast);
            tensor<int32, [2]> var_4598 = const()[name = tensor<string, []>("op_4598"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4600 = const()[name = tensor<string, []>("op_4600"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_61_pad_type_0 = const()[name = tensor<string, []>("k_61_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_61_pad_0 = const()[name = tensor<string, []>("k_61_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 768, 1, 1]> up_blocks_1_attentions_0_transformer_blocks_0_attn2_to_k_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_0_transformer_blocks_0_attn2_to_k_weight_to_fp16"), val = tensor<fp16, [1280, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(252429632)))];
            tensor<fp16, [2, 1280, 1, 77]> k_61_cast = conv(dilations = var_4600, groups = var_4272, pad = k_61_pad_0, pad_type = k_61_pad_type_0, strides = var_4598, weight = up_blocks_1_attentions_0_transformer_blocks_0_attn2_to_k_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [2]> var_4604 = const()[name = tensor<string, []>("op_4604"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4606 = const()[name = tensor<string, []>("op_4606"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_31_pad_type_0 = const()[name = tensor<string, []>("v_31_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_31_pad_0 = const()[name = tensor<string, []>("v_31_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 768, 1, 1]> up_blocks_1_attentions_0_transformer_blocks_0_attn2_to_v_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_0_transformer_blocks_0_attn2_to_v_weight_to_fp16"), val = tensor<fp16, [1280, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(254395776)))];
            tensor<fp16, [2, 1280, 1, 77]> v_31_cast = conv(dilations = var_4606, groups = var_4272, pad = v_31_pad_0, pad_type = v_31_pad_type_0, strides = var_4604, weight = up_blocks_1_attentions_0_transformer_blocks_0_attn2_to_v_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [4]> var_4610_begin_0 = const()[name = tensor<string, []>("op_4610_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_4610_end_0 = const()[name = tensor<string, []>("op_4610_end_0"), val = tensor<int32, [4]>([2, 160, 1, 256])];
            tensor<bool, [4]> var_4610_end_mask_0 = const()[name = tensor<string, []>("op_4610_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_4610_cast = slice_by_index(begin = var_4610_begin_0, end = var_4610_end_0, end_mask = var_4610_end_mask_0, x = q_31_cast);
            tensor<int32, [4]> var_4614_begin_0 = const()[name = tensor<string, []>("op_4614_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_4614_end_0 = const()[name = tensor<string, []>("op_4614_end_0"), val = tensor<int32, [4]>([2, 320, 1, 256])];
            tensor<bool, [4]> var_4614_end_mask_0 = const()[name = tensor<string, []>("op_4614_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_4614_cast = slice_by_index(begin = var_4614_begin_0, end = var_4614_end_0, end_mask = var_4614_end_mask_0, x = q_31_cast);
            tensor<int32, [4]> var_4618_begin_0 = const()[name = tensor<string, []>("op_4618_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_4618_end_0 = const()[name = tensor<string, []>("op_4618_end_0"), val = tensor<int32, [4]>([2, 480, 1, 256])];
            tensor<bool, [4]> var_4618_end_mask_0 = const()[name = tensor<string, []>("op_4618_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_4618_cast = slice_by_index(begin = var_4618_begin_0, end = var_4618_end_0, end_mask = var_4618_end_mask_0, x = q_31_cast);
            tensor<int32, [4]> var_4622_begin_0 = const()[name = tensor<string, []>("op_4622_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_4622_end_0 = const()[name = tensor<string, []>("op_4622_end_0"), val = tensor<int32, [4]>([2, 640, 1, 256])];
            tensor<bool, [4]> var_4622_end_mask_0 = const()[name = tensor<string, []>("op_4622_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_4622_cast = slice_by_index(begin = var_4622_begin_0, end = var_4622_end_0, end_mask = var_4622_end_mask_0, x = q_31_cast);
            tensor<int32, [4]> var_4626_begin_0 = const()[name = tensor<string, []>("op_4626_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_4626_end_0 = const()[name = tensor<string, []>("op_4626_end_0"), val = tensor<int32, [4]>([2, 800, 1, 256])];
            tensor<bool, [4]> var_4626_end_mask_0 = const()[name = tensor<string, []>("op_4626_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_4626_cast = slice_by_index(begin = var_4626_begin_0, end = var_4626_end_0, end_mask = var_4626_end_mask_0, x = q_31_cast);
            tensor<int32, [4]> var_4630_begin_0 = const()[name = tensor<string, []>("op_4630_begin_0"), val = tensor<int32, [4]>([0, 800, 0, 0])];
            tensor<int32, [4]> var_4630_end_0 = const()[name = tensor<string, []>("op_4630_end_0"), val = tensor<int32, [4]>([2, 960, 1, 256])];
            tensor<bool, [4]> var_4630_end_mask_0 = const()[name = tensor<string, []>("op_4630_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_4630_cast = slice_by_index(begin = var_4630_begin_0, end = var_4630_end_0, end_mask = var_4630_end_mask_0, x = q_31_cast);
            tensor<int32, [4]> var_4634_begin_0 = const()[name = tensor<string, []>("op_4634_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_4634_end_0 = const()[name = tensor<string, []>("op_4634_end_0"), val = tensor<int32, [4]>([2, 1120, 1, 256])];
            tensor<bool, [4]> var_4634_end_mask_0 = const()[name = tensor<string, []>("op_4634_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_4634_cast = slice_by_index(begin = var_4634_begin_0, end = var_4634_end_0, end_mask = var_4634_end_mask_0, x = q_31_cast);
            tensor<int32, [4]> var_4638_begin_0 = const()[name = tensor<string, []>("op_4638_begin_0"), val = tensor<int32, [4]>([0, 1120, 0, 0])];
            tensor<int32, [4]> var_4638_end_0 = const()[name = tensor<string, []>("op_4638_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 256])];
            tensor<bool, [4]> var_4638_end_mask_0 = const()[name = tensor<string, []>("op_4638_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_4638_cast = slice_by_index(begin = var_4638_begin_0, end = var_4638_end_0, end_mask = var_4638_end_mask_0, x = q_31_cast);
            tensor<int32, [4]> k_63_perm_0 = const()[name = tensor<string, []>("k_63_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_4645_begin_0 = const()[name = tensor<string, []>("op_4645_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_4645_end_0 = const()[name = tensor<string, []>("op_4645_end_0"), val = tensor<int32, [4]>([2, 77, 1, 160])];
            tensor<bool, [4]> var_4645_end_mask_0 = const()[name = tensor<string, []>("op_4645_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 1280]> transpose_16 = transpose(perm = k_63_perm_0, x = k_61_cast);
            tensor<fp16, [2, 77, 1, 160]> var_4645_cast = slice_by_index(begin = var_4645_begin_0, end = var_4645_end_0, end_mask = var_4645_end_mask_0, x = transpose_16);
            tensor<int32, [4]> var_4649_begin_0 = const()[name = tensor<string, []>("op_4649_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 160])];
            tensor<int32, [4]> var_4649_end_0 = const()[name = tensor<string, []>("op_4649_end_0"), val = tensor<int32, [4]>([2, 77, 1, 320])];
            tensor<bool, [4]> var_4649_end_mask_0 = const()[name = tensor<string, []>("op_4649_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_4649_cast = slice_by_index(begin = var_4649_begin_0, end = var_4649_end_0, end_mask = var_4649_end_mask_0, x = transpose_16);
            tensor<int32, [4]> var_4653_begin_0 = const()[name = tensor<string, []>("op_4653_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_4653_end_0 = const()[name = tensor<string, []>("op_4653_end_0"), val = tensor<int32, [4]>([2, 77, 1, 480])];
            tensor<bool, [4]> var_4653_end_mask_0 = const()[name = tensor<string, []>("op_4653_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_4653_cast = slice_by_index(begin = var_4653_begin_0, end = var_4653_end_0, end_mask = var_4653_end_mask_0, x = transpose_16);
            tensor<int32, [4]> var_4657_begin_0 = const()[name = tensor<string, []>("op_4657_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 480])];
            tensor<int32, [4]> var_4657_end_0 = const()[name = tensor<string, []>("op_4657_end_0"), val = tensor<int32, [4]>([2, 77, 1, 640])];
            tensor<bool, [4]> var_4657_end_mask_0 = const()[name = tensor<string, []>("op_4657_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_4657_cast = slice_by_index(begin = var_4657_begin_0, end = var_4657_end_0, end_mask = var_4657_end_mask_0, x = transpose_16);
            tensor<int32, [4]> var_4661_begin_0 = const()[name = tensor<string, []>("op_4661_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 640])];
            tensor<int32, [4]> var_4661_end_0 = const()[name = tensor<string, []>("op_4661_end_0"), val = tensor<int32, [4]>([2, 77, 1, 800])];
            tensor<bool, [4]> var_4661_end_mask_0 = const()[name = tensor<string, []>("op_4661_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_4661_cast = slice_by_index(begin = var_4661_begin_0, end = var_4661_end_0, end_mask = var_4661_end_mask_0, x = transpose_16);
            tensor<int32, [4]> var_4665_begin_0 = const()[name = tensor<string, []>("op_4665_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 800])];
            tensor<int32, [4]> var_4665_end_0 = const()[name = tensor<string, []>("op_4665_end_0"), val = tensor<int32, [4]>([2, 77, 1, 960])];
            tensor<bool, [4]> var_4665_end_mask_0 = const()[name = tensor<string, []>("op_4665_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_4665_cast = slice_by_index(begin = var_4665_begin_0, end = var_4665_end_0, end_mask = var_4665_end_mask_0, x = transpose_16);
            tensor<int32, [4]> var_4669_begin_0 = const()[name = tensor<string, []>("op_4669_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 960])];
            tensor<int32, [4]> var_4669_end_0 = const()[name = tensor<string, []>("op_4669_end_0"), val = tensor<int32, [4]>([2, 77, 1, 1120])];
            tensor<bool, [4]> var_4669_end_mask_0 = const()[name = tensor<string, []>("op_4669_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_4669_cast = slice_by_index(begin = var_4669_begin_0, end = var_4669_end_0, end_mask = var_4669_end_mask_0, x = transpose_16);
            tensor<int32, [4]> var_4673_begin_0 = const()[name = tensor<string, []>("op_4673_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1120])];
            tensor<int32, [4]> var_4673_end_0 = const()[name = tensor<string, []>("op_4673_end_0"), val = tensor<int32, [4]>([2, 77, 1, 1280])];
            tensor<bool, [4]> var_4673_end_mask_0 = const()[name = tensor<string, []>("op_4673_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_4673_cast = slice_by_index(begin = var_4673_begin_0, end = var_4673_end_0, end_mask = var_4673_end_mask_0, x = transpose_16);
            tensor<int32, [4]> var_4675_begin_0 = const()[name = tensor<string, []>("op_4675_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_4675_end_0 = const()[name = tensor<string, []>("op_4675_end_0"), val = tensor<int32, [4]>([2, 160, 1, 77])];
            tensor<bool, [4]> var_4675_end_mask_0 = const()[name = tensor<string, []>("op_4675_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_4675_cast = slice_by_index(begin = var_4675_begin_0, end = var_4675_end_0, end_mask = var_4675_end_mask_0, x = v_31_cast);
            tensor<int32, [4]> var_4679_begin_0 = const()[name = tensor<string, []>("op_4679_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_4679_end_0 = const()[name = tensor<string, []>("op_4679_end_0"), val = tensor<int32, [4]>([2, 320, 1, 77])];
            tensor<bool, [4]> var_4679_end_mask_0 = const()[name = tensor<string, []>("op_4679_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_4679_cast = slice_by_index(begin = var_4679_begin_0, end = var_4679_end_0, end_mask = var_4679_end_mask_0, x = v_31_cast);
            tensor<int32, [4]> var_4683_begin_0 = const()[name = tensor<string, []>("op_4683_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_4683_end_0 = const()[name = tensor<string, []>("op_4683_end_0"), val = tensor<int32, [4]>([2, 480, 1, 77])];
            tensor<bool, [4]> var_4683_end_mask_0 = const()[name = tensor<string, []>("op_4683_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_4683_cast = slice_by_index(begin = var_4683_begin_0, end = var_4683_end_0, end_mask = var_4683_end_mask_0, x = v_31_cast);
            tensor<int32, [4]> var_4687_begin_0 = const()[name = tensor<string, []>("op_4687_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_4687_end_0 = const()[name = tensor<string, []>("op_4687_end_0"), val = tensor<int32, [4]>([2, 640, 1, 77])];
            tensor<bool, [4]> var_4687_end_mask_0 = const()[name = tensor<string, []>("op_4687_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_4687_cast = slice_by_index(begin = var_4687_begin_0, end = var_4687_end_0, end_mask = var_4687_end_mask_0, x = v_31_cast);
            tensor<int32, [4]> var_4691_begin_0 = const()[name = tensor<string, []>("op_4691_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_4691_end_0 = const()[name = tensor<string, []>("op_4691_end_0"), val = tensor<int32, [4]>([2, 800, 1, 77])];
            tensor<bool, [4]> var_4691_end_mask_0 = const()[name = tensor<string, []>("op_4691_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_4691_cast = slice_by_index(begin = var_4691_begin_0, end = var_4691_end_0, end_mask = var_4691_end_mask_0, x = v_31_cast);
            tensor<int32, [4]> var_4695_begin_0 = const()[name = tensor<string, []>("op_4695_begin_0"), val = tensor<int32, [4]>([0, 800, 0, 0])];
            tensor<int32, [4]> var_4695_end_0 = const()[name = tensor<string, []>("op_4695_end_0"), val = tensor<int32, [4]>([2, 960, 1, 77])];
            tensor<bool, [4]> var_4695_end_mask_0 = const()[name = tensor<string, []>("op_4695_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_4695_cast = slice_by_index(begin = var_4695_begin_0, end = var_4695_end_0, end_mask = var_4695_end_mask_0, x = v_31_cast);
            tensor<int32, [4]> var_4699_begin_0 = const()[name = tensor<string, []>("op_4699_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_4699_end_0 = const()[name = tensor<string, []>("op_4699_end_0"), val = tensor<int32, [4]>([2, 1120, 1, 77])];
            tensor<bool, [4]> var_4699_end_mask_0 = const()[name = tensor<string, []>("op_4699_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_4699_cast = slice_by_index(begin = var_4699_begin_0, end = var_4699_end_0, end_mask = var_4699_end_mask_0, x = v_31_cast);
            tensor<int32, [4]> var_4703_begin_0 = const()[name = tensor<string, []>("op_4703_begin_0"), val = tensor<int32, [4]>([0, 1120, 0, 0])];
            tensor<int32, [4]> var_4703_end_0 = const()[name = tensor<string, []>("op_4703_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 77])];
            tensor<bool, [4]> var_4703_end_mask_0 = const()[name = tensor<string, []>("op_4703_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_4703_cast = slice_by_index(begin = var_4703_begin_0, end = var_4703_end_0, end_mask = var_4703_end_mask_0, x = v_31_cast);
            tensor<string, []> var_4707_equation_0 = const()[name = tensor<string, []>("op_4707_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_4707_cast = einsum(equation = var_4707_equation_0, values = (var_4645_cast, var_4610_cast));
            tensor<fp16, []> var_4708_to_fp16 = const()[name = tensor<string, []>("op_4708_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_241_cast = mul(x = var_4707_cast, y = var_4708_to_fp16);
            tensor<string, []> var_4711_equation_0 = const()[name = tensor<string, []>("op_4711_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_4711_cast = einsum(equation = var_4711_equation_0, values = (var_4649_cast, var_4614_cast));
            tensor<fp16, []> var_4712_to_fp16 = const()[name = tensor<string, []>("op_4712_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_243_cast = mul(x = var_4711_cast, y = var_4712_to_fp16);
            tensor<string, []> var_4715_equation_0 = const()[name = tensor<string, []>("op_4715_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_4715_cast = einsum(equation = var_4715_equation_0, values = (var_4653_cast, var_4618_cast));
            tensor<fp16, []> var_4716_to_fp16 = const()[name = tensor<string, []>("op_4716_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_245_cast = mul(x = var_4715_cast, y = var_4716_to_fp16);
            tensor<string, []> var_4719_equation_0 = const()[name = tensor<string, []>("op_4719_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_4719_cast = einsum(equation = var_4719_equation_0, values = (var_4657_cast, var_4622_cast));
            tensor<fp16, []> var_4720_to_fp16 = const()[name = tensor<string, []>("op_4720_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_247_cast = mul(x = var_4719_cast, y = var_4720_to_fp16);
            tensor<string, []> var_4723_equation_0 = const()[name = tensor<string, []>("op_4723_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_4723_cast = einsum(equation = var_4723_equation_0, values = (var_4661_cast, var_4626_cast));
            tensor<fp16, []> var_4724_to_fp16 = const()[name = tensor<string, []>("op_4724_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_249_cast = mul(x = var_4723_cast, y = var_4724_to_fp16);
            tensor<string, []> var_4727_equation_0 = const()[name = tensor<string, []>("op_4727_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_4727_cast = einsum(equation = var_4727_equation_0, values = (var_4665_cast, var_4630_cast));
            tensor<fp16, []> var_4728_to_fp16 = const()[name = tensor<string, []>("op_4728_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_251_cast = mul(x = var_4727_cast, y = var_4728_to_fp16);
            tensor<string, []> var_4731_equation_0 = const()[name = tensor<string, []>("op_4731_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_4731_cast = einsum(equation = var_4731_equation_0, values = (var_4669_cast, var_4634_cast));
            tensor<fp16, []> var_4732_to_fp16 = const()[name = tensor<string, []>("op_4732_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_253_cast = mul(x = var_4731_cast, y = var_4732_to_fp16);
            tensor<string, []> var_4735_equation_0 = const()[name = tensor<string, []>("op_4735_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_4735_cast = einsum(equation = var_4735_equation_0, values = (var_4673_cast, var_4638_cast));
            tensor<fp16, []> var_4736_to_fp16 = const()[name = tensor<string, []>("op_4736_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_255_cast = mul(x = var_4735_cast, y = var_4736_to_fp16);
            tensor<fp16, [2, 77, 1, 256]> var_4738_cast = softmax(axis = var_4272, x = aw_241_cast);
            tensor<fp16, [2, 77, 1, 256]> var_4739_cast = softmax(axis = var_4272, x = aw_243_cast);
            tensor<fp16, [2, 77, 1, 256]> var_4740_cast = softmax(axis = var_4272, x = aw_245_cast);
            tensor<fp16, [2, 77, 1, 256]> var_4741_cast = softmax(axis = var_4272, x = aw_247_cast);
            tensor<fp16, [2, 77, 1, 256]> var_4742_cast = softmax(axis = var_4272, x = aw_249_cast);
            tensor<fp16, [2, 77, 1, 256]> var_4743_cast = softmax(axis = var_4272, x = aw_251_cast);
            tensor<fp16, [2, 77, 1, 256]> var_4744_cast = softmax(axis = var_4272, x = aw_253_cast);
            tensor<fp16, [2, 77, 1, 256]> var_4745_cast = softmax(axis = var_4272, x = aw_255_cast);
            tensor<string, []> var_4747_equation_0 = const()[name = tensor<string, []>("op_4747_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_4747_cast = einsum(equation = var_4747_equation_0, values = (var_4675_cast, var_4738_cast));
            tensor<string, []> var_4749_equation_0 = const()[name = tensor<string, []>("op_4749_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_4749_cast = einsum(equation = var_4749_equation_0, values = (var_4679_cast, var_4739_cast));
            tensor<string, []> var_4751_equation_0 = const()[name = tensor<string, []>("op_4751_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_4751_cast = einsum(equation = var_4751_equation_0, values = (var_4683_cast, var_4740_cast));
            tensor<string, []> var_4753_equation_0 = const()[name = tensor<string, []>("op_4753_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_4753_cast = einsum(equation = var_4753_equation_0, values = (var_4687_cast, var_4741_cast));
            tensor<string, []> var_4755_equation_0 = const()[name = tensor<string, []>("op_4755_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_4755_cast = einsum(equation = var_4755_equation_0, values = (var_4691_cast, var_4742_cast));
            tensor<string, []> var_4757_equation_0 = const()[name = tensor<string, []>("op_4757_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_4757_cast = einsum(equation = var_4757_equation_0, values = (var_4695_cast, var_4743_cast));
            tensor<string, []> var_4759_equation_0 = const()[name = tensor<string, []>("op_4759_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_4759_cast = einsum(equation = var_4759_equation_0, values = (var_4699_cast, var_4744_cast));
            tensor<string, []> var_4761_equation_0 = const()[name = tensor<string, []>("op_4761_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_4761_cast = einsum(equation = var_4761_equation_0, values = (var_4703_cast, var_4745_cast));
            tensor<bool, []> input_303_interleave_0 = const()[name = tensor<string, []>("input_303_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 1280, 1, 256]> input_303_cast = concat(axis = var_4272, interleave = input_303_interleave_0, values = (var_4747_cast, var_4749_cast, var_4751_cast, var_4753_cast, var_4755_cast, var_4757_cast, var_4759_cast, var_4761_cast));
            tensor<int32, [2]> var_4767 = const()[name = tensor<string, []>("op_4767"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4769 = const()[name = tensor<string, []>("op_4769"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_4771_pad_type_0 = const()[name = tensor<string, []>("op_4771_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_4771_pad_0 = const()[name = tensor<string, []>("op_4771_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_0_transformer_blocks_0_attn2_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_0_transformer_blocks_0_attn2_to_out_0_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(256361920)))];
            tensor<fp16, [1280]> up_blocks_1_attentions_0_transformer_blocks_0_attn2_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_0_transformer_blocks_0_attn2_to_out_0_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(259638784)))];
            tensor<fp16, [2, 1280, 1, 256]> var_4771_cast = conv(bias = up_blocks_1_attentions_0_transformer_blocks_0_attn2_to_out_0_bias_to_fp16, dilations = var_4769, groups = var_4272, pad = var_4771_pad_0, pad_type = var_4771_pad_type_0, strides = var_4767, weight = up_blocks_1_attentions_0_transformer_blocks_0_attn2_to_out_0_weight_to_fp16, x = input_303_cast);
            tensor<fp16, [2, 1280, 1, 256]> inputs_47_cast = add(x = var_4771_cast, y = inputs_45_cast);
            tensor<int32, [1]> var_4775 = const()[name = tensor<string, []>("op_4775"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> channels_mean_47_cast = reduce_mean(axes = var_4775, keep_dims = var_4267, x = inputs_47_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_47_cast = sub(x = inputs_47_cast, y = channels_mean_47_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_sq_47_cast = mul(x = zero_mean_47_cast, y = zero_mean_47_cast);
            tensor<int32, [1]> var_4779 = const()[name = tensor<string, []>("op_4779"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> var_4780_cast = reduce_mean(axes = var_4779, keep_dims = var_4267, x = zero_mean_sq_47_cast);
            tensor<fp16, []> var_4781_to_fp16 = const()[name = tensor<string, []>("op_4781_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 256]> var_4782_cast = add(x = var_4780_cast, y = var_4781_to_fp16);
            tensor<fp16, []> denom_47_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_47_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 256]> denom_47_cast = rsqrt(epsilon = denom_47_epsilon_0_to_fp16, x = var_4782_cast);
            tensor<fp16, [2, 1280, 1, 256]> out_47_cast = mul(x = zero_mean_47_cast, y = denom_47_cast);
            tensor<fp16, [1, 1280, 1, 1]> var_4786_to_fp16 = const()[name = tensor<string, []>("op_4786_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(259641408)))];
            tensor<fp16, [2, 1280, 1, 256]> var_4787_cast = add(x = out_47_cast, y = var_4786_to_fp16);
            tensor<fp16, [1, 1280, 1, 1]> var_4789_to_fp16 = const()[name = tensor<string, []>("op_4789_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(259644032)))];
            tensor<fp16, [2, 1280, 1, 256]> input_305_cast = mul(x = var_4787_cast, y = var_4789_to_fp16);
            tensor<int32, [2]> var_4797 = const()[name = tensor<string, []>("op_4797"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4799 = const()[name = tensor<string, []>("op_4799"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_4801_pad_type_0 = const()[name = tensor<string, []>("op_4801_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_4801_pad_0 = const()[name = tensor<string, []>("op_4801_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [10240, 1280, 1, 1]> up_blocks_1_attentions_0_transformer_blocks_0_ff_net_0_proj_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_0_transformer_blocks_0_ff_net_0_proj_weight_to_fp16"), val = tensor<fp16, [10240, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(259646656)))];
            tensor<fp16, [10240]> up_blocks_1_attentions_0_transformer_blocks_0_ff_net_0_proj_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_0_transformer_blocks_0_ff_net_0_proj_bias_to_fp16"), val = tensor<fp16, [10240]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(285861120)))];
            tensor<fp16, [2, 10240, 1, 256]> var_4801_cast = conv(bias = up_blocks_1_attentions_0_transformer_blocks_0_ff_net_0_proj_bias_to_fp16, dilations = var_4799, groups = var_4272, pad = var_4801_pad_0, pad_type = var_4801_pad_type_0, strides = var_4797, weight = up_blocks_1_attentions_0_transformer_blocks_0_ff_net_0_proj_weight_to_fp16, x = input_305_cast);
            tensor<int32, [2]> var_4802_split_sizes_0 = const()[name = tensor<string, []>("op_4802_split_sizes_0"), val = tensor<int32, [2]>([5120, 5120])];
            tensor<int32, []> var_4802_axis_0 = const()[name = tensor<string, []>("op_4802_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [2, 5120, 1, 256]> var_4802_cast_0, tensor<fp16, [2, 5120, 1, 256]> var_4802_cast_1 = split(axis = var_4802_axis_0, split_sizes = var_4802_split_sizes_0, x = var_4801_cast);
            tensor<string, []> var_4804_mode_0 = const()[name = tensor<string, []>("op_4804_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [2, 5120, 1, 256]> var_4804_cast = gelu(mode = var_4804_mode_0, x = var_4802_cast_1);
            tensor<fp16, [2, 5120, 1, 256]> input_307_cast = mul(x = var_4802_cast_0, y = var_4804_cast);
            tensor<int32, [2]> var_4808 = const()[name = tensor<string, []>("op_4808"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4810 = const()[name = tensor<string, []>("op_4810"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_4812_pad_type_0 = const()[name = tensor<string, []>("op_4812_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_4812_pad_0 = const()[name = tensor<string, []>("op_4812_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 5120, 1, 1]> up_blocks_1_attentions_0_transformer_blocks_0_ff_net_2_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_0_transformer_blocks_0_ff_net_2_weight_to_fp16"), val = tensor<fp16, [1280, 5120, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(285881664)))];
            tensor<fp16, [1280]> up_blocks_1_attentions_0_transformer_blocks_0_ff_net_2_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_0_transformer_blocks_0_ff_net_2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(298988928)))];
            tensor<fp16, [2, 1280, 1, 256]> var_4812_cast = conv(bias = up_blocks_1_attentions_0_transformer_blocks_0_ff_net_2_bias_to_fp16, dilations = var_4810, groups = var_4272, pad = var_4812_pad_0, pad_type = var_4812_pad_type_0, strides = var_4808, weight = up_blocks_1_attentions_0_transformer_blocks_0_ff_net_2_weight_to_fp16, x = input_307_cast);
            tensor<fp16, [2, 1280, 1, 256]> hidden_states_173_cast = add(x = var_4812_cast, y = inputs_47_cast);
            tensor<int32, [4]> var_4814 = const()[name = tensor<string, []>("op_4814"), val = tensor<int32, [4]>([2, 1280, 16, 16])];
            tensor<fp16, [2, 1280, 16, 16]> input_309_cast = reshape(shape = var_4814, x = hidden_states_173_cast);
            tensor<int32, [2]> var_4818 = const()[name = tensor<string, []>("op_4818"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4820 = const()[name = tensor<string, []>("op_4820"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_175_pad_type_0 = const()[name = tensor<string, []>("hidden_states_175_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_175_pad_0 = const()[name = tensor<string, []>("hidden_states_175_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_0_proj_out_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_0_proj_out_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(298991552)))];
            tensor<fp16, [1280]> up_blocks_1_attentions_0_proj_out_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_0_proj_out_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(302268416)))];
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_175_cast = conv(bias = up_blocks_1_attentions_0_proj_out_bias_to_fp16, dilations = var_4820, groups = var_4272, pad = hidden_states_175_pad_0, pad_type = hidden_states_175_pad_type_0, strides = var_4818, weight = up_blocks_1_attentions_0_proj_out_weight_to_fp16, x = input_309_cast);
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_177_cast = add(x = hidden_states_175_cast, y = hidden_states_163_cast);
            tensor<bool, []> input_311_interleave_0 = const()[name = tensor<string, []>("input_311_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 1280, 16, 16]> cast_5 = cast(dtype = cast_14_dtype_0, x = input_143_cast);
            tensor<fp16, [2, 2560, 16, 16]> input_311_cast = concat(axis = var_4272, interleave = input_311_interleave_0, values = (hidden_states_177_cast, cast_5));
            tensor<int32, [5]> reshape_144_shape_0 = const()[name = tensor<string, []>("reshape_144_shape_0"), val = tensor<int32, [5]>([2, 32, 80, 16, 16])];
            tensor<fp16, [2, 32, 80, 16, 16]> reshape_144_cast = reshape(shape = reshape_144_shape_0, x = input_311_cast);
            tensor<int32, [3]> reduce_mean_108_axes_0 = const()[name = tensor<string, []>("reduce_mean_108_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_108_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_108_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_108_cast = reduce_mean(axes = reduce_mean_108_axes_0, keep_dims = reduce_mean_108_keep_dims_0, x = reshape_144_cast);
            tensor<fp16, [2, 32, 80, 16, 16]> sub_72_cast = sub(x = reshape_144_cast, y = reduce_mean_108_cast);
            tensor<fp16, [2, 32, 80, 16, 16]> square_36_cast = square(x = sub_72_cast);
            tensor<int32, [3]> reduce_mean_110_axes_0 = const()[name = tensor<string, []>("reduce_mean_110_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_110_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_110_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_110_cast = reduce_mean(axes = reduce_mean_110_axes_0, keep_dims = reduce_mean_110_keep_dims_0, x = square_36_cast);
            tensor<fp16, []> add_72_y_0_to_fp16 = const()[name = tensor<string, []>("add_72_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_72_cast = add(x = reduce_mean_110_cast, y = add_72_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_36_cast = sqrt(x = add_72_cast);
            tensor<fp16, [2, 32, 80, 16, 16]> real_div_36_cast = real_div(x = sub_72_cast, y = sqrt_36_cast);
            tensor<int32, [4]> reshape_145_shape_0 = const()[name = tensor<string, []>("reshape_145_shape_0"), val = tensor<int32, [4]>([2, 2560, 16, 16])];
            tensor<fp16, [2, 2560, 16, 16]> reshape_145_cast = reshape(shape = reshape_145_shape_0, x = real_div_36_cast);
            tensor<fp16, [2560]> add_73_mean_0_to_fp16 = const()[name = tensor<string, []>("add_73_mean_0_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(302271040)))];
            tensor<fp16, [2560]> add_73_variance_0_to_fp16 = const()[name = tensor<string, []>("add_73_variance_0_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(302276224)))];
            tensor<fp16, [2560]> add_73_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_73_gamma_0_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(302281408)))];
            tensor<fp16, [2560]> add_73_beta_0_to_fp16 = const()[name = tensor<string, []>("add_73_beta_0_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(302286592)))];
            tensor<fp16, []> add_73_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_73_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 2560, 16, 16]> add_73_cast = batch_norm(beta = add_73_beta_0_to_fp16, epsilon = add_73_epsilon_0_to_fp16, gamma = add_73_gamma_0_to_fp16, mean = add_73_mean_0_to_fp16, variance = add_73_variance_0_to_fp16, x = reshape_145_cast);
            tensor<fp16, [2, 2560, 16, 16]> input_315_cast = silu(x = add_73_cast);
            tensor<int32, [2]> var_4838 = const()[name = tensor<string, []>("op_4838"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4840 = const()[name = tensor<string, []>("op_4840"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_179_pad_type_0 = const()[name = tensor<string, []>("hidden_states_179_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_179_pad_0 = const()[name = tensor<string, []>("hidden_states_179_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 2560, 3, 3]> up_blocks_1_resnets_1_conv1_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_1_conv1_weight_to_fp16"), val = tensor<fp16, [1280, 2560, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(302291776)))];
            tensor<fp16, [1280]> up_blocks_1_resnets_1_conv1_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_1_conv1_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(361274240)))];
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_179_cast = conv(bias = up_blocks_1_resnets_1_conv1_bias_to_fp16, dilations = var_4840, groups = var_4272, pad = hidden_states_179_pad_0, pad_type = hidden_states_179_pad_type_0, strides = var_4838, weight = up_blocks_1_resnets_1_conv1_weight_to_fp16, x = input_315_cast);
            tensor<int32, [2]> var_4846 = const()[name = tensor<string, []>("op_4846"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4848 = const()[name = tensor<string, []>("op_4848"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> temb_29_pad_type_0 = const()[name = tensor<string, []>("temb_29_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> temb_29_pad_0 = const()[name = tensor<string, []>("temb_29_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_resnets_1_time_emb_proj_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_1_time_emb_proj_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(361276864)))];
            tensor<fp16, [1280]> up_blocks_1_resnets_1_time_emb_proj_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_1_time_emb_proj_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(364553728)))];
            tensor<fp16, [2, 1280, 1, 1]> temb_29_cast = conv(bias = up_blocks_1_resnets_1_time_emb_proj_bias_to_fp16, dilations = var_4848, groups = var_4272, pad = temb_29_pad_0, pad_type = temb_29_pad_type_0, strides = var_4846, weight = up_blocks_1_resnets_1_time_emb_proj_weight_to_fp16, x = cast_12);
            tensor<fp16, [2, 1280, 16, 16]> input_319_cast = add(x = hidden_states_179_cast, y = temb_29_cast);
            tensor<int32, [5]> reshape_148_shape_0 = const()[name = tensor<string, []>("reshape_148_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 16, 16])];
            tensor<fp16, [2, 32, 40, 16, 16]> reshape_148_cast = reshape(shape = reshape_148_shape_0, x = input_319_cast);
            tensor<int32, [3]> reduce_mean_111_axes_0 = const()[name = tensor<string, []>("reduce_mean_111_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_111_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_111_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_111_cast = reduce_mean(axes = reduce_mean_111_axes_0, keep_dims = reduce_mean_111_keep_dims_0, x = reshape_148_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> sub_74_cast = sub(x = reshape_148_cast, y = reduce_mean_111_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> square_37_cast = square(x = sub_74_cast);
            tensor<int32, [3]> reduce_mean_113_axes_0 = const()[name = tensor<string, []>("reduce_mean_113_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_113_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_113_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_113_cast = reduce_mean(axes = reduce_mean_113_axes_0, keep_dims = reduce_mean_113_keep_dims_0, x = square_37_cast);
            tensor<fp16, []> add_74_y_0_to_fp16 = const()[name = tensor<string, []>("add_74_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_74_cast = add(x = reduce_mean_113_cast, y = add_74_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_37_cast = sqrt(x = add_74_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> real_div_37_cast = real_div(x = sub_74_cast, y = sqrt_37_cast);
            tensor<int32, [4]> reshape_149_shape_0 = const()[name = tensor<string, []>("reshape_149_shape_0"), val = tensor<int32, [4]>([2, 1280, 16, 16])];
            tensor<fp16, [2, 1280, 16, 16]> reshape_149_cast = reshape(shape = reshape_149_shape_0, x = real_div_37_cast);
            tensor<fp16, [1280]> add_75_mean_0_to_fp16 = const()[name = tensor<string, []>("add_75_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(364556352)))];
            tensor<fp16, [1280]> add_75_variance_0_to_fp16 = const()[name = tensor<string, []>("add_75_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(364558976)))];
            tensor<fp16, [1280]> add_75_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_75_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(364561600)))];
            tensor<fp16, [1280]> add_75_beta_0_to_fp16 = const()[name = tensor<string, []>("add_75_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(364564224)))];
            tensor<fp16, []> add_75_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_75_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 16, 16]> add_75_cast = batch_norm(beta = add_75_beta_0_to_fp16, epsilon = add_75_epsilon_0_to_fp16, gamma = add_75_gamma_0_to_fp16, mean = add_75_mean_0_to_fp16, variance = add_75_variance_0_to_fp16, x = reshape_149_cast);
            tensor<fp16, [2, 1280, 16, 16]> input_323_cast = silu(x = add_75_cast);
            tensor<int32, [2]> var_4858 = const()[name = tensor<string, []>("op_4858"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4860 = const()[name = tensor<string, []>("op_4860"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_181_pad_type_0 = const()[name = tensor<string, []>("hidden_states_181_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_181_pad_0 = const()[name = tensor<string, []>("hidden_states_181_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 1280, 3, 3]> up_blocks_1_resnets_1_conv2_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_1_conv2_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(364566848)))];
            tensor<fp16, [1280]> up_blocks_1_resnets_1_conv2_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_1_conv2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(394058112)))];
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_181_cast = conv(bias = up_blocks_1_resnets_1_conv2_bias_to_fp16, dilations = var_4860, groups = var_4272, pad = hidden_states_181_pad_0, pad_type = hidden_states_181_pad_type_0, strides = var_4858, weight = up_blocks_1_resnets_1_conv2_weight_to_fp16, x = input_323_cast);
            tensor<int32, [2]> var_4865 = const()[name = tensor<string, []>("op_4865"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4867 = const()[name = tensor<string, []>("op_4867"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_13_pad_type_0 = const()[name = tensor<string, []>("x_13_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_13_pad_0 = const()[name = tensor<string, []>("x_13_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 2560, 1, 1]> up_blocks_1_resnets_1_conv_shortcut_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_1_conv_shortcut_weight_to_fp16"), val = tensor<fp16, [1280, 2560, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(394060736)))];
            tensor<fp16, [1280]> up_blocks_1_resnets_1_conv_shortcut_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_1_conv_shortcut_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(400614400)))];
            tensor<fp16, [2, 1280, 16, 16]> x_13_cast = conv(bias = up_blocks_1_resnets_1_conv_shortcut_bias_to_fp16, dilations = var_4867, groups = var_4272, pad = x_13_pad_0, pad_type = x_13_pad_type_0, strides = var_4865, weight = up_blocks_1_resnets_1_conv_shortcut_weight_to_fp16, x = input_311_cast);
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_183_cast = add(x = x_13_cast, y = hidden_states_181_cast);
            tensor<int32, [5]> reshape_152_shape_0 = const()[name = tensor<string, []>("reshape_152_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 16, 16])];
            tensor<fp16, [2, 32, 40, 16, 16]> reshape_152_cast = reshape(shape = reshape_152_shape_0, x = hidden_states_183_cast);
            tensor<int32, [3]> reduce_mean_114_axes_0 = const()[name = tensor<string, []>("reduce_mean_114_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_114_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_114_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_114_cast = reduce_mean(axes = reduce_mean_114_axes_0, keep_dims = reduce_mean_114_keep_dims_0, x = reshape_152_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> sub_76_cast = sub(x = reshape_152_cast, y = reduce_mean_114_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> square_38_cast = square(x = sub_76_cast);
            tensor<int32, [3]> reduce_mean_116_axes_0 = const()[name = tensor<string, []>("reduce_mean_116_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_116_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_116_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_116_cast = reduce_mean(axes = reduce_mean_116_axes_0, keep_dims = reduce_mean_116_keep_dims_0, x = square_38_cast);
            tensor<fp16, []> add_76_y_0_to_fp16 = const()[name = tensor<string, []>("add_76_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_76_cast = add(x = reduce_mean_116_cast, y = add_76_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_38_cast = sqrt(x = add_76_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> real_div_38_cast = real_div(x = sub_76_cast, y = sqrt_38_cast);
            tensor<int32, [4]> reshape_153_shape_0 = const()[name = tensor<string, []>("reshape_153_shape_0"), val = tensor<int32, [4]>([2, 1280, 16, 16])];
            tensor<fp16, [2, 1280, 16, 16]> reshape_153_cast = reshape(shape = reshape_153_shape_0, x = real_div_38_cast);
            tensor<fp16, [1280]> add_77_mean_0_to_fp16 = const()[name = tensor<string, []>("add_77_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(400617024)))];
            tensor<fp16, [1280]> add_77_variance_0_to_fp16 = const()[name = tensor<string, []>("add_77_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(400619648)))];
            tensor<fp16, [1280]> add_77_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_77_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(400622272)))];
            tensor<fp16, [1280]> add_77_beta_0_to_fp16 = const()[name = tensor<string, []>("add_77_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(400624896)))];
            tensor<fp16, []> add_77_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_77_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 16, 16]> add_77_cast = batch_norm(beta = add_77_beta_0_to_fp16, epsilon = add_77_epsilon_0_to_fp16, gamma = add_77_gamma_0_to_fp16, mean = add_77_mean_0_to_fp16, variance = add_77_variance_0_to_fp16, x = reshape_153_cast);
            tensor<int32, [2]> var_4887 = const()[name = tensor<string, []>("op_4887"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4889 = const()[name = tensor<string, []>("op_4889"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_185_pad_type_0 = const()[name = tensor<string, []>("hidden_states_185_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_185_pad_0 = const()[name = tensor<string, []>("hidden_states_185_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_1_proj_in_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_1_proj_in_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(400627520)))];
            tensor<fp16, [1280]> up_blocks_1_attentions_1_proj_in_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_1_proj_in_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(403904384)))];
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_185_cast = conv(bias = up_blocks_1_attentions_1_proj_in_bias_to_fp16, dilations = var_4889, groups = var_4272, pad = hidden_states_185_pad_0, pad_type = hidden_states_185_pad_type_0, strides = var_4887, weight = up_blocks_1_attentions_1_proj_in_weight_to_fp16, x = add_77_cast);
            tensor<int32, [4]> var_4894 = const()[name = tensor<string, []>("op_4894"), val = tensor<int32, [4]>([2, 1280, 1, 256])];
            tensor<fp16, [2, 1280, 1, 256]> inputs_49_cast = reshape(shape = var_4894, x = hidden_states_185_cast);
            tensor<int32, [1]> var_4904 = const()[name = tensor<string, []>("op_4904"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> channels_mean_49_cast = reduce_mean(axes = var_4904, keep_dims = var_4267, x = inputs_49_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_49_cast = sub(x = inputs_49_cast, y = channels_mean_49_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_sq_49_cast = mul(x = zero_mean_49_cast, y = zero_mean_49_cast);
            tensor<int32, [1]> var_4908 = const()[name = tensor<string, []>("op_4908"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> var_4909_cast = reduce_mean(axes = var_4908, keep_dims = var_4267, x = zero_mean_sq_49_cast);
            tensor<fp16, []> var_4910_to_fp16 = const()[name = tensor<string, []>("op_4910_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 256]> var_4911_cast = add(x = var_4909_cast, y = var_4910_to_fp16);
            tensor<fp16, []> denom_49_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_49_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 256]> denom_49_cast = rsqrt(epsilon = denom_49_epsilon_0_to_fp16, x = var_4911_cast);
            tensor<fp16, [2, 1280, 1, 256]> out_49_cast = mul(x = zero_mean_49_cast, y = denom_49_cast);
            tensor<fp16, [1, 1280, 1, 1]> var_4915_to_fp16 = const()[name = tensor<string, []>("op_4915_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(403907008)))];
            tensor<fp16, [2, 1280, 1, 256]> var_4916_cast = add(x = out_49_cast, y = var_4915_to_fp16);
            tensor<fp16, [1, 1280, 1, 1]> var_4918_to_fp16 = const()[name = tensor<string, []>("op_4918_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(403909632)))];
            tensor<fp16, [2, 1280, 1, 256]> hidden_states_187_cast = mul(x = var_4916_cast, y = var_4918_to_fp16);
            tensor<int32, [2]> var_4925 = const()[name = tensor<string, []>("op_4925"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4927 = const()[name = tensor<string, []>("op_4927"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_33_pad_type_0 = const()[name = tensor<string, []>("q_33_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_33_pad_0 = const()[name = tensor<string, []>("q_33_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_1_transformer_blocks_0_attn1_to_q_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_1_transformer_blocks_0_attn1_to_q_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(403912256)))];
            tensor<fp16, [2, 1280, 1, 256]> q_33_cast = conv(dilations = var_4927, groups = var_4272, pad = q_33_pad_0, pad_type = q_33_pad_type_0, strides = var_4925, weight = up_blocks_1_attentions_1_transformer_blocks_0_attn1_to_q_weight_to_fp16, x = hidden_states_187_cast);
            tensor<int32, [2]> var_4931 = const()[name = tensor<string, []>("op_4931"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4933 = const()[name = tensor<string, []>("op_4933"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_65_pad_type_0 = const()[name = tensor<string, []>("k_65_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_65_pad_0 = const()[name = tensor<string, []>("k_65_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_1_transformer_blocks_0_attn1_to_k_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_1_transformer_blocks_0_attn1_to_k_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(407189120)))];
            tensor<fp16, [2, 1280, 1, 256]> k_65_cast = conv(dilations = var_4933, groups = var_4272, pad = k_65_pad_0, pad_type = k_65_pad_type_0, strides = var_4931, weight = up_blocks_1_attentions_1_transformer_blocks_0_attn1_to_k_weight_to_fp16, x = hidden_states_187_cast);
            tensor<int32, [2]> var_4937 = const()[name = tensor<string, []>("op_4937"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4939 = const()[name = tensor<string, []>("op_4939"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_33_pad_type_0 = const()[name = tensor<string, []>("v_33_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_33_pad_0 = const()[name = tensor<string, []>("v_33_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_1_transformer_blocks_0_attn1_to_v_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_1_transformer_blocks_0_attn1_to_v_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(410465984)))];
            tensor<fp16, [2, 1280, 1, 256]> v_33_cast = conv(dilations = var_4939, groups = var_4272, pad = v_33_pad_0, pad_type = v_33_pad_type_0, strides = var_4937, weight = up_blocks_1_attentions_1_transformer_blocks_0_attn1_to_v_weight_to_fp16, x = hidden_states_187_cast);
            tensor<int32, [4]> var_4943_begin_0 = const()[name = tensor<string, []>("op_4943_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_4943_end_0 = const()[name = tensor<string, []>("op_4943_end_0"), val = tensor<int32, [4]>([2, 160, 1, 256])];
            tensor<bool, [4]> var_4943_end_mask_0 = const()[name = tensor<string, []>("op_4943_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_4943_cast = slice_by_index(begin = var_4943_begin_0, end = var_4943_end_0, end_mask = var_4943_end_mask_0, x = q_33_cast);
            tensor<int32, [4]> var_4947_begin_0 = const()[name = tensor<string, []>("op_4947_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_4947_end_0 = const()[name = tensor<string, []>("op_4947_end_0"), val = tensor<int32, [4]>([2, 320, 1, 256])];
            tensor<bool, [4]> var_4947_end_mask_0 = const()[name = tensor<string, []>("op_4947_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_4947_cast = slice_by_index(begin = var_4947_begin_0, end = var_4947_end_0, end_mask = var_4947_end_mask_0, x = q_33_cast);
            tensor<int32, [4]> var_4951_begin_0 = const()[name = tensor<string, []>("op_4951_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_4951_end_0 = const()[name = tensor<string, []>("op_4951_end_0"), val = tensor<int32, [4]>([2, 480, 1, 256])];
            tensor<bool, [4]> var_4951_end_mask_0 = const()[name = tensor<string, []>("op_4951_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_4951_cast = slice_by_index(begin = var_4951_begin_0, end = var_4951_end_0, end_mask = var_4951_end_mask_0, x = q_33_cast);
            tensor<int32, [4]> var_4955_begin_0 = const()[name = tensor<string, []>("op_4955_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_4955_end_0 = const()[name = tensor<string, []>("op_4955_end_0"), val = tensor<int32, [4]>([2, 640, 1, 256])];
            tensor<bool, [4]> var_4955_end_mask_0 = const()[name = tensor<string, []>("op_4955_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_4955_cast = slice_by_index(begin = var_4955_begin_0, end = var_4955_end_0, end_mask = var_4955_end_mask_0, x = q_33_cast);
            tensor<int32, [4]> var_4959_begin_0 = const()[name = tensor<string, []>("op_4959_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_4959_end_0 = const()[name = tensor<string, []>("op_4959_end_0"), val = tensor<int32, [4]>([2, 800, 1, 256])];
            tensor<bool, [4]> var_4959_end_mask_0 = const()[name = tensor<string, []>("op_4959_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_4959_cast = slice_by_index(begin = var_4959_begin_0, end = var_4959_end_0, end_mask = var_4959_end_mask_0, x = q_33_cast);
            tensor<int32, [4]> var_4963_begin_0 = const()[name = tensor<string, []>("op_4963_begin_0"), val = tensor<int32, [4]>([0, 800, 0, 0])];
            tensor<int32, [4]> var_4963_end_0 = const()[name = tensor<string, []>("op_4963_end_0"), val = tensor<int32, [4]>([2, 960, 1, 256])];
            tensor<bool, [4]> var_4963_end_mask_0 = const()[name = tensor<string, []>("op_4963_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_4963_cast = slice_by_index(begin = var_4963_begin_0, end = var_4963_end_0, end_mask = var_4963_end_mask_0, x = q_33_cast);
            tensor<int32, [4]> var_4967_begin_0 = const()[name = tensor<string, []>("op_4967_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_4967_end_0 = const()[name = tensor<string, []>("op_4967_end_0"), val = tensor<int32, [4]>([2, 1120, 1, 256])];
            tensor<bool, [4]> var_4967_end_mask_0 = const()[name = tensor<string, []>("op_4967_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_4967_cast = slice_by_index(begin = var_4967_begin_0, end = var_4967_end_0, end_mask = var_4967_end_mask_0, x = q_33_cast);
            tensor<int32, [4]> var_4971_begin_0 = const()[name = tensor<string, []>("op_4971_begin_0"), val = tensor<int32, [4]>([0, 1120, 0, 0])];
            tensor<int32, [4]> var_4971_end_0 = const()[name = tensor<string, []>("op_4971_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 256])];
            tensor<bool, [4]> var_4971_end_mask_0 = const()[name = tensor<string, []>("op_4971_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_4971_cast = slice_by_index(begin = var_4971_begin_0, end = var_4971_end_0, end_mask = var_4971_end_mask_0, x = q_33_cast);
            tensor<int32, [4]> k_67_perm_0 = const()[name = tensor<string, []>("k_67_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_4978_begin_0 = const()[name = tensor<string, []>("op_4978_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_4978_end_0 = const()[name = tensor<string, []>("op_4978_end_0"), val = tensor<int32, [4]>([2, 256, 1, 160])];
            tensor<bool, [4]> var_4978_end_mask_0 = const()[name = tensor<string, []>("op_4978_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 1280]> transpose_15 = transpose(perm = k_67_perm_0, x = k_65_cast);
            tensor<fp16, [2, 256, 1, 160]> var_4978_cast = slice_by_index(begin = var_4978_begin_0, end = var_4978_end_0, end_mask = var_4978_end_mask_0, x = transpose_15);
            tensor<int32, [4]> var_4982_begin_0 = const()[name = tensor<string, []>("op_4982_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 160])];
            tensor<int32, [4]> var_4982_end_0 = const()[name = tensor<string, []>("op_4982_end_0"), val = tensor<int32, [4]>([2, 256, 1, 320])];
            tensor<bool, [4]> var_4982_end_mask_0 = const()[name = tensor<string, []>("op_4982_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_4982_cast = slice_by_index(begin = var_4982_begin_0, end = var_4982_end_0, end_mask = var_4982_end_mask_0, x = transpose_15);
            tensor<int32, [4]> var_4986_begin_0 = const()[name = tensor<string, []>("op_4986_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_4986_end_0 = const()[name = tensor<string, []>("op_4986_end_0"), val = tensor<int32, [4]>([2, 256, 1, 480])];
            tensor<bool, [4]> var_4986_end_mask_0 = const()[name = tensor<string, []>("op_4986_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_4986_cast = slice_by_index(begin = var_4986_begin_0, end = var_4986_end_0, end_mask = var_4986_end_mask_0, x = transpose_15);
            tensor<int32, [4]> var_4990_begin_0 = const()[name = tensor<string, []>("op_4990_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 480])];
            tensor<int32, [4]> var_4990_end_0 = const()[name = tensor<string, []>("op_4990_end_0"), val = tensor<int32, [4]>([2, 256, 1, 640])];
            tensor<bool, [4]> var_4990_end_mask_0 = const()[name = tensor<string, []>("op_4990_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_4990_cast = slice_by_index(begin = var_4990_begin_0, end = var_4990_end_0, end_mask = var_4990_end_mask_0, x = transpose_15);
            tensor<int32, [4]> var_4994_begin_0 = const()[name = tensor<string, []>("op_4994_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 640])];
            tensor<int32, [4]> var_4994_end_0 = const()[name = tensor<string, []>("op_4994_end_0"), val = tensor<int32, [4]>([2, 256, 1, 800])];
            tensor<bool, [4]> var_4994_end_mask_0 = const()[name = tensor<string, []>("op_4994_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_4994_cast = slice_by_index(begin = var_4994_begin_0, end = var_4994_end_0, end_mask = var_4994_end_mask_0, x = transpose_15);
            tensor<int32, [4]> var_4998_begin_0 = const()[name = tensor<string, []>("op_4998_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 800])];
            tensor<int32, [4]> var_4998_end_0 = const()[name = tensor<string, []>("op_4998_end_0"), val = tensor<int32, [4]>([2, 256, 1, 960])];
            tensor<bool, [4]> var_4998_end_mask_0 = const()[name = tensor<string, []>("op_4998_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_4998_cast = slice_by_index(begin = var_4998_begin_0, end = var_4998_end_0, end_mask = var_4998_end_mask_0, x = transpose_15);
            tensor<int32, [4]> var_5002_begin_0 = const()[name = tensor<string, []>("op_5002_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 960])];
            tensor<int32, [4]> var_5002_end_0 = const()[name = tensor<string, []>("op_5002_end_0"), val = tensor<int32, [4]>([2, 256, 1, 1120])];
            tensor<bool, [4]> var_5002_end_mask_0 = const()[name = tensor<string, []>("op_5002_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_5002_cast = slice_by_index(begin = var_5002_begin_0, end = var_5002_end_0, end_mask = var_5002_end_mask_0, x = transpose_15);
            tensor<int32, [4]> var_5006_begin_0 = const()[name = tensor<string, []>("op_5006_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1120])];
            tensor<int32, [4]> var_5006_end_0 = const()[name = tensor<string, []>("op_5006_end_0"), val = tensor<int32, [4]>([2, 256, 1, 1280])];
            tensor<bool, [4]> var_5006_end_mask_0 = const()[name = tensor<string, []>("op_5006_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_5006_cast = slice_by_index(begin = var_5006_begin_0, end = var_5006_end_0, end_mask = var_5006_end_mask_0, x = transpose_15);
            tensor<int32, [4]> var_5008_begin_0 = const()[name = tensor<string, []>("op_5008_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_5008_end_0 = const()[name = tensor<string, []>("op_5008_end_0"), val = tensor<int32, [4]>([2, 160, 1, 256])];
            tensor<bool, [4]> var_5008_end_mask_0 = const()[name = tensor<string, []>("op_5008_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5008_cast = slice_by_index(begin = var_5008_begin_0, end = var_5008_end_0, end_mask = var_5008_end_mask_0, x = v_33_cast);
            tensor<int32, [4]> var_5012_begin_0 = const()[name = tensor<string, []>("op_5012_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_5012_end_0 = const()[name = tensor<string, []>("op_5012_end_0"), val = tensor<int32, [4]>([2, 320, 1, 256])];
            tensor<bool, [4]> var_5012_end_mask_0 = const()[name = tensor<string, []>("op_5012_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5012_cast = slice_by_index(begin = var_5012_begin_0, end = var_5012_end_0, end_mask = var_5012_end_mask_0, x = v_33_cast);
            tensor<int32, [4]> var_5016_begin_0 = const()[name = tensor<string, []>("op_5016_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_5016_end_0 = const()[name = tensor<string, []>("op_5016_end_0"), val = tensor<int32, [4]>([2, 480, 1, 256])];
            tensor<bool, [4]> var_5016_end_mask_0 = const()[name = tensor<string, []>("op_5016_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5016_cast = slice_by_index(begin = var_5016_begin_0, end = var_5016_end_0, end_mask = var_5016_end_mask_0, x = v_33_cast);
            tensor<int32, [4]> var_5020_begin_0 = const()[name = tensor<string, []>("op_5020_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_5020_end_0 = const()[name = tensor<string, []>("op_5020_end_0"), val = tensor<int32, [4]>([2, 640, 1, 256])];
            tensor<bool, [4]> var_5020_end_mask_0 = const()[name = tensor<string, []>("op_5020_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5020_cast = slice_by_index(begin = var_5020_begin_0, end = var_5020_end_0, end_mask = var_5020_end_mask_0, x = v_33_cast);
            tensor<int32, [4]> var_5024_begin_0 = const()[name = tensor<string, []>("op_5024_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_5024_end_0 = const()[name = tensor<string, []>("op_5024_end_0"), val = tensor<int32, [4]>([2, 800, 1, 256])];
            tensor<bool, [4]> var_5024_end_mask_0 = const()[name = tensor<string, []>("op_5024_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5024_cast = slice_by_index(begin = var_5024_begin_0, end = var_5024_end_0, end_mask = var_5024_end_mask_0, x = v_33_cast);
            tensor<int32, [4]> var_5028_begin_0 = const()[name = tensor<string, []>("op_5028_begin_0"), val = tensor<int32, [4]>([0, 800, 0, 0])];
            tensor<int32, [4]> var_5028_end_0 = const()[name = tensor<string, []>("op_5028_end_0"), val = tensor<int32, [4]>([2, 960, 1, 256])];
            tensor<bool, [4]> var_5028_end_mask_0 = const()[name = tensor<string, []>("op_5028_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5028_cast = slice_by_index(begin = var_5028_begin_0, end = var_5028_end_0, end_mask = var_5028_end_mask_0, x = v_33_cast);
            tensor<int32, [4]> var_5032_begin_0 = const()[name = tensor<string, []>("op_5032_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_5032_end_0 = const()[name = tensor<string, []>("op_5032_end_0"), val = tensor<int32, [4]>([2, 1120, 1, 256])];
            tensor<bool, [4]> var_5032_end_mask_0 = const()[name = tensor<string, []>("op_5032_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5032_cast = slice_by_index(begin = var_5032_begin_0, end = var_5032_end_0, end_mask = var_5032_end_mask_0, x = v_33_cast);
            tensor<int32, [4]> var_5036_begin_0 = const()[name = tensor<string, []>("op_5036_begin_0"), val = tensor<int32, [4]>([0, 1120, 0, 0])];
            tensor<int32, [4]> var_5036_end_0 = const()[name = tensor<string, []>("op_5036_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 256])];
            tensor<bool, [4]> var_5036_end_mask_0 = const()[name = tensor<string, []>("op_5036_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5036_cast = slice_by_index(begin = var_5036_begin_0, end = var_5036_end_0, end_mask = var_5036_end_mask_0, x = v_33_cast);
            tensor<string, []> var_5040_equation_0 = const()[name = tensor<string, []>("op_5040_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_5040_cast = einsum(equation = var_5040_equation_0, values = (var_4978_cast, var_4943_cast));
            tensor<fp16, []> var_5041_to_fp16 = const()[name = tensor<string, []>("op_5041_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_257_cast = mul(x = var_5040_cast, y = var_5041_to_fp16);
            tensor<string, []> var_5044_equation_0 = const()[name = tensor<string, []>("op_5044_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_5044_cast = einsum(equation = var_5044_equation_0, values = (var_4982_cast, var_4947_cast));
            tensor<fp16, []> var_5045_to_fp16 = const()[name = tensor<string, []>("op_5045_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_259_cast = mul(x = var_5044_cast, y = var_5045_to_fp16);
            tensor<string, []> var_5048_equation_0 = const()[name = tensor<string, []>("op_5048_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_5048_cast = einsum(equation = var_5048_equation_0, values = (var_4986_cast, var_4951_cast));
            tensor<fp16, []> var_5049_to_fp16 = const()[name = tensor<string, []>("op_5049_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_261_cast = mul(x = var_5048_cast, y = var_5049_to_fp16);
            tensor<string, []> var_5052_equation_0 = const()[name = tensor<string, []>("op_5052_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_5052_cast = einsum(equation = var_5052_equation_0, values = (var_4990_cast, var_4955_cast));
            tensor<fp16, []> var_5053_to_fp16 = const()[name = tensor<string, []>("op_5053_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_263_cast = mul(x = var_5052_cast, y = var_5053_to_fp16);
            tensor<string, []> var_5056_equation_0 = const()[name = tensor<string, []>("op_5056_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_5056_cast = einsum(equation = var_5056_equation_0, values = (var_4994_cast, var_4959_cast));
            tensor<fp16, []> var_5057_to_fp16 = const()[name = tensor<string, []>("op_5057_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_265_cast = mul(x = var_5056_cast, y = var_5057_to_fp16);
            tensor<string, []> var_5060_equation_0 = const()[name = tensor<string, []>("op_5060_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_5060_cast = einsum(equation = var_5060_equation_0, values = (var_4998_cast, var_4963_cast));
            tensor<fp16, []> var_5061_to_fp16 = const()[name = tensor<string, []>("op_5061_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_267_cast = mul(x = var_5060_cast, y = var_5061_to_fp16);
            tensor<string, []> var_5064_equation_0 = const()[name = tensor<string, []>("op_5064_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_5064_cast = einsum(equation = var_5064_equation_0, values = (var_5002_cast, var_4967_cast));
            tensor<fp16, []> var_5065_to_fp16 = const()[name = tensor<string, []>("op_5065_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_269_cast = mul(x = var_5064_cast, y = var_5065_to_fp16);
            tensor<string, []> var_5068_equation_0 = const()[name = tensor<string, []>("op_5068_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_5068_cast = einsum(equation = var_5068_equation_0, values = (var_5006_cast, var_4971_cast));
            tensor<fp16, []> var_5069_to_fp16 = const()[name = tensor<string, []>("op_5069_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_271_cast = mul(x = var_5068_cast, y = var_5069_to_fp16);
            tensor<fp16, [2, 256, 1, 256]> var_5071_cast = softmax(axis = var_4272, x = aw_257_cast);
            tensor<fp16, [2, 256, 1, 256]> var_5072_cast = softmax(axis = var_4272, x = aw_259_cast);
            tensor<fp16, [2, 256, 1, 256]> var_5073_cast = softmax(axis = var_4272, x = aw_261_cast);
            tensor<fp16, [2, 256, 1, 256]> var_5074_cast = softmax(axis = var_4272, x = aw_263_cast);
            tensor<fp16, [2, 256, 1, 256]> var_5075_cast = softmax(axis = var_4272, x = aw_265_cast);
            tensor<fp16, [2, 256, 1, 256]> var_5076_cast = softmax(axis = var_4272, x = aw_267_cast);
            tensor<fp16, [2, 256, 1, 256]> var_5077_cast = softmax(axis = var_4272, x = aw_269_cast);
            tensor<fp16, [2, 256, 1, 256]> var_5078_cast = softmax(axis = var_4272, x = aw_271_cast);
            tensor<string, []> var_5080_equation_0 = const()[name = tensor<string, []>("op_5080_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_5080_cast = einsum(equation = var_5080_equation_0, values = (var_5008_cast, var_5071_cast));
            tensor<string, []> var_5082_equation_0 = const()[name = tensor<string, []>("op_5082_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_5082_cast = einsum(equation = var_5082_equation_0, values = (var_5012_cast, var_5072_cast));
            tensor<string, []> var_5084_equation_0 = const()[name = tensor<string, []>("op_5084_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_5084_cast = einsum(equation = var_5084_equation_0, values = (var_5016_cast, var_5073_cast));
            tensor<string, []> var_5086_equation_0 = const()[name = tensor<string, []>("op_5086_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_5086_cast = einsum(equation = var_5086_equation_0, values = (var_5020_cast, var_5074_cast));
            tensor<string, []> var_5088_equation_0 = const()[name = tensor<string, []>("op_5088_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_5088_cast = einsum(equation = var_5088_equation_0, values = (var_5024_cast, var_5075_cast));
            tensor<string, []> var_5090_equation_0 = const()[name = tensor<string, []>("op_5090_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_5090_cast = einsum(equation = var_5090_equation_0, values = (var_5028_cast, var_5076_cast));
            tensor<string, []> var_5092_equation_0 = const()[name = tensor<string, []>("op_5092_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_5092_cast = einsum(equation = var_5092_equation_0, values = (var_5032_cast, var_5077_cast));
            tensor<string, []> var_5094_equation_0 = const()[name = tensor<string, []>("op_5094_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_5094_cast = einsum(equation = var_5094_equation_0, values = (var_5036_cast, var_5078_cast));
            tensor<bool, []> input_327_interleave_0 = const()[name = tensor<string, []>("input_327_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 1280, 1, 256]> input_327_cast = concat(axis = var_4272, interleave = input_327_interleave_0, values = (var_5080_cast, var_5082_cast, var_5084_cast, var_5086_cast, var_5088_cast, var_5090_cast, var_5092_cast, var_5094_cast));
            tensor<int32, [2]> var_5100 = const()[name = tensor<string, []>("op_5100"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5102 = const()[name = tensor<string, []>("op_5102"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_5104_pad_type_0 = const()[name = tensor<string, []>("op_5104_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_5104_pad_0 = const()[name = tensor<string, []>("op_5104_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_1_transformer_blocks_0_attn1_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_1_transformer_blocks_0_attn1_to_out_0_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(413742848)))];
            tensor<fp16, [1280]> up_blocks_1_attentions_1_transformer_blocks_0_attn1_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_1_transformer_blocks_0_attn1_to_out_0_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(417019712)))];
            tensor<fp16, [2, 1280, 1, 256]> var_5104_cast = conv(bias = up_blocks_1_attentions_1_transformer_blocks_0_attn1_to_out_0_bias_to_fp16, dilations = var_5102, groups = var_4272, pad = var_5104_pad_0, pad_type = var_5104_pad_type_0, strides = var_5100, weight = up_blocks_1_attentions_1_transformer_blocks_0_attn1_to_out_0_weight_to_fp16, x = input_327_cast);
            tensor<fp16, [2, 1280, 1, 256]> inputs_51_cast = add(x = var_5104_cast, y = inputs_49_cast);
            tensor<int32, [1]> var_5108 = const()[name = tensor<string, []>("op_5108"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> channels_mean_51_cast = reduce_mean(axes = var_5108, keep_dims = var_4267, x = inputs_51_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_51_cast = sub(x = inputs_51_cast, y = channels_mean_51_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_sq_51_cast = mul(x = zero_mean_51_cast, y = zero_mean_51_cast);
            tensor<int32, [1]> var_5112 = const()[name = tensor<string, []>("op_5112"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> var_5113_cast = reduce_mean(axes = var_5112, keep_dims = var_4267, x = zero_mean_sq_51_cast);
            tensor<fp16, []> var_5114_to_fp16 = const()[name = tensor<string, []>("op_5114_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 256]> var_5115_cast = add(x = var_5113_cast, y = var_5114_to_fp16);
            tensor<fp16, []> denom_51_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_51_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 256]> denom_51_cast = rsqrt(epsilon = denom_51_epsilon_0_to_fp16, x = var_5115_cast);
            tensor<fp16, [2, 1280, 1, 256]> out_51_cast = mul(x = zero_mean_51_cast, y = denom_51_cast);
            tensor<fp16, [1, 1280, 1, 1]> var_5119_to_fp16 = const()[name = tensor<string, []>("op_5119_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(417022336)))];
            tensor<fp16, [2, 1280, 1, 256]> var_5120_cast = add(x = out_51_cast, y = var_5119_to_fp16);
            tensor<fp16, [1, 1280, 1, 1]> var_5122_to_fp16 = const()[name = tensor<string, []>("op_5122_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(417024960)))];
            tensor<fp16, [2, 1280, 1, 256]> hidden_states_189_cast = mul(x = var_5120_cast, y = var_5122_to_fp16);
            tensor<int32, [2]> var_5129 = const()[name = tensor<string, []>("op_5129"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5131 = const()[name = tensor<string, []>("op_5131"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_35_pad_type_0 = const()[name = tensor<string, []>("q_35_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_35_pad_0 = const()[name = tensor<string, []>("q_35_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_1_transformer_blocks_0_attn2_to_q_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_1_transformer_blocks_0_attn2_to_q_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(417027584)))];
            tensor<fp16, [2, 1280, 1, 256]> q_35_cast = conv(dilations = var_5131, groups = var_4272, pad = q_35_pad_0, pad_type = q_35_pad_type_0, strides = var_5129, weight = up_blocks_1_attentions_1_transformer_blocks_0_attn2_to_q_weight_to_fp16, x = hidden_states_189_cast);
            tensor<int32, [2]> var_5135 = const()[name = tensor<string, []>("op_5135"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5137 = const()[name = tensor<string, []>("op_5137"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_69_pad_type_0 = const()[name = tensor<string, []>("k_69_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_69_pad_0 = const()[name = tensor<string, []>("k_69_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 768, 1, 1]> up_blocks_1_attentions_1_transformer_blocks_0_attn2_to_k_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_1_transformer_blocks_0_attn2_to_k_weight_to_fp16"), val = tensor<fp16, [1280, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(420304448)))];
            tensor<fp16, [2, 1280, 1, 77]> k_69_cast = conv(dilations = var_5137, groups = var_4272, pad = k_69_pad_0, pad_type = k_69_pad_type_0, strides = var_5135, weight = up_blocks_1_attentions_1_transformer_blocks_0_attn2_to_k_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [2]> var_5141 = const()[name = tensor<string, []>("op_5141"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5143 = const()[name = tensor<string, []>("op_5143"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_35_pad_type_0 = const()[name = tensor<string, []>("v_35_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_35_pad_0 = const()[name = tensor<string, []>("v_35_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 768, 1, 1]> up_blocks_1_attentions_1_transformer_blocks_0_attn2_to_v_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_1_transformer_blocks_0_attn2_to_v_weight_to_fp16"), val = tensor<fp16, [1280, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(422270592)))];
            tensor<fp16, [2, 1280, 1, 77]> v_35_cast = conv(dilations = var_5143, groups = var_4272, pad = v_35_pad_0, pad_type = v_35_pad_type_0, strides = var_5141, weight = up_blocks_1_attentions_1_transformer_blocks_0_attn2_to_v_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [4]> var_5147_begin_0 = const()[name = tensor<string, []>("op_5147_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_5147_end_0 = const()[name = tensor<string, []>("op_5147_end_0"), val = tensor<int32, [4]>([2, 160, 1, 256])];
            tensor<bool, [4]> var_5147_end_mask_0 = const()[name = tensor<string, []>("op_5147_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5147_cast = slice_by_index(begin = var_5147_begin_0, end = var_5147_end_0, end_mask = var_5147_end_mask_0, x = q_35_cast);
            tensor<int32, [4]> var_5151_begin_0 = const()[name = tensor<string, []>("op_5151_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_5151_end_0 = const()[name = tensor<string, []>("op_5151_end_0"), val = tensor<int32, [4]>([2, 320, 1, 256])];
            tensor<bool, [4]> var_5151_end_mask_0 = const()[name = tensor<string, []>("op_5151_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5151_cast = slice_by_index(begin = var_5151_begin_0, end = var_5151_end_0, end_mask = var_5151_end_mask_0, x = q_35_cast);
            tensor<int32, [4]> var_5155_begin_0 = const()[name = tensor<string, []>("op_5155_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_5155_end_0 = const()[name = tensor<string, []>("op_5155_end_0"), val = tensor<int32, [4]>([2, 480, 1, 256])];
            tensor<bool, [4]> var_5155_end_mask_0 = const()[name = tensor<string, []>("op_5155_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5155_cast = slice_by_index(begin = var_5155_begin_0, end = var_5155_end_0, end_mask = var_5155_end_mask_0, x = q_35_cast);
            tensor<int32, [4]> var_5159_begin_0 = const()[name = tensor<string, []>("op_5159_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_5159_end_0 = const()[name = tensor<string, []>("op_5159_end_0"), val = tensor<int32, [4]>([2, 640, 1, 256])];
            tensor<bool, [4]> var_5159_end_mask_0 = const()[name = tensor<string, []>("op_5159_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5159_cast = slice_by_index(begin = var_5159_begin_0, end = var_5159_end_0, end_mask = var_5159_end_mask_0, x = q_35_cast);
            tensor<int32, [4]> var_5163_begin_0 = const()[name = tensor<string, []>("op_5163_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_5163_end_0 = const()[name = tensor<string, []>("op_5163_end_0"), val = tensor<int32, [4]>([2, 800, 1, 256])];
            tensor<bool, [4]> var_5163_end_mask_0 = const()[name = tensor<string, []>("op_5163_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5163_cast = slice_by_index(begin = var_5163_begin_0, end = var_5163_end_0, end_mask = var_5163_end_mask_0, x = q_35_cast);
            tensor<int32, [4]> var_5167_begin_0 = const()[name = tensor<string, []>("op_5167_begin_0"), val = tensor<int32, [4]>([0, 800, 0, 0])];
            tensor<int32, [4]> var_5167_end_0 = const()[name = tensor<string, []>("op_5167_end_0"), val = tensor<int32, [4]>([2, 960, 1, 256])];
            tensor<bool, [4]> var_5167_end_mask_0 = const()[name = tensor<string, []>("op_5167_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5167_cast = slice_by_index(begin = var_5167_begin_0, end = var_5167_end_0, end_mask = var_5167_end_mask_0, x = q_35_cast);
            tensor<int32, [4]> var_5171_begin_0 = const()[name = tensor<string, []>("op_5171_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_5171_end_0 = const()[name = tensor<string, []>("op_5171_end_0"), val = tensor<int32, [4]>([2, 1120, 1, 256])];
            tensor<bool, [4]> var_5171_end_mask_0 = const()[name = tensor<string, []>("op_5171_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5171_cast = slice_by_index(begin = var_5171_begin_0, end = var_5171_end_0, end_mask = var_5171_end_mask_0, x = q_35_cast);
            tensor<int32, [4]> var_5175_begin_0 = const()[name = tensor<string, []>("op_5175_begin_0"), val = tensor<int32, [4]>([0, 1120, 0, 0])];
            tensor<int32, [4]> var_5175_end_0 = const()[name = tensor<string, []>("op_5175_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 256])];
            tensor<bool, [4]> var_5175_end_mask_0 = const()[name = tensor<string, []>("op_5175_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5175_cast = slice_by_index(begin = var_5175_begin_0, end = var_5175_end_0, end_mask = var_5175_end_mask_0, x = q_35_cast);
            tensor<int32, [4]> k_71_perm_0 = const()[name = tensor<string, []>("k_71_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_5182_begin_0 = const()[name = tensor<string, []>("op_5182_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_5182_end_0 = const()[name = tensor<string, []>("op_5182_end_0"), val = tensor<int32, [4]>([2, 77, 1, 160])];
            tensor<bool, [4]> var_5182_end_mask_0 = const()[name = tensor<string, []>("op_5182_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 1280]> transpose_14 = transpose(perm = k_71_perm_0, x = k_69_cast);
            tensor<fp16, [2, 77, 1, 160]> var_5182_cast = slice_by_index(begin = var_5182_begin_0, end = var_5182_end_0, end_mask = var_5182_end_mask_0, x = transpose_14);
            tensor<int32, [4]> var_5186_begin_0 = const()[name = tensor<string, []>("op_5186_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 160])];
            tensor<int32, [4]> var_5186_end_0 = const()[name = tensor<string, []>("op_5186_end_0"), val = tensor<int32, [4]>([2, 77, 1, 320])];
            tensor<bool, [4]> var_5186_end_mask_0 = const()[name = tensor<string, []>("op_5186_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_5186_cast = slice_by_index(begin = var_5186_begin_0, end = var_5186_end_0, end_mask = var_5186_end_mask_0, x = transpose_14);
            tensor<int32, [4]> var_5190_begin_0 = const()[name = tensor<string, []>("op_5190_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_5190_end_0 = const()[name = tensor<string, []>("op_5190_end_0"), val = tensor<int32, [4]>([2, 77, 1, 480])];
            tensor<bool, [4]> var_5190_end_mask_0 = const()[name = tensor<string, []>("op_5190_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_5190_cast = slice_by_index(begin = var_5190_begin_0, end = var_5190_end_0, end_mask = var_5190_end_mask_0, x = transpose_14);
            tensor<int32, [4]> var_5194_begin_0 = const()[name = tensor<string, []>("op_5194_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 480])];
            tensor<int32, [4]> var_5194_end_0 = const()[name = tensor<string, []>("op_5194_end_0"), val = tensor<int32, [4]>([2, 77, 1, 640])];
            tensor<bool, [4]> var_5194_end_mask_0 = const()[name = tensor<string, []>("op_5194_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_5194_cast = slice_by_index(begin = var_5194_begin_0, end = var_5194_end_0, end_mask = var_5194_end_mask_0, x = transpose_14);
            tensor<int32, [4]> var_5198_begin_0 = const()[name = tensor<string, []>("op_5198_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 640])];
            tensor<int32, [4]> var_5198_end_0 = const()[name = tensor<string, []>("op_5198_end_0"), val = tensor<int32, [4]>([2, 77, 1, 800])];
            tensor<bool, [4]> var_5198_end_mask_0 = const()[name = tensor<string, []>("op_5198_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_5198_cast = slice_by_index(begin = var_5198_begin_0, end = var_5198_end_0, end_mask = var_5198_end_mask_0, x = transpose_14);
            tensor<int32, [4]> var_5202_begin_0 = const()[name = tensor<string, []>("op_5202_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 800])];
            tensor<int32, [4]> var_5202_end_0 = const()[name = tensor<string, []>("op_5202_end_0"), val = tensor<int32, [4]>([2, 77, 1, 960])];
            tensor<bool, [4]> var_5202_end_mask_0 = const()[name = tensor<string, []>("op_5202_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_5202_cast = slice_by_index(begin = var_5202_begin_0, end = var_5202_end_0, end_mask = var_5202_end_mask_0, x = transpose_14);
            tensor<int32, [4]> var_5206_begin_0 = const()[name = tensor<string, []>("op_5206_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 960])];
            tensor<int32, [4]> var_5206_end_0 = const()[name = tensor<string, []>("op_5206_end_0"), val = tensor<int32, [4]>([2, 77, 1, 1120])];
            tensor<bool, [4]> var_5206_end_mask_0 = const()[name = tensor<string, []>("op_5206_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_5206_cast = slice_by_index(begin = var_5206_begin_0, end = var_5206_end_0, end_mask = var_5206_end_mask_0, x = transpose_14);
            tensor<int32, [4]> var_5210_begin_0 = const()[name = tensor<string, []>("op_5210_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1120])];
            tensor<int32, [4]> var_5210_end_0 = const()[name = tensor<string, []>("op_5210_end_0"), val = tensor<int32, [4]>([2, 77, 1, 1280])];
            tensor<bool, [4]> var_5210_end_mask_0 = const()[name = tensor<string, []>("op_5210_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_5210_cast = slice_by_index(begin = var_5210_begin_0, end = var_5210_end_0, end_mask = var_5210_end_mask_0, x = transpose_14);
            tensor<int32, [4]> var_5212_begin_0 = const()[name = tensor<string, []>("op_5212_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_5212_end_0 = const()[name = tensor<string, []>("op_5212_end_0"), val = tensor<int32, [4]>([2, 160, 1, 77])];
            tensor<bool, [4]> var_5212_end_mask_0 = const()[name = tensor<string, []>("op_5212_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_5212_cast = slice_by_index(begin = var_5212_begin_0, end = var_5212_end_0, end_mask = var_5212_end_mask_0, x = v_35_cast);
            tensor<int32, [4]> var_5216_begin_0 = const()[name = tensor<string, []>("op_5216_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_5216_end_0 = const()[name = tensor<string, []>("op_5216_end_0"), val = tensor<int32, [4]>([2, 320, 1, 77])];
            tensor<bool, [4]> var_5216_end_mask_0 = const()[name = tensor<string, []>("op_5216_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_5216_cast = slice_by_index(begin = var_5216_begin_0, end = var_5216_end_0, end_mask = var_5216_end_mask_0, x = v_35_cast);
            tensor<int32, [4]> var_5220_begin_0 = const()[name = tensor<string, []>("op_5220_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_5220_end_0 = const()[name = tensor<string, []>("op_5220_end_0"), val = tensor<int32, [4]>([2, 480, 1, 77])];
            tensor<bool, [4]> var_5220_end_mask_0 = const()[name = tensor<string, []>("op_5220_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_5220_cast = slice_by_index(begin = var_5220_begin_0, end = var_5220_end_0, end_mask = var_5220_end_mask_0, x = v_35_cast);
            tensor<int32, [4]> var_5224_begin_0 = const()[name = tensor<string, []>("op_5224_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_5224_end_0 = const()[name = tensor<string, []>("op_5224_end_0"), val = tensor<int32, [4]>([2, 640, 1, 77])];
            tensor<bool, [4]> var_5224_end_mask_0 = const()[name = tensor<string, []>("op_5224_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_5224_cast = slice_by_index(begin = var_5224_begin_0, end = var_5224_end_0, end_mask = var_5224_end_mask_0, x = v_35_cast);
            tensor<int32, [4]> var_5228_begin_0 = const()[name = tensor<string, []>("op_5228_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_5228_end_0 = const()[name = tensor<string, []>("op_5228_end_0"), val = tensor<int32, [4]>([2, 800, 1, 77])];
            tensor<bool, [4]> var_5228_end_mask_0 = const()[name = tensor<string, []>("op_5228_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_5228_cast = slice_by_index(begin = var_5228_begin_0, end = var_5228_end_0, end_mask = var_5228_end_mask_0, x = v_35_cast);
            tensor<int32, [4]> var_5232_begin_0 = const()[name = tensor<string, []>("op_5232_begin_0"), val = tensor<int32, [4]>([0, 800, 0, 0])];
            tensor<int32, [4]> var_5232_end_0 = const()[name = tensor<string, []>("op_5232_end_0"), val = tensor<int32, [4]>([2, 960, 1, 77])];
            tensor<bool, [4]> var_5232_end_mask_0 = const()[name = tensor<string, []>("op_5232_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_5232_cast = slice_by_index(begin = var_5232_begin_0, end = var_5232_end_0, end_mask = var_5232_end_mask_0, x = v_35_cast);
            tensor<int32, [4]> var_5236_begin_0 = const()[name = tensor<string, []>("op_5236_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_5236_end_0 = const()[name = tensor<string, []>("op_5236_end_0"), val = tensor<int32, [4]>([2, 1120, 1, 77])];
            tensor<bool, [4]> var_5236_end_mask_0 = const()[name = tensor<string, []>("op_5236_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_5236_cast = slice_by_index(begin = var_5236_begin_0, end = var_5236_end_0, end_mask = var_5236_end_mask_0, x = v_35_cast);
            tensor<int32, [4]> var_5240_begin_0 = const()[name = tensor<string, []>("op_5240_begin_0"), val = tensor<int32, [4]>([0, 1120, 0, 0])];
            tensor<int32, [4]> var_5240_end_0 = const()[name = tensor<string, []>("op_5240_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 77])];
            tensor<bool, [4]> var_5240_end_mask_0 = const()[name = tensor<string, []>("op_5240_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_5240_cast = slice_by_index(begin = var_5240_begin_0, end = var_5240_end_0, end_mask = var_5240_end_mask_0, x = v_35_cast);
            tensor<string, []> var_5244_equation_0 = const()[name = tensor<string, []>("op_5244_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_5244_cast = einsum(equation = var_5244_equation_0, values = (var_5182_cast, var_5147_cast));
            tensor<fp16, []> var_5245_to_fp16 = const()[name = tensor<string, []>("op_5245_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_273_cast = mul(x = var_5244_cast, y = var_5245_to_fp16);
            tensor<string, []> var_5248_equation_0 = const()[name = tensor<string, []>("op_5248_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_5248_cast = einsum(equation = var_5248_equation_0, values = (var_5186_cast, var_5151_cast));
            tensor<fp16, []> var_5249_to_fp16 = const()[name = tensor<string, []>("op_5249_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_275_cast = mul(x = var_5248_cast, y = var_5249_to_fp16);
            tensor<string, []> var_5252_equation_0 = const()[name = tensor<string, []>("op_5252_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_5252_cast = einsum(equation = var_5252_equation_0, values = (var_5190_cast, var_5155_cast));
            tensor<fp16, []> var_5253_to_fp16 = const()[name = tensor<string, []>("op_5253_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_277_cast = mul(x = var_5252_cast, y = var_5253_to_fp16);
            tensor<string, []> var_5256_equation_0 = const()[name = tensor<string, []>("op_5256_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_5256_cast = einsum(equation = var_5256_equation_0, values = (var_5194_cast, var_5159_cast));
            tensor<fp16, []> var_5257_to_fp16 = const()[name = tensor<string, []>("op_5257_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_279_cast = mul(x = var_5256_cast, y = var_5257_to_fp16);
            tensor<string, []> var_5260_equation_0 = const()[name = tensor<string, []>("op_5260_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_5260_cast = einsum(equation = var_5260_equation_0, values = (var_5198_cast, var_5163_cast));
            tensor<fp16, []> var_5261_to_fp16 = const()[name = tensor<string, []>("op_5261_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_281_cast = mul(x = var_5260_cast, y = var_5261_to_fp16);
            tensor<string, []> var_5264_equation_0 = const()[name = tensor<string, []>("op_5264_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_5264_cast = einsum(equation = var_5264_equation_0, values = (var_5202_cast, var_5167_cast));
            tensor<fp16, []> var_5265_to_fp16 = const()[name = tensor<string, []>("op_5265_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_283_cast = mul(x = var_5264_cast, y = var_5265_to_fp16);
            tensor<string, []> var_5268_equation_0 = const()[name = tensor<string, []>("op_5268_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_5268_cast = einsum(equation = var_5268_equation_0, values = (var_5206_cast, var_5171_cast));
            tensor<fp16, []> var_5269_to_fp16 = const()[name = tensor<string, []>("op_5269_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_285_cast = mul(x = var_5268_cast, y = var_5269_to_fp16);
            tensor<string, []> var_5272_equation_0 = const()[name = tensor<string, []>("op_5272_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_5272_cast = einsum(equation = var_5272_equation_0, values = (var_5210_cast, var_5175_cast));
            tensor<fp16, []> var_5273_to_fp16 = const()[name = tensor<string, []>("op_5273_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_287_cast = mul(x = var_5272_cast, y = var_5273_to_fp16);
            tensor<fp16, [2, 77, 1, 256]> var_5275_cast = softmax(axis = var_4272, x = aw_273_cast);
            tensor<fp16, [2, 77, 1, 256]> var_5276_cast = softmax(axis = var_4272, x = aw_275_cast);
            tensor<fp16, [2, 77, 1, 256]> var_5277_cast = softmax(axis = var_4272, x = aw_277_cast);
            tensor<fp16, [2, 77, 1, 256]> var_5278_cast = softmax(axis = var_4272, x = aw_279_cast);
            tensor<fp16, [2, 77, 1, 256]> var_5279_cast = softmax(axis = var_4272, x = aw_281_cast);
            tensor<fp16, [2, 77, 1, 256]> var_5280_cast = softmax(axis = var_4272, x = aw_283_cast);
            tensor<fp16, [2, 77, 1, 256]> var_5281_cast = softmax(axis = var_4272, x = aw_285_cast);
            tensor<fp16, [2, 77, 1, 256]> var_5282_cast = softmax(axis = var_4272, x = aw_287_cast);
            tensor<string, []> var_5284_equation_0 = const()[name = tensor<string, []>("op_5284_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_5284_cast = einsum(equation = var_5284_equation_0, values = (var_5212_cast, var_5275_cast));
            tensor<string, []> var_5286_equation_0 = const()[name = tensor<string, []>("op_5286_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_5286_cast = einsum(equation = var_5286_equation_0, values = (var_5216_cast, var_5276_cast));
            tensor<string, []> var_5288_equation_0 = const()[name = tensor<string, []>("op_5288_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_5288_cast = einsum(equation = var_5288_equation_0, values = (var_5220_cast, var_5277_cast));
            tensor<string, []> var_5290_equation_0 = const()[name = tensor<string, []>("op_5290_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_5290_cast = einsum(equation = var_5290_equation_0, values = (var_5224_cast, var_5278_cast));
            tensor<string, []> var_5292_equation_0 = const()[name = tensor<string, []>("op_5292_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_5292_cast = einsum(equation = var_5292_equation_0, values = (var_5228_cast, var_5279_cast));
            tensor<string, []> var_5294_equation_0 = const()[name = tensor<string, []>("op_5294_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_5294_cast = einsum(equation = var_5294_equation_0, values = (var_5232_cast, var_5280_cast));
            tensor<string, []> var_5296_equation_0 = const()[name = tensor<string, []>("op_5296_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_5296_cast = einsum(equation = var_5296_equation_0, values = (var_5236_cast, var_5281_cast));
            tensor<string, []> var_5298_equation_0 = const()[name = tensor<string, []>("op_5298_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_5298_cast = einsum(equation = var_5298_equation_0, values = (var_5240_cast, var_5282_cast));
            tensor<bool, []> input_329_interleave_0 = const()[name = tensor<string, []>("input_329_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 1280, 1, 256]> input_329_cast = concat(axis = var_4272, interleave = input_329_interleave_0, values = (var_5284_cast, var_5286_cast, var_5288_cast, var_5290_cast, var_5292_cast, var_5294_cast, var_5296_cast, var_5298_cast));
            tensor<int32, [2]> var_5304 = const()[name = tensor<string, []>("op_5304"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5306 = const()[name = tensor<string, []>("op_5306"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_5308_pad_type_0 = const()[name = tensor<string, []>("op_5308_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_5308_pad_0 = const()[name = tensor<string, []>("op_5308_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_1_transformer_blocks_0_attn2_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_1_transformer_blocks_0_attn2_to_out_0_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(424236736)))];
            tensor<fp16, [1280]> up_blocks_1_attentions_1_transformer_blocks_0_attn2_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_1_transformer_blocks_0_attn2_to_out_0_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(427513600)))];
            tensor<fp16, [2, 1280, 1, 256]> var_5308_cast = conv(bias = up_blocks_1_attentions_1_transformer_blocks_0_attn2_to_out_0_bias_to_fp16, dilations = var_5306, groups = var_4272, pad = var_5308_pad_0, pad_type = var_5308_pad_type_0, strides = var_5304, weight = up_blocks_1_attentions_1_transformer_blocks_0_attn2_to_out_0_weight_to_fp16, x = input_329_cast);
            tensor<fp16, [2, 1280, 1, 256]> inputs_53_cast = add(x = var_5308_cast, y = inputs_51_cast);
            tensor<int32, [1]> var_5312 = const()[name = tensor<string, []>("op_5312"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> channels_mean_53_cast = reduce_mean(axes = var_5312, keep_dims = var_4267, x = inputs_53_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_53_cast = sub(x = inputs_53_cast, y = channels_mean_53_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_sq_53_cast = mul(x = zero_mean_53_cast, y = zero_mean_53_cast);
            tensor<int32, [1]> var_5316 = const()[name = tensor<string, []>("op_5316"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> var_5317_cast = reduce_mean(axes = var_5316, keep_dims = var_4267, x = zero_mean_sq_53_cast);
            tensor<fp16, []> var_5318_to_fp16 = const()[name = tensor<string, []>("op_5318_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 256]> var_5319_cast = add(x = var_5317_cast, y = var_5318_to_fp16);
            tensor<fp16, []> denom_53_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_53_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 256]> denom_53_cast = rsqrt(epsilon = denom_53_epsilon_0_to_fp16, x = var_5319_cast);
            tensor<fp16, [2, 1280, 1, 256]> out_53_cast = mul(x = zero_mean_53_cast, y = denom_53_cast);
            tensor<fp16, [1, 1280, 1, 1]> var_5323_to_fp16 = const()[name = tensor<string, []>("op_5323_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(427516224)))];
            tensor<fp16, [2, 1280, 1, 256]> var_5324_cast = add(x = out_53_cast, y = var_5323_to_fp16);
            tensor<fp16, [1, 1280, 1, 1]> var_5326_to_fp16 = const()[name = tensor<string, []>("op_5326_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(427518848)))];
            tensor<fp16, [2, 1280, 1, 256]> input_331_cast = mul(x = var_5324_cast, y = var_5326_to_fp16);
            tensor<int32, [2]> var_5334 = const()[name = tensor<string, []>("op_5334"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5336 = const()[name = tensor<string, []>("op_5336"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_5338_pad_type_0 = const()[name = tensor<string, []>("op_5338_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_5338_pad_0 = const()[name = tensor<string, []>("op_5338_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [10240, 1280, 1, 1]> up_blocks_1_attentions_1_transformer_blocks_0_ff_net_0_proj_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_1_transformer_blocks_0_ff_net_0_proj_weight_to_fp16"), val = tensor<fp16, [10240, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(427521472)))];
            tensor<fp16, [10240]> up_blocks_1_attentions_1_transformer_blocks_0_ff_net_0_proj_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_1_transformer_blocks_0_ff_net_0_proj_bias_to_fp16"), val = tensor<fp16, [10240]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(453735936)))];
            tensor<fp16, [2, 10240, 1, 256]> var_5338_cast = conv(bias = up_blocks_1_attentions_1_transformer_blocks_0_ff_net_0_proj_bias_to_fp16, dilations = var_5336, groups = var_4272, pad = var_5338_pad_0, pad_type = var_5338_pad_type_0, strides = var_5334, weight = up_blocks_1_attentions_1_transformer_blocks_0_ff_net_0_proj_weight_to_fp16, x = input_331_cast);
            tensor<int32, [2]> var_5339_split_sizes_0 = const()[name = tensor<string, []>("op_5339_split_sizes_0"), val = tensor<int32, [2]>([5120, 5120])];
            tensor<int32, []> var_5339_axis_0 = const()[name = tensor<string, []>("op_5339_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [2, 5120, 1, 256]> var_5339_cast_0, tensor<fp16, [2, 5120, 1, 256]> var_5339_cast_1 = split(axis = var_5339_axis_0, split_sizes = var_5339_split_sizes_0, x = var_5338_cast);
            tensor<string, []> var_5341_mode_0 = const()[name = tensor<string, []>("op_5341_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [2, 5120, 1, 256]> var_5341_cast = gelu(mode = var_5341_mode_0, x = var_5339_cast_1);
            tensor<fp16, [2, 5120, 1, 256]> input_333_cast = mul(x = var_5339_cast_0, y = var_5341_cast);
            tensor<int32, [2]> var_5345 = const()[name = tensor<string, []>("op_5345"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5347 = const()[name = tensor<string, []>("op_5347"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_5349_pad_type_0 = const()[name = tensor<string, []>("op_5349_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_5349_pad_0 = const()[name = tensor<string, []>("op_5349_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 5120, 1, 1]> up_blocks_1_attentions_1_transformer_blocks_0_ff_net_2_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_1_transformer_blocks_0_ff_net_2_weight_to_fp16"), val = tensor<fp16, [1280, 5120, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(453756480)))];
            tensor<fp16, [1280]> up_blocks_1_attentions_1_transformer_blocks_0_ff_net_2_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_1_transformer_blocks_0_ff_net_2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(466863744)))];
            tensor<fp16, [2, 1280, 1, 256]> var_5349_cast = conv(bias = up_blocks_1_attentions_1_transformer_blocks_0_ff_net_2_bias_to_fp16, dilations = var_5347, groups = var_4272, pad = var_5349_pad_0, pad_type = var_5349_pad_type_0, strides = var_5345, weight = up_blocks_1_attentions_1_transformer_blocks_0_ff_net_2_weight_to_fp16, x = input_333_cast);
            tensor<fp16, [2, 1280, 1, 256]> hidden_states_193_cast = add(x = var_5349_cast, y = inputs_53_cast);
            tensor<int32, [4]> var_5351 = const()[name = tensor<string, []>("op_5351"), val = tensor<int32, [4]>([2, 1280, 16, 16])];
            tensor<fp16, [2, 1280, 16, 16]> input_335_cast = reshape(shape = var_5351, x = hidden_states_193_cast);
            tensor<int32, [2]> var_5355 = const()[name = tensor<string, []>("op_5355"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5357 = const()[name = tensor<string, []>("op_5357"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_195_pad_type_0 = const()[name = tensor<string, []>("hidden_states_195_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_195_pad_0 = const()[name = tensor<string, []>("hidden_states_195_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_1_proj_out_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_1_proj_out_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(466866368)))];
            tensor<fp16, [1280]> up_blocks_1_attentions_1_proj_out_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_1_proj_out_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(470143232)))];
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_195_cast = conv(bias = up_blocks_1_attentions_1_proj_out_bias_to_fp16, dilations = var_5357, groups = var_4272, pad = hidden_states_195_pad_0, pad_type = hidden_states_195_pad_type_0, strides = var_5355, weight = up_blocks_1_attentions_1_proj_out_weight_to_fp16, x = input_335_cast);
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_197_cast = add(x = hidden_states_195_cast, y = hidden_states_183_cast);
            tensor<bool, []> input_337_interleave_0 = const()[name = tensor<string, []>("input_337_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 640, 16, 16]> cast_6 = cast(dtype = cast_9_dtype_0, x = input_117_cast);
            tensor<fp16, [2, 1920, 16, 16]> input_337_cast = concat(axis = var_4272, interleave = input_337_interleave_0, values = (hidden_states_197_cast, cast_6));
            tensor<int32, [5]> reshape_156_shape_0 = const()[name = tensor<string, []>("reshape_156_shape_0"), val = tensor<int32, [5]>([2, 32, 60, 16, 16])];
            tensor<fp16, [2, 32, 60, 16, 16]> reshape_156_cast = reshape(shape = reshape_156_shape_0, x = input_337_cast);
            tensor<int32, [3]> reduce_mean_117_axes_0 = const()[name = tensor<string, []>("reduce_mean_117_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_117_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_117_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_117_cast = reduce_mean(axes = reduce_mean_117_axes_0, keep_dims = reduce_mean_117_keep_dims_0, x = reshape_156_cast);
            tensor<fp16, [2, 32, 60, 16, 16]> sub_78_cast = sub(x = reshape_156_cast, y = reduce_mean_117_cast);
            tensor<fp16, [2, 32, 60, 16, 16]> square_39_cast = square(x = sub_78_cast);
            tensor<int32, [3]> reduce_mean_119_axes_0 = const()[name = tensor<string, []>("reduce_mean_119_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_119_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_119_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_119_cast = reduce_mean(axes = reduce_mean_119_axes_0, keep_dims = reduce_mean_119_keep_dims_0, x = square_39_cast);
            tensor<fp16, []> add_78_y_0_to_fp16 = const()[name = tensor<string, []>("add_78_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_78_cast = add(x = reduce_mean_119_cast, y = add_78_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_39_cast = sqrt(x = add_78_cast);
            tensor<fp16, [2, 32, 60, 16, 16]> real_div_39_cast = real_div(x = sub_78_cast, y = sqrt_39_cast);
            tensor<int32, [4]> reshape_157_shape_0 = const()[name = tensor<string, []>("reshape_157_shape_0"), val = tensor<int32, [4]>([2, 1920, 16, 16])];
            tensor<fp16, [2, 1920, 16, 16]> reshape_157_cast = reshape(shape = reshape_157_shape_0, x = real_div_39_cast);
            tensor<fp16, [1920]> add_79_mean_0_to_fp16 = const()[name = tensor<string, []>("add_79_mean_0_to_fp16"), val = tensor<fp16, [1920]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(470145856)))];
            tensor<fp16, [1920]> add_79_variance_0_to_fp16 = const()[name = tensor<string, []>("add_79_variance_0_to_fp16"), val = tensor<fp16, [1920]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(470149760)))];
            tensor<fp16, [1920]> add_79_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_79_gamma_0_to_fp16"), val = tensor<fp16, [1920]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(470153664)))];
            tensor<fp16, [1920]> add_79_beta_0_to_fp16 = const()[name = tensor<string, []>("add_79_beta_0_to_fp16"), val = tensor<fp16, [1920]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(470157568)))];
            tensor<fp16, []> add_79_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_79_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1920, 16, 16]> add_79_cast = batch_norm(beta = add_79_beta_0_to_fp16, epsilon = add_79_epsilon_0_to_fp16, gamma = add_79_gamma_0_to_fp16, mean = add_79_mean_0_to_fp16, variance = add_79_variance_0_to_fp16, x = reshape_157_cast);
            tensor<fp16, [2, 1920, 16, 16]> input_341_cast = silu(x = add_79_cast);
            tensor<int32, [2]> var_5375 = const()[name = tensor<string, []>("op_5375"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5377 = const()[name = tensor<string, []>("op_5377"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_199_pad_type_0 = const()[name = tensor<string, []>("hidden_states_199_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_199_pad_0 = const()[name = tensor<string, []>("hidden_states_199_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 1920, 3, 3]> up_blocks_1_resnets_2_conv1_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_2_conv1_weight_to_fp16"), val = tensor<fp16, [1280, 1920, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(470161472)))];
            tensor<fp16, [1280]> up_blocks_1_resnets_2_conv1_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_2_conv1_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(514398336)))];
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_199_cast = conv(bias = up_blocks_1_resnets_2_conv1_bias_to_fp16, dilations = var_5377, groups = var_4272, pad = hidden_states_199_pad_0, pad_type = hidden_states_199_pad_type_0, strides = var_5375, weight = up_blocks_1_resnets_2_conv1_weight_to_fp16, x = input_341_cast);
            tensor<int32, [2]> var_5383 = const()[name = tensor<string, []>("op_5383"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5385 = const()[name = tensor<string, []>("op_5385"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> temb_31_pad_type_0 = const()[name = tensor<string, []>("temb_31_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> temb_31_pad_0 = const()[name = tensor<string, []>("temb_31_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_resnets_2_time_emb_proj_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_2_time_emb_proj_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(514400960)))];
            tensor<fp16, [1280]> up_blocks_1_resnets_2_time_emb_proj_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_2_time_emb_proj_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(517677824)))];
            tensor<fp16, [2, 1280, 1, 1]> temb_31_cast = conv(bias = up_blocks_1_resnets_2_time_emb_proj_bias_to_fp16, dilations = var_5385, groups = var_4272, pad = temb_31_pad_0, pad_type = temb_31_pad_type_0, strides = var_5383, weight = up_blocks_1_resnets_2_time_emb_proj_weight_to_fp16, x = cast_12);
            tensor<fp16, [2, 1280, 16, 16]> input_345_cast = add(x = hidden_states_199_cast, y = temb_31_cast);
            tensor<int32, [5]> reshape_160_shape_0 = const()[name = tensor<string, []>("reshape_160_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 16, 16])];
            tensor<fp16, [2, 32, 40, 16, 16]> reshape_160_cast = reshape(shape = reshape_160_shape_0, x = input_345_cast);
            tensor<int32, [3]> reduce_mean_120_axes_0 = const()[name = tensor<string, []>("reduce_mean_120_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_120_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_120_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_120_cast = reduce_mean(axes = reduce_mean_120_axes_0, keep_dims = reduce_mean_120_keep_dims_0, x = reshape_160_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> sub_80_cast = sub(x = reshape_160_cast, y = reduce_mean_120_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> square_40_cast = square(x = sub_80_cast);
            tensor<int32, [3]> reduce_mean_122_axes_0 = const()[name = tensor<string, []>("reduce_mean_122_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_122_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_122_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_122_cast = reduce_mean(axes = reduce_mean_122_axes_0, keep_dims = reduce_mean_122_keep_dims_0, x = square_40_cast);
            tensor<fp16, []> add_80_y_0_to_fp16 = const()[name = tensor<string, []>("add_80_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_80_cast = add(x = reduce_mean_122_cast, y = add_80_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_40_cast = sqrt(x = add_80_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> real_div_40_cast = real_div(x = sub_80_cast, y = sqrt_40_cast);
            tensor<int32, [4]> reshape_161_shape_0 = const()[name = tensor<string, []>("reshape_161_shape_0"), val = tensor<int32, [4]>([2, 1280, 16, 16])];
            tensor<fp16, [2, 1280, 16, 16]> reshape_161_cast = reshape(shape = reshape_161_shape_0, x = real_div_40_cast);
            tensor<fp16, [1280]> add_81_mean_0_to_fp16 = const()[name = tensor<string, []>("add_81_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(517680448)))];
            tensor<fp16, [1280]> add_81_variance_0_to_fp16 = const()[name = tensor<string, []>("add_81_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(517683072)))];
            tensor<fp16, [1280]> add_81_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_81_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(517685696)))];
            tensor<fp16, [1280]> add_81_beta_0_to_fp16 = const()[name = tensor<string, []>("add_81_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(517688320)))];
            tensor<fp16, []> add_81_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_81_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 16, 16]> add_81_cast = batch_norm(beta = add_81_beta_0_to_fp16, epsilon = add_81_epsilon_0_to_fp16, gamma = add_81_gamma_0_to_fp16, mean = add_81_mean_0_to_fp16, variance = add_81_variance_0_to_fp16, x = reshape_161_cast);
            tensor<fp16, [2, 1280, 16, 16]> input_349_cast = silu(x = add_81_cast);
            tensor<int32, [2]> var_5395 = const()[name = tensor<string, []>("op_5395"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5397 = const()[name = tensor<string, []>("op_5397"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_201_pad_type_0 = const()[name = tensor<string, []>("hidden_states_201_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_201_pad_0 = const()[name = tensor<string, []>("hidden_states_201_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 1280, 3, 3]> up_blocks_1_resnets_2_conv2_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_2_conv2_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(517690944)))];
            tensor<fp16, [1280]> up_blocks_1_resnets_2_conv2_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_2_conv2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(547182208)))];
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_201_cast = conv(bias = up_blocks_1_resnets_2_conv2_bias_to_fp16, dilations = var_5397, groups = var_4272, pad = hidden_states_201_pad_0, pad_type = hidden_states_201_pad_type_0, strides = var_5395, weight = up_blocks_1_resnets_2_conv2_weight_to_fp16, x = input_349_cast);
            tensor<int32, [2]> var_5402 = const()[name = tensor<string, []>("op_5402"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5404 = const()[name = tensor<string, []>("op_5404"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_15_pad_type_0 = const()[name = tensor<string, []>("x_15_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_15_pad_0 = const()[name = tensor<string, []>("x_15_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1920, 1, 1]> up_blocks_1_resnets_2_conv_shortcut_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_2_conv_shortcut_weight_to_fp16"), val = tensor<fp16, [1280, 1920, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(547184832)))];
            tensor<fp16, [1280]> up_blocks_1_resnets_2_conv_shortcut_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_2_conv_shortcut_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(552100096)))];
            tensor<fp16, [2, 1280, 16, 16]> x_15_cast = conv(bias = up_blocks_1_resnets_2_conv_shortcut_bias_to_fp16, dilations = var_5404, groups = var_4272, pad = x_15_pad_0, pad_type = x_15_pad_type_0, strides = var_5402, weight = up_blocks_1_resnets_2_conv_shortcut_weight_to_fp16, x = input_337_cast);
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_203_cast = add(x = x_15_cast, y = hidden_states_201_cast);
            tensor<int32, [5]> reshape_164_shape_0 = const()[name = tensor<string, []>("reshape_164_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 16, 16])];
            tensor<fp16, [2, 32, 40, 16, 16]> reshape_164_cast = reshape(shape = reshape_164_shape_0, x = hidden_states_203_cast);
            tensor<int32, [3]> reduce_mean_123_axes_0 = const()[name = tensor<string, []>("reduce_mean_123_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_123_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_123_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_123_cast = reduce_mean(axes = reduce_mean_123_axes_0, keep_dims = reduce_mean_123_keep_dims_0, x = reshape_164_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> sub_82_cast = sub(x = reshape_164_cast, y = reduce_mean_123_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> square_41_cast = square(x = sub_82_cast);
            tensor<int32, [3]> reduce_mean_125_axes_0 = const()[name = tensor<string, []>("reduce_mean_125_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_125_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_125_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_125_cast = reduce_mean(axes = reduce_mean_125_axes_0, keep_dims = reduce_mean_125_keep_dims_0, x = square_41_cast);
            tensor<fp16, []> add_82_y_0_to_fp16 = const()[name = tensor<string, []>("add_82_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_82_cast = add(x = reduce_mean_125_cast, y = add_82_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_41_cast = sqrt(x = add_82_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> real_div_41_cast = real_div(x = sub_82_cast, y = sqrt_41_cast);
            tensor<int32, [4]> reshape_165_shape_0 = const()[name = tensor<string, []>("reshape_165_shape_0"), val = tensor<int32, [4]>([2, 1280, 16, 16])];
            tensor<fp16, [2, 1280, 16, 16]> reshape_165_cast = reshape(shape = reshape_165_shape_0, x = real_div_41_cast);
            tensor<fp16, [1280]> add_83_mean_0_to_fp16 = const()[name = tensor<string, []>("add_83_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(552102720)))];
            tensor<fp16, [1280]> add_83_variance_0_to_fp16 = const()[name = tensor<string, []>("add_83_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(552105344)))];
            tensor<fp16, [1280]> add_83_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_83_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(552107968)))];
            tensor<fp16, [1280]> add_83_beta_0_to_fp16 = const()[name = tensor<string, []>("add_83_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(552110592)))];
            tensor<fp16, []> add_83_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_83_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 16, 16]> add_83_cast = batch_norm(beta = add_83_beta_0_to_fp16, epsilon = add_83_epsilon_0_to_fp16, gamma = add_83_gamma_0_to_fp16, mean = add_83_mean_0_to_fp16, variance = add_83_variance_0_to_fp16, x = reshape_165_cast);
            tensor<int32, [2]> var_5424 = const()[name = tensor<string, []>("op_5424"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5426 = const()[name = tensor<string, []>("op_5426"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_205_pad_type_0 = const()[name = tensor<string, []>("hidden_states_205_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_205_pad_0 = const()[name = tensor<string, []>("hidden_states_205_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_2_proj_in_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_2_proj_in_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(552113216)))];
            tensor<fp16, [1280]> up_blocks_1_attentions_2_proj_in_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_2_proj_in_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(555390080)))];
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_205_cast = conv(bias = up_blocks_1_attentions_2_proj_in_bias_to_fp16, dilations = var_5426, groups = var_4272, pad = hidden_states_205_pad_0, pad_type = hidden_states_205_pad_type_0, strides = var_5424, weight = up_blocks_1_attentions_2_proj_in_weight_to_fp16, x = add_83_cast);
            tensor<int32, [4]> var_5431 = const()[name = tensor<string, []>("op_5431"), val = tensor<int32, [4]>([2, 1280, 1, 256])];
            tensor<fp16, [2, 1280, 1, 256]> inputs_55_cast = reshape(shape = var_5431, x = hidden_states_205_cast);
            tensor<int32, [1]> var_5441 = const()[name = tensor<string, []>("op_5441"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> channels_mean_55_cast = reduce_mean(axes = var_5441, keep_dims = var_4267, x = inputs_55_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_55_cast = sub(x = inputs_55_cast, y = channels_mean_55_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_sq_55_cast = mul(x = zero_mean_55_cast, y = zero_mean_55_cast);
            tensor<int32, [1]> var_5445 = const()[name = tensor<string, []>("op_5445"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> var_5446_cast = reduce_mean(axes = var_5445, keep_dims = var_4267, x = zero_mean_sq_55_cast);
            tensor<fp16, []> var_5447_to_fp16 = const()[name = tensor<string, []>("op_5447_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 256]> var_5448_cast = add(x = var_5446_cast, y = var_5447_to_fp16);
            tensor<fp16, []> denom_55_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_55_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 256]> denom_55_cast = rsqrt(epsilon = denom_55_epsilon_0_to_fp16, x = var_5448_cast);
            tensor<fp16, [2, 1280, 1, 256]> out_55_cast = mul(x = zero_mean_55_cast, y = denom_55_cast);
            tensor<fp16, [1, 1280, 1, 1]> var_5452_to_fp16 = const()[name = tensor<string, []>("op_5452_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(555392704)))];
            tensor<fp16, [2, 1280, 1, 256]> var_5453_cast = add(x = out_55_cast, y = var_5452_to_fp16);
            tensor<fp16, [1, 1280, 1, 1]> var_5455_to_fp16 = const()[name = tensor<string, []>("op_5455_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(555395328)))];
            tensor<fp16, [2, 1280, 1, 256]> hidden_states_207_cast = mul(x = var_5453_cast, y = var_5455_to_fp16);
            tensor<int32, [2]> var_5462 = const()[name = tensor<string, []>("op_5462"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5464 = const()[name = tensor<string, []>("op_5464"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_37_pad_type_0 = const()[name = tensor<string, []>("q_37_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_37_pad_0 = const()[name = tensor<string, []>("q_37_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_2_transformer_blocks_0_attn1_to_q_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_2_transformer_blocks_0_attn1_to_q_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(555397952)))];
            tensor<fp16, [2, 1280, 1, 256]> q_37_cast = conv(dilations = var_5464, groups = var_4272, pad = q_37_pad_0, pad_type = q_37_pad_type_0, strides = var_5462, weight = up_blocks_1_attentions_2_transformer_blocks_0_attn1_to_q_weight_to_fp16, x = hidden_states_207_cast);
            tensor<int32, [2]> var_5468 = const()[name = tensor<string, []>("op_5468"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5470 = const()[name = tensor<string, []>("op_5470"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_73_pad_type_0 = const()[name = tensor<string, []>("k_73_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_73_pad_0 = const()[name = tensor<string, []>("k_73_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_2_transformer_blocks_0_attn1_to_k_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_2_transformer_blocks_0_attn1_to_k_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(558674816)))];
            tensor<fp16, [2, 1280, 1, 256]> k_73_cast = conv(dilations = var_5470, groups = var_4272, pad = k_73_pad_0, pad_type = k_73_pad_type_0, strides = var_5468, weight = up_blocks_1_attentions_2_transformer_blocks_0_attn1_to_k_weight_to_fp16, x = hidden_states_207_cast);
            tensor<int32, [2]> var_5474 = const()[name = tensor<string, []>("op_5474"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5476 = const()[name = tensor<string, []>("op_5476"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_37_pad_type_0 = const()[name = tensor<string, []>("v_37_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_37_pad_0 = const()[name = tensor<string, []>("v_37_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_2_transformer_blocks_0_attn1_to_v_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_2_transformer_blocks_0_attn1_to_v_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(561951680)))];
            tensor<fp16, [2, 1280, 1, 256]> v_37_cast = conv(dilations = var_5476, groups = var_4272, pad = v_37_pad_0, pad_type = v_37_pad_type_0, strides = var_5474, weight = up_blocks_1_attentions_2_transformer_blocks_0_attn1_to_v_weight_to_fp16, x = hidden_states_207_cast);
            tensor<int32, [4]> var_5480_begin_0 = const()[name = tensor<string, []>("op_5480_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_5480_end_0 = const()[name = tensor<string, []>("op_5480_end_0"), val = tensor<int32, [4]>([2, 160, 1, 256])];
            tensor<bool, [4]> var_5480_end_mask_0 = const()[name = tensor<string, []>("op_5480_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5480_cast = slice_by_index(begin = var_5480_begin_0, end = var_5480_end_0, end_mask = var_5480_end_mask_0, x = q_37_cast);
            tensor<int32, [4]> var_5484_begin_0 = const()[name = tensor<string, []>("op_5484_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_5484_end_0 = const()[name = tensor<string, []>("op_5484_end_0"), val = tensor<int32, [4]>([2, 320, 1, 256])];
            tensor<bool, [4]> var_5484_end_mask_0 = const()[name = tensor<string, []>("op_5484_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5484_cast = slice_by_index(begin = var_5484_begin_0, end = var_5484_end_0, end_mask = var_5484_end_mask_0, x = q_37_cast);
            tensor<int32, [4]> var_5488_begin_0 = const()[name = tensor<string, []>("op_5488_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_5488_end_0 = const()[name = tensor<string, []>("op_5488_end_0"), val = tensor<int32, [4]>([2, 480, 1, 256])];
            tensor<bool, [4]> var_5488_end_mask_0 = const()[name = tensor<string, []>("op_5488_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5488_cast = slice_by_index(begin = var_5488_begin_0, end = var_5488_end_0, end_mask = var_5488_end_mask_0, x = q_37_cast);
            tensor<int32, [4]> var_5492_begin_0 = const()[name = tensor<string, []>("op_5492_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_5492_end_0 = const()[name = tensor<string, []>("op_5492_end_0"), val = tensor<int32, [4]>([2, 640, 1, 256])];
            tensor<bool, [4]> var_5492_end_mask_0 = const()[name = tensor<string, []>("op_5492_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5492_cast = slice_by_index(begin = var_5492_begin_0, end = var_5492_end_0, end_mask = var_5492_end_mask_0, x = q_37_cast);
            tensor<int32, [4]> var_5496_begin_0 = const()[name = tensor<string, []>("op_5496_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_5496_end_0 = const()[name = tensor<string, []>("op_5496_end_0"), val = tensor<int32, [4]>([2, 800, 1, 256])];
            tensor<bool, [4]> var_5496_end_mask_0 = const()[name = tensor<string, []>("op_5496_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5496_cast = slice_by_index(begin = var_5496_begin_0, end = var_5496_end_0, end_mask = var_5496_end_mask_0, x = q_37_cast);
            tensor<int32, [4]> var_5500_begin_0 = const()[name = tensor<string, []>("op_5500_begin_0"), val = tensor<int32, [4]>([0, 800, 0, 0])];
            tensor<int32, [4]> var_5500_end_0 = const()[name = tensor<string, []>("op_5500_end_0"), val = tensor<int32, [4]>([2, 960, 1, 256])];
            tensor<bool, [4]> var_5500_end_mask_0 = const()[name = tensor<string, []>("op_5500_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5500_cast = slice_by_index(begin = var_5500_begin_0, end = var_5500_end_0, end_mask = var_5500_end_mask_0, x = q_37_cast);
            tensor<int32, [4]> var_5504_begin_0 = const()[name = tensor<string, []>("op_5504_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_5504_end_0 = const()[name = tensor<string, []>("op_5504_end_0"), val = tensor<int32, [4]>([2, 1120, 1, 256])];
            tensor<bool, [4]> var_5504_end_mask_0 = const()[name = tensor<string, []>("op_5504_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5504_cast = slice_by_index(begin = var_5504_begin_0, end = var_5504_end_0, end_mask = var_5504_end_mask_0, x = q_37_cast);
            tensor<int32, [4]> var_5508_begin_0 = const()[name = tensor<string, []>("op_5508_begin_0"), val = tensor<int32, [4]>([0, 1120, 0, 0])];
            tensor<int32, [4]> var_5508_end_0 = const()[name = tensor<string, []>("op_5508_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 256])];
            tensor<bool, [4]> var_5508_end_mask_0 = const()[name = tensor<string, []>("op_5508_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5508_cast = slice_by_index(begin = var_5508_begin_0, end = var_5508_end_0, end_mask = var_5508_end_mask_0, x = q_37_cast);
            tensor<int32, [4]> k_75_perm_0 = const()[name = tensor<string, []>("k_75_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_5515_begin_0 = const()[name = tensor<string, []>("op_5515_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_5515_end_0 = const()[name = tensor<string, []>("op_5515_end_0"), val = tensor<int32, [4]>([2, 256, 1, 160])];
            tensor<bool, [4]> var_5515_end_mask_0 = const()[name = tensor<string, []>("op_5515_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 1280]> transpose_13 = transpose(perm = k_75_perm_0, x = k_73_cast);
            tensor<fp16, [2, 256, 1, 160]> var_5515_cast = slice_by_index(begin = var_5515_begin_0, end = var_5515_end_0, end_mask = var_5515_end_mask_0, x = transpose_13);
            tensor<int32, [4]> var_5519_begin_0 = const()[name = tensor<string, []>("op_5519_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 160])];
            tensor<int32, [4]> var_5519_end_0 = const()[name = tensor<string, []>("op_5519_end_0"), val = tensor<int32, [4]>([2, 256, 1, 320])];
            tensor<bool, [4]> var_5519_end_mask_0 = const()[name = tensor<string, []>("op_5519_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_5519_cast = slice_by_index(begin = var_5519_begin_0, end = var_5519_end_0, end_mask = var_5519_end_mask_0, x = transpose_13);
            tensor<int32, [4]> var_5523_begin_0 = const()[name = tensor<string, []>("op_5523_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_5523_end_0 = const()[name = tensor<string, []>("op_5523_end_0"), val = tensor<int32, [4]>([2, 256, 1, 480])];
            tensor<bool, [4]> var_5523_end_mask_0 = const()[name = tensor<string, []>("op_5523_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_5523_cast = slice_by_index(begin = var_5523_begin_0, end = var_5523_end_0, end_mask = var_5523_end_mask_0, x = transpose_13);
            tensor<int32, [4]> var_5527_begin_0 = const()[name = tensor<string, []>("op_5527_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 480])];
            tensor<int32, [4]> var_5527_end_0 = const()[name = tensor<string, []>("op_5527_end_0"), val = tensor<int32, [4]>([2, 256, 1, 640])];
            tensor<bool, [4]> var_5527_end_mask_0 = const()[name = tensor<string, []>("op_5527_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_5527_cast = slice_by_index(begin = var_5527_begin_0, end = var_5527_end_0, end_mask = var_5527_end_mask_0, x = transpose_13);
            tensor<int32, [4]> var_5531_begin_0 = const()[name = tensor<string, []>("op_5531_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 640])];
            tensor<int32, [4]> var_5531_end_0 = const()[name = tensor<string, []>("op_5531_end_0"), val = tensor<int32, [4]>([2, 256, 1, 800])];
            tensor<bool, [4]> var_5531_end_mask_0 = const()[name = tensor<string, []>("op_5531_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_5531_cast = slice_by_index(begin = var_5531_begin_0, end = var_5531_end_0, end_mask = var_5531_end_mask_0, x = transpose_13);
            tensor<int32, [4]> var_5535_begin_0 = const()[name = tensor<string, []>("op_5535_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 800])];
            tensor<int32, [4]> var_5535_end_0 = const()[name = tensor<string, []>("op_5535_end_0"), val = tensor<int32, [4]>([2, 256, 1, 960])];
            tensor<bool, [4]> var_5535_end_mask_0 = const()[name = tensor<string, []>("op_5535_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_5535_cast = slice_by_index(begin = var_5535_begin_0, end = var_5535_end_0, end_mask = var_5535_end_mask_0, x = transpose_13);
            tensor<int32, [4]> var_5539_begin_0 = const()[name = tensor<string, []>("op_5539_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 960])];
            tensor<int32, [4]> var_5539_end_0 = const()[name = tensor<string, []>("op_5539_end_0"), val = tensor<int32, [4]>([2, 256, 1, 1120])];
            tensor<bool, [4]> var_5539_end_mask_0 = const()[name = tensor<string, []>("op_5539_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_5539_cast = slice_by_index(begin = var_5539_begin_0, end = var_5539_end_0, end_mask = var_5539_end_mask_0, x = transpose_13);
            tensor<int32, [4]> var_5543_begin_0 = const()[name = tensor<string, []>("op_5543_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1120])];
            tensor<int32, [4]> var_5543_end_0 = const()[name = tensor<string, []>("op_5543_end_0"), val = tensor<int32, [4]>([2, 256, 1, 1280])];
            tensor<bool, [4]> var_5543_end_mask_0 = const()[name = tensor<string, []>("op_5543_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_5543_cast = slice_by_index(begin = var_5543_begin_0, end = var_5543_end_0, end_mask = var_5543_end_mask_0, x = transpose_13);
            tensor<int32, [4]> var_5545_begin_0 = const()[name = tensor<string, []>("op_5545_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_5545_end_0 = const()[name = tensor<string, []>("op_5545_end_0"), val = tensor<int32, [4]>([2, 160, 1, 256])];
            tensor<bool, [4]> var_5545_end_mask_0 = const()[name = tensor<string, []>("op_5545_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5545_cast = slice_by_index(begin = var_5545_begin_0, end = var_5545_end_0, end_mask = var_5545_end_mask_0, x = v_37_cast);
            tensor<int32, [4]> var_5549_begin_0 = const()[name = tensor<string, []>("op_5549_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_5549_end_0 = const()[name = tensor<string, []>("op_5549_end_0"), val = tensor<int32, [4]>([2, 320, 1, 256])];
            tensor<bool, [4]> var_5549_end_mask_0 = const()[name = tensor<string, []>("op_5549_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5549_cast = slice_by_index(begin = var_5549_begin_0, end = var_5549_end_0, end_mask = var_5549_end_mask_0, x = v_37_cast);
            tensor<int32, [4]> var_5553_begin_0 = const()[name = tensor<string, []>("op_5553_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_5553_end_0 = const()[name = tensor<string, []>("op_5553_end_0"), val = tensor<int32, [4]>([2, 480, 1, 256])];
            tensor<bool, [4]> var_5553_end_mask_0 = const()[name = tensor<string, []>("op_5553_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5553_cast = slice_by_index(begin = var_5553_begin_0, end = var_5553_end_0, end_mask = var_5553_end_mask_0, x = v_37_cast);
            tensor<int32, [4]> var_5557_begin_0 = const()[name = tensor<string, []>("op_5557_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_5557_end_0 = const()[name = tensor<string, []>("op_5557_end_0"), val = tensor<int32, [4]>([2, 640, 1, 256])];
            tensor<bool, [4]> var_5557_end_mask_0 = const()[name = tensor<string, []>("op_5557_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5557_cast = slice_by_index(begin = var_5557_begin_0, end = var_5557_end_0, end_mask = var_5557_end_mask_0, x = v_37_cast);
            tensor<int32, [4]> var_5561_begin_0 = const()[name = tensor<string, []>("op_5561_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_5561_end_0 = const()[name = tensor<string, []>("op_5561_end_0"), val = tensor<int32, [4]>([2, 800, 1, 256])];
            tensor<bool, [4]> var_5561_end_mask_0 = const()[name = tensor<string, []>("op_5561_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5561_cast = slice_by_index(begin = var_5561_begin_0, end = var_5561_end_0, end_mask = var_5561_end_mask_0, x = v_37_cast);
            tensor<int32, [4]> var_5565_begin_0 = const()[name = tensor<string, []>("op_5565_begin_0"), val = tensor<int32, [4]>([0, 800, 0, 0])];
            tensor<int32, [4]> var_5565_end_0 = const()[name = tensor<string, []>("op_5565_end_0"), val = tensor<int32, [4]>([2, 960, 1, 256])];
            tensor<bool, [4]> var_5565_end_mask_0 = const()[name = tensor<string, []>("op_5565_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5565_cast = slice_by_index(begin = var_5565_begin_0, end = var_5565_end_0, end_mask = var_5565_end_mask_0, x = v_37_cast);
            tensor<int32, [4]> var_5569_begin_0 = const()[name = tensor<string, []>("op_5569_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_5569_end_0 = const()[name = tensor<string, []>("op_5569_end_0"), val = tensor<int32, [4]>([2, 1120, 1, 256])];
            tensor<bool, [4]> var_5569_end_mask_0 = const()[name = tensor<string, []>("op_5569_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5569_cast = slice_by_index(begin = var_5569_begin_0, end = var_5569_end_0, end_mask = var_5569_end_mask_0, x = v_37_cast);
            tensor<int32, [4]> var_5573_begin_0 = const()[name = tensor<string, []>("op_5573_begin_0"), val = tensor<int32, [4]>([0, 1120, 0, 0])];
            tensor<int32, [4]> var_5573_end_0 = const()[name = tensor<string, []>("op_5573_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 256])];
            tensor<bool, [4]> var_5573_end_mask_0 = const()[name = tensor<string, []>("op_5573_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5573_cast = slice_by_index(begin = var_5573_begin_0, end = var_5573_end_0, end_mask = var_5573_end_mask_0, x = v_37_cast);
            tensor<string, []> var_5577_equation_0 = const()[name = tensor<string, []>("op_5577_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_5577_cast = einsum(equation = var_5577_equation_0, values = (var_5515_cast, var_5480_cast));
            tensor<fp16, []> var_5578_to_fp16 = const()[name = tensor<string, []>("op_5578_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_289_cast = mul(x = var_5577_cast, y = var_5578_to_fp16);
            tensor<string, []> var_5581_equation_0 = const()[name = tensor<string, []>("op_5581_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_5581_cast = einsum(equation = var_5581_equation_0, values = (var_5519_cast, var_5484_cast));
            tensor<fp16, []> var_5582_to_fp16 = const()[name = tensor<string, []>("op_5582_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_291_cast = mul(x = var_5581_cast, y = var_5582_to_fp16);
            tensor<string, []> var_5585_equation_0 = const()[name = tensor<string, []>("op_5585_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_5585_cast = einsum(equation = var_5585_equation_0, values = (var_5523_cast, var_5488_cast));
            tensor<fp16, []> var_5586_to_fp16 = const()[name = tensor<string, []>("op_5586_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_293_cast = mul(x = var_5585_cast, y = var_5586_to_fp16);
            tensor<string, []> var_5589_equation_0 = const()[name = tensor<string, []>("op_5589_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_5589_cast = einsum(equation = var_5589_equation_0, values = (var_5527_cast, var_5492_cast));
            tensor<fp16, []> var_5590_to_fp16 = const()[name = tensor<string, []>("op_5590_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_295_cast = mul(x = var_5589_cast, y = var_5590_to_fp16);
            tensor<string, []> var_5593_equation_0 = const()[name = tensor<string, []>("op_5593_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_5593_cast = einsum(equation = var_5593_equation_0, values = (var_5531_cast, var_5496_cast));
            tensor<fp16, []> var_5594_to_fp16 = const()[name = tensor<string, []>("op_5594_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_297_cast = mul(x = var_5593_cast, y = var_5594_to_fp16);
            tensor<string, []> var_5597_equation_0 = const()[name = tensor<string, []>("op_5597_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_5597_cast = einsum(equation = var_5597_equation_0, values = (var_5535_cast, var_5500_cast));
            tensor<fp16, []> var_5598_to_fp16 = const()[name = tensor<string, []>("op_5598_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_299_cast = mul(x = var_5597_cast, y = var_5598_to_fp16);
            tensor<string, []> var_5601_equation_0 = const()[name = tensor<string, []>("op_5601_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_5601_cast = einsum(equation = var_5601_equation_0, values = (var_5539_cast, var_5504_cast));
            tensor<fp16, []> var_5602_to_fp16 = const()[name = tensor<string, []>("op_5602_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_301_cast = mul(x = var_5601_cast, y = var_5602_to_fp16);
            tensor<string, []> var_5605_equation_0 = const()[name = tensor<string, []>("op_5605_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_5605_cast = einsum(equation = var_5605_equation_0, values = (var_5543_cast, var_5508_cast));
            tensor<fp16, []> var_5606_to_fp16 = const()[name = tensor<string, []>("op_5606_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_303_cast = mul(x = var_5605_cast, y = var_5606_to_fp16);
            tensor<fp16, [2, 256, 1, 256]> var_5608_cast = softmax(axis = var_4272, x = aw_289_cast);
            tensor<fp16, [2, 256, 1, 256]> var_5609_cast = softmax(axis = var_4272, x = aw_291_cast);
            tensor<fp16, [2, 256, 1, 256]> var_5610_cast = softmax(axis = var_4272, x = aw_293_cast);
            tensor<fp16, [2, 256, 1, 256]> var_5611_cast = softmax(axis = var_4272, x = aw_295_cast);
            tensor<fp16, [2, 256, 1, 256]> var_5612_cast = softmax(axis = var_4272, x = aw_297_cast);
            tensor<fp16, [2, 256, 1, 256]> var_5613_cast = softmax(axis = var_4272, x = aw_299_cast);
            tensor<fp16, [2, 256, 1, 256]> var_5614_cast = softmax(axis = var_4272, x = aw_301_cast);
            tensor<fp16, [2, 256, 1, 256]> var_5615_cast = softmax(axis = var_4272, x = aw_303_cast);
            tensor<string, []> var_5617_equation_0 = const()[name = tensor<string, []>("op_5617_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_5617_cast = einsum(equation = var_5617_equation_0, values = (var_5545_cast, var_5608_cast));
            tensor<string, []> var_5619_equation_0 = const()[name = tensor<string, []>("op_5619_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_5619_cast = einsum(equation = var_5619_equation_0, values = (var_5549_cast, var_5609_cast));
            tensor<string, []> var_5621_equation_0 = const()[name = tensor<string, []>("op_5621_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_5621_cast = einsum(equation = var_5621_equation_0, values = (var_5553_cast, var_5610_cast));
            tensor<string, []> var_5623_equation_0 = const()[name = tensor<string, []>("op_5623_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_5623_cast = einsum(equation = var_5623_equation_0, values = (var_5557_cast, var_5611_cast));
            tensor<string, []> var_5625_equation_0 = const()[name = tensor<string, []>("op_5625_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_5625_cast = einsum(equation = var_5625_equation_0, values = (var_5561_cast, var_5612_cast));
            tensor<string, []> var_5627_equation_0 = const()[name = tensor<string, []>("op_5627_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_5627_cast = einsum(equation = var_5627_equation_0, values = (var_5565_cast, var_5613_cast));
            tensor<string, []> var_5629_equation_0 = const()[name = tensor<string, []>("op_5629_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_5629_cast = einsum(equation = var_5629_equation_0, values = (var_5569_cast, var_5614_cast));
            tensor<string, []> var_5631_equation_0 = const()[name = tensor<string, []>("op_5631_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_5631_cast = einsum(equation = var_5631_equation_0, values = (var_5573_cast, var_5615_cast));
            tensor<bool, []> input_353_interleave_0 = const()[name = tensor<string, []>("input_353_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 1280, 1, 256]> input_353_cast = concat(axis = var_4272, interleave = input_353_interleave_0, values = (var_5617_cast, var_5619_cast, var_5621_cast, var_5623_cast, var_5625_cast, var_5627_cast, var_5629_cast, var_5631_cast));
            tensor<int32, [2]> var_5637 = const()[name = tensor<string, []>("op_5637"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5639 = const()[name = tensor<string, []>("op_5639"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_5641_pad_type_0 = const()[name = tensor<string, []>("op_5641_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_5641_pad_0 = const()[name = tensor<string, []>("op_5641_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_2_transformer_blocks_0_attn1_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_2_transformer_blocks_0_attn1_to_out_0_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(565228544)))];
            tensor<fp16, [1280]> up_blocks_1_attentions_2_transformer_blocks_0_attn1_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_2_transformer_blocks_0_attn1_to_out_0_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(568505408)))];
            tensor<fp16, [2, 1280, 1, 256]> var_5641_cast = conv(bias = up_blocks_1_attentions_2_transformer_blocks_0_attn1_to_out_0_bias_to_fp16, dilations = var_5639, groups = var_4272, pad = var_5641_pad_0, pad_type = var_5641_pad_type_0, strides = var_5637, weight = up_blocks_1_attentions_2_transformer_blocks_0_attn1_to_out_0_weight_to_fp16, x = input_353_cast);
            tensor<fp16, [2, 1280, 1, 256]> inputs_57_cast = add(x = var_5641_cast, y = inputs_55_cast);
            tensor<int32, [1]> var_5645 = const()[name = tensor<string, []>("op_5645"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> channels_mean_57_cast = reduce_mean(axes = var_5645, keep_dims = var_4267, x = inputs_57_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_57_cast = sub(x = inputs_57_cast, y = channels_mean_57_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_sq_57_cast = mul(x = zero_mean_57_cast, y = zero_mean_57_cast);
            tensor<int32, [1]> var_5649 = const()[name = tensor<string, []>("op_5649"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> var_5650_cast = reduce_mean(axes = var_5649, keep_dims = var_4267, x = zero_mean_sq_57_cast);
            tensor<fp16, []> var_5651_to_fp16 = const()[name = tensor<string, []>("op_5651_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 256]> var_5652_cast = add(x = var_5650_cast, y = var_5651_to_fp16);
            tensor<fp16, []> denom_57_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_57_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 256]> denom_57_cast = rsqrt(epsilon = denom_57_epsilon_0_to_fp16, x = var_5652_cast);
            tensor<fp16, [2, 1280, 1, 256]> out_57_cast = mul(x = zero_mean_57_cast, y = denom_57_cast);
            tensor<fp16, [1, 1280, 1, 1]> var_5656_to_fp16 = const()[name = tensor<string, []>("op_5656_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(568508032)))];
            tensor<fp16, [2, 1280, 1, 256]> var_5657_cast = add(x = out_57_cast, y = var_5656_to_fp16);
            tensor<fp16, [1, 1280, 1, 1]> var_5659_to_fp16 = const()[name = tensor<string, []>("op_5659_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(568510656)))];
            tensor<fp16, [2, 1280, 1, 256]> hidden_states_209_cast = mul(x = var_5657_cast, y = var_5659_to_fp16);
            tensor<int32, [2]> var_5666 = const()[name = tensor<string, []>("op_5666"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5668 = const()[name = tensor<string, []>("op_5668"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_39_pad_type_0 = const()[name = tensor<string, []>("q_39_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_39_pad_0 = const()[name = tensor<string, []>("q_39_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_2_transformer_blocks_0_attn2_to_q_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_2_transformer_blocks_0_attn2_to_q_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(568513280)))];
            tensor<fp16, [2, 1280, 1, 256]> q_39_cast = conv(dilations = var_5668, groups = var_4272, pad = q_39_pad_0, pad_type = q_39_pad_type_0, strides = var_5666, weight = up_blocks_1_attentions_2_transformer_blocks_0_attn2_to_q_weight_to_fp16, x = hidden_states_209_cast);
            tensor<int32, [2]> var_5672 = const()[name = tensor<string, []>("op_5672"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5674 = const()[name = tensor<string, []>("op_5674"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_77_pad_type_0 = const()[name = tensor<string, []>("k_77_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_77_pad_0 = const()[name = tensor<string, []>("k_77_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 768, 1, 1]> up_blocks_1_attentions_2_transformer_blocks_0_attn2_to_k_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_2_transformer_blocks_0_attn2_to_k_weight_to_fp16"), val = tensor<fp16, [1280, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(571790144)))];
            tensor<fp16, [2, 1280, 1, 77]> k_77_cast = conv(dilations = var_5674, groups = var_4272, pad = k_77_pad_0, pad_type = k_77_pad_type_0, strides = var_5672, weight = up_blocks_1_attentions_2_transformer_blocks_0_attn2_to_k_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [2]> var_5678 = const()[name = tensor<string, []>("op_5678"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5680 = const()[name = tensor<string, []>("op_5680"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_39_pad_type_0 = const()[name = tensor<string, []>("v_39_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_39_pad_0 = const()[name = tensor<string, []>("v_39_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 768, 1, 1]> up_blocks_1_attentions_2_transformer_blocks_0_attn2_to_v_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_2_transformer_blocks_0_attn2_to_v_weight_to_fp16"), val = tensor<fp16, [1280, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(573756288)))];
            tensor<fp16, [2, 1280, 1, 77]> v_39_cast = conv(dilations = var_5680, groups = var_4272, pad = v_39_pad_0, pad_type = v_39_pad_type_0, strides = var_5678, weight = up_blocks_1_attentions_2_transformer_blocks_0_attn2_to_v_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [4]> var_5684_begin_0 = const()[name = tensor<string, []>("op_5684_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_5684_end_0 = const()[name = tensor<string, []>("op_5684_end_0"), val = tensor<int32, [4]>([2, 160, 1, 256])];
            tensor<bool, [4]> var_5684_end_mask_0 = const()[name = tensor<string, []>("op_5684_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5684_cast = slice_by_index(begin = var_5684_begin_0, end = var_5684_end_0, end_mask = var_5684_end_mask_0, x = q_39_cast);
            tensor<int32, [4]> var_5688_begin_0 = const()[name = tensor<string, []>("op_5688_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_5688_end_0 = const()[name = tensor<string, []>("op_5688_end_0"), val = tensor<int32, [4]>([2, 320, 1, 256])];
            tensor<bool, [4]> var_5688_end_mask_0 = const()[name = tensor<string, []>("op_5688_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5688_cast = slice_by_index(begin = var_5688_begin_0, end = var_5688_end_0, end_mask = var_5688_end_mask_0, x = q_39_cast);
            tensor<int32, [4]> var_5692_begin_0 = const()[name = tensor<string, []>("op_5692_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_5692_end_0 = const()[name = tensor<string, []>("op_5692_end_0"), val = tensor<int32, [4]>([2, 480, 1, 256])];
            tensor<bool, [4]> var_5692_end_mask_0 = const()[name = tensor<string, []>("op_5692_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5692_cast = slice_by_index(begin = var_5692_begin_0, end = var_5692_end_0, end_mask = var_5692_end_mask_0, x = q_39_cast);
            tensor<int32, [4]> var_5696_begin_0 = const()[name = tensor<string, []>("op_5696_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_5696_end_0 = const()[name = tensor<string, []>("op_5696_end_0"), val = tensor<int32, [4]>([2, 640, 1, 256])];
            tensor<bool, [4]> var_5696_end_mask_0 = const()[name = tensor<string, []>("op_5696_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5696_cast = slice_by_index(begin = var_5696_begin_0, end = var_5696_end_0, end_mask = var_5696_end_mask_0, x = q_39_cast);
            tensor<int32, [4]> var_5700_begin_0 = const()[name = tensor<string, []>("op_5700_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_5700_end_0 = const()[name = tensor<string, []>("op_5700_end_0"), val = tensor<int32, [4]>([2, 800, 1, 256])];
            tensor<bool, [4]> var_5700_end_mask_0 = const()[name = tensor<string, []>("op_5700_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5700_cast = slice_by_index(begin = var_5700_begin_0, end = var_5700_end_0, end_mask = var_5700_end_mask_0, x = q_39_cast);
            tensor<int32, [4]> var_5704_begin_0 = const()[name = tensor<string, []>("op_5704_begin_0"), val = tensor<int32, [4]>([0, 800, 0, 0])];
            tensor<int32, [4]> var_5704_end_0 = const()[name = tensor<string, []>("op_5704_end_0"), val = tensor<int32, [4]>([2, 960, 1, 256])];
            tensor<bool, [4]> var_5704_end_mask_0 = const()[name = tensor<string, []>("op_5704_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5704_cast = slice_by_index(begin = var_5704_begin_0, end = var_5704_end_0, end_mask = var_5704_end_mask_0, x = q_39_cast);
            tensor<int32, [4]> var_5708_begin_0 = const()[name = tensor<string, []>("op_5708_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_5708_end_0 = const()[name = tensor<string, []>("op_5708_end_0"), val = tensor<int32, [4]>([2, 1120, 1, 256])];
            tensor<bool, [4]> var_5708_end_mask_0 = const()[name = tensor<string, []>("op_5708_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5708_cast = slice_by_index(begin = var_5708_begin_0, end = var_5708_end_0, end_mask = var_5708_end_mask_0, x = q_39_cast);
            tensor<int32, [4]> var_5712_begin_0 = const()[name = tensor<string, []>("op_5712_begin_0"), val = tensor<int32, [4]>([0, 1120, 0, 0])];
            tensor<int32, [4]> var_5712_end_0 = const()[name = tensor<string, []>("op_5712_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 256])];
            tensor<bool, [4]> var_5712_end_mask_0 = const()[name = tensor<string, []>("op_5712_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5712_cast = slice_by_index(begin = var_5712_begin_0, end = var_5712_end_0, end_mask = var_5712_end_mask_0, x = q_39_cast);
            tensor<int32, [4]> k_79_perm_0 = const()[name = tensor<string, []>("k_79_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_5719_begin_0 = const()[name = tensor<string, []>("op_5719_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_5719_end_0 = const()[name = tensor<string, []>("op_5719_end_0"), val = tensor<int32, [4]>([2, 77, 1, 160])];
            tensor<bool, [4]> var_5719_end_mask_0 = const()[name = tensor<string, []>("op_5719_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 1280]> transpose_12 = transpose(perm = k_79_perm_0, x = k_77_cast);
            tensor<fp16, [2, 77, 1, 160]> var_5719_cast = slice_by_index(begin = var_5719_begin_0, end = var_5719_end_0, end_mask = var_5719_end_mask_0, x = transpose_12);
            tensor<int32, [4]> var_5723_begin_0 = const()[name = tensor<string, []>("op_5723_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 160])];
            tensor<int32, [4]> var_5723_end_0 = const()[name = tensor<string, []>("op_5723_end_0"), val = tensor<int32, [4]>([2, 77, 1, 320])];
            tensor<bool, [4]> var_5723_end_mask_0 = const()[name = tensor<string, []>("op_5723_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_5723_cast = slice_by_index(begin = var_5723_begin_0, end = var_5723_end_0, end_mask = var_5723_end_mask_0, x = transpose_12);
            tensor<int32, [4]> var_5727_begin_0 = const()[name = tensor<string, []>("op_5727_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_5727_end_0 = const()[name = tensor<string, []>("op_5727_end_0"), val = tensor<int32, [4]>([2, 77, 1, 480])];
            tensor<bool, [4]> var_5727_end_mask_0 = const()[name = tensor<string, []>("op_5727_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_5727_cast = slice_by_index(begin = var_5727_begin_0, end = var_5727_end_0, end_mask = var_5727_end_mask_0, x = transpose_12);
            tensor<int32, [4]> var_5731_begin_0 = const()[name = tensor<string, []>("op_5731_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 480])];
            tensor<int32, [4]> var_5731_end_0 = const()[name = tensor<string, []>("op_5731_end_0"), val = tensor<int32, [4]>([2, 77, 1, 640])];
            tensor<bool, [4]> var_5731_end_mask_0 = const()[name = tensor<string, []>("op_5731_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_5731_cast = slice_by_index(begin = var_5731_begin_0, end = var_5731_end_0, end_mask = var_5731_end_mask_0, x = transpose_12);
            tensor<int32, [4]> var_5735_begin_0 = const()[name = tensor<string, []>("op_5735_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 640])];
            tensor<int32, [4]> var_5735_end_0 = const()[name = tensor<string, []>("op_5735_end_0"), val = tensor<int32, [4]>([2, 77, 1, 800])];
            tensor<bool, [4]> var_5735_end_mask_0 = const()[name = tensor<string, []>("op_5735_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_5735_cast = slice_by_index(begin = var_5735_begin_0, end = var_5735_end_0, end_mask = var_5735_end_mask_0, x = transpose_12);
            tensor<int32, [4]> var_5739_begin_0 = const()[name = tensor<string, []>("op_5739_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 800])];
            tensor<int32, [4]> var_5739_end_0 = const()[name = tensor<string, []>("op_5739_end_0"), val = tensor<int32, [4]>([2, 77, 1, 960])];
            tensor<bool, [4]> var_5739_end_mask_0 = const()[name = tensor<string, []>("op_5739_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_5739_cast = slice_by_index(begin = var_5739_begin_0, end = var_5739_end_0, end_mask = var_5739_end_mask_0, x = transpose_12);
            tensor<int32, [4]> var_5743_begin_0 = const()[name = tensor<string, []>("op_5743_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 960])];
            tensor<int32, [4]> var_5743_end_0 = const()[name = tensor<string, []>("op_5743_end_0"), val = tensor<int32, [4]>([2, 77, 1, 1120])];
            tensor<bool, [4]> var_5743_end_mask_0 = const()[name = tensor<string, []>("op_5743_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_5743_cast = slice_by_index(begin = var_5743_begin_0, end = var_5743_end_0, end_mask = var_5743_end_mask_0, x = transpose_12);
            tensor<int32, [4]> var_5747_begin_0 = const()[name = tensor<string, []>("op_5747_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1120])];
            tensor<int32, [4]> var_5747_end_0 = const()[name = tensor<string, []>("op_5747_end_0"), val = tensor<int32, [4]>([2, 77, 1, 1280])];
            tensor<bool, [4]> var_5747_end_mask_0 = const()[name = tensor<string, []>("op_5747_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_5747_cast = slice_by_index(begin = var_5747_begin_0, end = var_5747_end_0, end_mask = var_5747_end_mask_0, x = transpose_12);
            tensor<int32, [4]> var_5749_begin_0 = const()[name = tensor<string, []>("op_5749_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_5749_end_0 = const()[name = tensor<string, []>("op_5749_end_0"), val = tensor<int32, [4]>([2, 160, 1, 77])];
            tensor<bool, [4]> var_5749_end_mask_0 = const()[name = tensor<string, []>("op_5749_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_5749_cast = slice_by_index(begin = var_5749_begin_0, end = var_5749_end_0, end_mask = var_5749_end_mask_0, x = v_39_cast);
            tensor<int32, [4]> var_5753_begin_0 = const()[name = tensor<string, []>("op_5753_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_5753_end_0 = const()[name = tensor<string, []>("op_5753_end_0"), val = tensor<int32, [4]>([2, 320, 1, 77])];
            tensor<bool, [4]> var_5753_end_mask_0 = const()[name = tensor<string, []>("op_5753_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_5753_cast = slice_by_index(begin = var_5753_begin_0, end = var_5753_end_0, end_mask = var_5753_end_mask_0, x = v_39_cast);
            tensor<int32, [4]> var_5757_begin_0 = const()[name = tensor<string, []>("op_5757_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_5757_end_0 = const()[name = tensor<string, []>("op_5757_end_0"), val = tensor<int32, [4]>([2, 480, 1, 77])];
            tensor<bool, [4]> var_5757_end_mask_0 = const()[name = tensor<string, []>("op_5757_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_5757_cast = slice_by_index(begin = var_5757_begin_0, end = var_5757_end_0, end_mask = var_5757_end_mask_0, x = v_39_cast);
            tensor<int32, [4]> var_5761_begin_0 = const()[name = tensor<string, []>("op_5761_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_5761_end_0 = const()[name = tensor<string, []>("op_5761_end_0"), val = tensor<int32, [4]>([2, 640, 1, 77])];
            tensor<bool, [4]> var_5761_end_mask_0 = const()[name = tensor<string, []>("op_5761_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_5761_cast = slice_by_index(begin = var_5761_begin_0, end = var_5761_end_0, end_mask = var_5761_end_mask_0, x = v_39_cast);
            tensor<int32, [4]> var_5765_begin_0 = const()[name = tensor<string, []>("op_5765_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_5765_end_0 = const()[name = tensor<string, []>("op_5765_end_0"), val = tensor<int32, [4]>([2, 800, 1, 77])];
            tensor<bool, [4]> var_5765_end_mask_0 = const()[name = tensor<string, []>("op_5765_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_5765_cast = slice_by_index(begin = var_5765_begin_0, end = var_5765_end_0, end_mask = var_5765_end_mask_0, x = v_39_cast);
            tensor<int32, [4]> var_5769_begin_0 = const()[name = tensor<string, []>("op_5769_begin_0"), val = tensor<int32, [4]>([0, 800, 0, 0])];
            tensor<int32, [4]> var_5769_end_0 = const()[name = tensor<string, []>("op_5769_end_0"), val = tensor<int32, [4]>([2, 960, 1, 77])];
            tensor<bool, [4]> var_5769_end_mask_0 = const()[name = tensor<string, []>("op_5769_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_5769_cast = slice_by_index(begin = var_5769_begin_0, end = var_5769_end_0, end_mask = var_5769_end_mask_0, x = v_39_cast);
            tensor<int32, [4]> var_5773_begin_0 = const()[name = tensor<string, []>("op_5773_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_5773_end_0 = const()[name = tensor<string, []>("op_5773_end_0"), val = tensor<int32, [4]>([2, 1120, 1, 77])];
            tensor<bool, [4]> var_5773_end_mask_0 = const()[name = tensor<string, []>("op_5773_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_5773_cast = slice_by_index(begin = var_5773_begin_0, end = var_5773_end_0, end_mask = var_5773_end_mask_0, x = v_39_cast);
            tensor<int32, [4]> var_5777_begin_0 = const()[name = tensor<string, []>("op_5777_begin_0"), val = tensor<int32, [4]>([0, 1120, 0, 0])];
            tensor<int32, [4]> var_5777_end_0 = const()[name = tensor<string, []>("op_5777_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 77])];
            tensor<bool, [4]> var_5777_end_mask_0 = const()[name = tensor<string, []>("op_5777_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_5777_cast = slice_by_index(begin = var_5777_begin_0, end = var_5777_end_0, end_mask = var_5777_end_mask_0, x = v_39_cast);
            tensor<string, []> var_5781_equation_0 = const()[name = tensor<string, []>("op_5781_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_5781_cast = einsum(equation = var_5781_equation_0, values = (var_5719_cast, var_5684_cast));
            tensor<fp16, []> var_5782_to_fp16 = const()[name = tensor<string, []>("op_5782_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_305_cast = mul(x = var_5781_cast, y = var_5782_to_fp16);
            tensor<string, []> var_5785_equation_0 = const()[name = tensor<string, []>("op_5785_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_5785_cast = einsum(equation = var_5785_equation_0, values = (var_5723_cast, var_5688_cast));
            tensor<fp16, []> var_5786_to_fp16 = const()[name = tensor<string, []>("op_5786_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_307_cast = mul(x = var_5785_cast, y = var_5786_to_fp16);
            tensor<string, []> var_5789_equation_0 = const()[name = tensor<string, []>("op_5789_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_5789_cast = einsum(equation = var_5789_equation_0, values = (var_5727_cast, var_5692_cast));
            tensor<fp16, []> var_5790_to_fp16 = const()[name = tensor<string, []>("op_5790_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_309_cast = mul(x = var_5789_cast, y = var_5790_to_fp16);
            tensor<string, []> var_5793_equation_0 = const()[name = tensor<string, []>("op_5793_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_5793_cast = einsum(equation = var_5793_equation_0, values = (var_5731_cast, var_5696_cast));
            tensor<fp16, []> var_5794_to_fp16 = const()[name = tensor<string, []>("op_5794_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_311_cast = mul(x = var_5793_cast, y = var_5794_to_fp16);
            tensor<string, []> var_5797_equation_0 = const()[name = tensor<string, []>("op_5797_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_5797_cast = einsum(equation = var_5797_equation_0, values = (var_5735_cast, var_5700_cast));
            tensor<fp16, []> var_5798_to_fp16 = const()[name = tensor<string, []>("op_5798_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_313_cast = mul(x = var_5797_cast, y = var_5798_to_fp16);
            tensor<string, []> var_5801_equation_0 = const()[name = tensor<string, []>("op_5801_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_5801_cast = einsum(equation = var_5801_equation_0, values = (var_5739_cast, var_5704_cast));
            tensor<fp16, []> var_5802_to_fp16 = const()[name = tensor<string, []>("op_5802_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_315_cast = mul(x = var_5801_cast, y = var_5802_to_fp16);
            tensor<string, []> var_5805_equation_0 = const()[name = tensor<string, []>("op_5805_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_5805_cast = einsum(equation = var_5805_equation_0, values = (var_5743_cast, var_5708_cast));
            tensor<fp16, []> var_5806_to_fp16 = const()[name = tensor<string, []>("op_5806_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_317_cast = mul(x = var_5805_cast, y = var_5806_to_fp16);
            tensor<string, []> var_5809_equation_0 = const()[name = tensor<string, []>("op_5809_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_5809_cast = einsum(equation = var_5809_equation_0, values = (var_5747_cast, var_5712_cast));
            tensor<fp16, []> var_5810_to_fp16 = const()[name = tensor<string, []>("op_5810_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_319_cast = mul(x = var_5809_cast, y = var_5810_to_fp16);
            tensor<fp16, [2, 77, 1, 256]> var_5812_cast = softmax(axis = var_4272, x = aw_305_cast);
            tensor<fp16, [2, 77, 1, 256]> var_5813_cast = softmax(axis = var_4272, x = aw_307_cast);
            tensor<fp16, [2, 77, 1, 256]> var_5814_cast = softmax(axis = var_4272, x = aw_309_cast);
            tensor<fp16, [2, 77, 1, 256]> var_5815_cast = softmax(axis = var_4272, x = aw_311_cast);
            tensor<fp16, [2, 77, 1, 256]> var_5816_cast = softmax(axis = var_4272, x = aw_313_cast);
            tensor<fp16, [2, 77, 1, 256]> var_5817_cast = softmax(axis = var_4272, x = aw_315_cast);
            tensor<fp16, [2, 77, 1, 256]> var_5818_cast = softmax(axis = var_4272, x = aw_317_cast);
            tensor<fp16, [2, 77, 1, 256]> var_5819_cast = softmax(axis = var_4272, x = aw_319_cast);
            tensor<string, []> var_5821_equation_0 = const()[name = tensor<string, []>("op_5821_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_5821_cast = einsum(equation = var_5821_equation_0, values = (var_5749_cast, var_5812_cast));
            tensor<string, []> var_5823_equation_0 = const()[name = tensor<string, []>("op_5823_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_5823_cast = einsum(equation = var_5823_equation_0, values = (var_5753_cast, var_5813_cast));
            tensor<string, []> var_5825_equation_0 = const()[name = tensor<string, []>("op_5825_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_5825_cast = einsum(equation = var_5825_equation_0, values = (var_5757_cast, var_5814_cast));
            tensor<string, []> var_5827_equation_0 = const()[name = tensor<string, []>("op_5827_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_5827_cast = einsum(equation = var_5827_equation_0, values = (var_5761_cast, var_5815_cast));
            tensor<string, []> var_5829_equation_0 = const()[name = tensor<string, []>("op_5829_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_5829_cast = einsum(equation = var_5829_equation_0, values = (var_5765_cast, var_5816_cast));
            tensor<string, []> var_5831_equation_0 = const()[name = tensor<string, []>("op_5831_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_5831_cast = einsum(equation = var_5831_equation_0, values = (var_5769_cast, var_5817_cast));
            tensor<string, []> var_5833_equation_0 = const()[name = tensor<string, []>("op_5833_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_5833_cast = einsum(equation = var_5833_equation_0, values = (var_5773_cast, var_5818_cast));
            tensor<string, []> var_5835_equation_0 = const()[name = tensor<string, []>("op_5835_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_5835_cast = einsum(equation = var_5835_equation_0, values = (var_5777_cast, var_5819_cast));
            tensor<bool, []> input_355_interleave_0 = const()[name = tensor<string, []>("input_355_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 1280, 1, 256]> input_355_cast = concat(axis = var_4272, interleave = input_355_interleave_0, values = (var_5821_cast, var_5823_cast, var_5825_cast, var_5827_cast, var_5829_cast, var_5831_cast, var_5833_cast, var_5835_cast));
            tensor<int32, [2]> var_5841 = const()[name = tensor<string, []>("op_5841"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5843 = const()[name = tensor<string, []>("op_5843"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_5845_pad_type_0 = const()[name = tensor<string, []>("op_5845_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_5845_pad_0 = const()[name = tensor<string, []>("op_5845_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_2_transformer_blocks_0_attn2_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_2_transformer_blocks_0_attn2_to_out_0_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(575722432)))];
            tensor<fp16, [1280]> up_blocks_1_attentions_2_transformer_blocks_0_attn2_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_2_transformer_blocks_0_attn2_to_out_0_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(578999296)))];
            tensor<fp16, [2, 1280, 1, 256]> var_5845_cast = conv(bias = up_blocks_1_attentions_2_transformer_blocks_0_attn2_to_out_0_bias_to_fp16, dilations = var_5843, groups = var_4272, pad = var_5845_pad_0, pad_type = var_5845_pad_type_0, strides = var_5841, weight = up_blocks_1_attentions_2_transformer_blocks_0_attn2_to_out_0_weight_to_fp16, x = input_355_cast);
            tensor<fp16, [2, 1280, 1, 256]> inputs_59_cast = add(x = var_5845_cast, y = inputs_57_cast);
            tensor<int32, [1]> var_5849 = const()[name = tensor<string, []>("op_5849"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> channels_mean_59_cast = reduce_mean(axes = var_5849, keep_dims = var_4267, x = inputs_59_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_59_cast = sub(x = inputs_59_cast, y = channels_mean_59_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_sq_59_cast = mul(x = zero_mean_59_cast, y = zero_mean_59_cast);
            tensor<int32, [1]> var_5853 = const()[name = tensor<string, []>("op_5853"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> var_5854_cast = reduce_mean(axes = var_5853, keep_dims = var_4267, x = zero_mean_sq_59_cast);
            tensor<fp16, []> var_5855_to_fp16 = const()[name = tensor<string, []>("op_5855_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 256]> var_5856_cast = add(x = var_5854_cast, y = var_5855_to_fp16);
            tensor<fp16, []> denom_59_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_59_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 256]> denom_59_cast = rsqrt(epsilon = denom_59_epsilon_0_to_fp16, x = var_5856_cast);
            tensor<fp16, [2, 1280, 1, 256]> out_59_cast = mul(x = zero_mean_59_cast, y = denom_59_cast);
            tensor<fp16, [1, 1280, 1, 1]> var_5860_to_fp16 = const()[name = tensor<string, []>("op_5860_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(579001920)))];
            tensor<fp16, [2, 1280, 1, 256]> var_5861_cast = add(x = out_59_cast, y = var_5860_to_fp16);
            tensor<fp16, [1, 1280, 1, 1]> var_5863_to_fp16 = const()[name = tensor<string, []>("op_5863_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(579004544)))];
            tensor<fp16, [2, 1280, 1, 256]> input_357_cast = mul(x = var_5861_cast, y = var_5863_to_fp16);
            tensor<int32, [2]> var_5871 = const()[name = tensor<string, []>("op_5871"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5873 = const()[name = tensor<string, []>("op_5873"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_5875_pad_type_0 = const()[name = tensor<string, []>("op_5875_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_5875_pad_0 = const()[name = tensor<string, []>("op_5875_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [10240, 1280, 1, 1]> up_blocks_1_attentions_2_transformer_blocks_0_ff_net_0_proj_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_2_transformer_blocks_0_ff_net_0_proj_weight_to_fp16"), val = tensor<fp16, [10240, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(579007168)))];
            tensor<fp16, [10240]> up_blocks_1_attentions_2_transformer_blocks_0_ff_net_0_proj_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_2_transformer_blocks_0_ff_net_0_proj_bias_to_fp16"), val = tensor<fp16, [10240]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(605221632)))];
            tensor<fp16, [2, 10240, 1, 256]> var_5875_cast = conv(bias = up_blocks_1_attentions_2_transformer_blocks_0_ff_net_0_proj_bias_to_fp16, dilations = var_5873, groups = var_4272, pad = var_5875_pad_0, pad_type = var_5875_pad_type_0, strides = var_5871, weight = up_blocks_1_attentions_2_transformer_blocks_0_ff_net_0_proj_weight_to_fp16, x = input_357_cast);
            tensor<int32, [2]> var_5876_split_sizes_0 = const()[name = tensor<string, []>("op_5876_split_sizes_0"), val = tensor<int32, [2]>([5120, 5120])];
            tensor<int32, []> var_5876_axis_0 = const()[name = tensor<string, []>("op_5876_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [2, 5120, 1, 256]> var_5876_cast_0, tensor<fp16, [2, 5120, 1, 256]> var_5876_cast_1 = split(axis = var_5876_axis_0, split_sizes = var_5876_split_sizes_0, x = var_5875_cast);
            tensor<string, []> var_5878_mode_0 = const()[name = tensor<string, []>("op_5878_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [2, 5120, 1, 256]> var_5878_cast = gelu(mode = var_5878_mode_0, x = var_5876_cast_1);
            tensor<fp16, [2, 5120, 1, 256]> input_359_cast = mul(x = var_5876_cast_0, y = var_5878_cast);
            tensor<int32, [2]> var_5882 = const()[name = tensor<string, []>("op_5882"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5884 = const()[name = tensor<string, []>("op_5884"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_5886_pad_type_0 = const()[name = tensor<string, []>("op_5886_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_5886_pad_0 = const()[name = tensor<string, []>("op_5886_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 5120, 1, 1]> up_blocks_1_attentions_2_transformer_blocks_0_ff_net_2_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_2_transformer_blocks_0_ff_net_2_weight_to_fp16"), val = tensor<fp16, [1280, 5120, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(605242176)))];
            tensor<fp16, [1280]> up_blocks_1_attentions_2_transformer_blocks_0_ff_net_2_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_2_transformer_blocks_0_ff_net_2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(618349440)))];
            tensor<fp16, [2, 1280, 1, 256]> var_5886_cast = conv(bias = up_blocks_1_attentions_2_transformer_blocks_0_ff_net_2_bias_to_fp16, dilations = var_5884, groups = var_4272, pad = var_5886_pad_0, pad_type = var_5886_pad_type_0, strides = var_5882, weight = up_blocks_1_attentions_2_transformer_blocks_0_ff_net_2_weight_to_fp16, x = input_359_cast);
            tensor<fp16, [2, 1280, 1, 256]> hidden_states_213_cast = add(x = var_5886_cast, y = inputs_59_cast);
            tensor<int32, [4]> var_5888 = const()[name = tensor<string, []>("op_5888"), val = tensor<int32, [4]>([2, 1280, 16, 16])];
            tensor<fp16, [2, 1280, 16, 16]> input_361_cast = reshape(shape = var_5888, x = hidden_states_213_cast);
            tensor<int32, [2]> var_5892 = const()[name = tensor<string, []>("op_5892"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5894 = const()[name = tensor<string, []>("op_5894"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_215_pad_type_0 = const()[name = tensor<string, []>("hidden_states_215_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_215_pad_0 = const()[name = tensor<string, []>("hidden_states_215_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_2_proj_out_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_2_proj_out_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(618352064)))];
            tensor<fp16, [1280]> up_blocks_1_attentions_2_proj_out_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_2_proj_out_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(621628928)))];
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_215_cast = conv(bias = up_blocks_1_attentions_2_proj_out_bias_to_fp16, dilations = var_5894, groups = var_4272, pad = hidden_states_215_pad_0, pad_type = hidden_states_215_pad_type_0, strides = var_5892, weight = up_blocks_1_attentions_2_proj_out_weight_to_fp16, x = input_361_cast);
            tensor<fp16, [2, 1280, 16, 16]> input_363_cast = add(x = hidden_states_215_cast, y = hidden_states_203_cast);
            tensor<fp32, []> input_365_scale_factor_height_0 = const()[name = tensor<string, []>("input_365_scale_factor_height_0"), val = tensor<fp32, []>(0x1p+1)];
            tensor<fp32, []> input_365_scale_factor_width_0 = const()[name = tensor<string, []>("input_365_scale_factor_width_0"), val = tensor<fp32, []>(0x1p+1)];
            tensor<fp16, [2, 1280, 32, 32]> input_365_cast = upsample_nearest_neighbor(scale_factor_height = input_365_scale_factor_height_0, scale_factor_width = input_365_scale_factor_width_0, x = input_363_cast);
            tensor<int32, [2]> var_5903 = const()[name = tensor<string, []>("op_5903"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5905 = const()[name = tensor<string, []>("op_5905"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_217_pad_type_0 = const()[name = tensor<string, []>("hidden_states_217_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_217_pad_0 = const()[name = tensor<string, []>("hidden_states_217_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 1280, 3, 3]> up_blocks_1_upsamplers_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_upsamplers_0_conv_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(621631552)))];
            tensor<fp16, [1280]> up_blocks_1_upsamplers_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_upsamplers_0_conv_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(651122816)))];
            tensor<fp16, [2, 1280, 32, 32]> hidden_states_217_cast = conv(bias = up_blocks_1_upsamplers_0_conv_bias_to_fp16, dilations = var_5905, groups = var_4272, pad = hidden_states_217_pad_0, pad_type = hidden_states_217_pad_type_0, strides = var_5903, weight = up_blocks_1_upsamplers_0_conv_weight_to_fp16, x = input_365_cast);
            tensor<bool, []> var_5925 = const()[name = tensor<string, []>("op_5925"), val = tensor<bool, []>(true)];
            tensor<int32, []> var_5930 = const()[name = tensor<string, []>("op_5930"), val = tensor<int32, []>(1)];
            tensor<bool, []> input_367_interleave_0 = const()[name = tensor<string, []>("input_367_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 640, 32, 32]> cast_7 = cast(dtype = cast_4_dtype_0, x = input_115_cast);
            tensor<fp16, [2, 1920, 32, 32]> input_367_cast = concat(axis = var_5930, interleave = input_367_interleave_0, values = (hidden_states_217_cast, cast_7));
            tensor<int32, [5]> reshape_168_shape_0 = const()[name = tensor<string, []>("reshape_168_shape_0"), val = tensor<int32, [5]>([2, 32, 60, 32, 32])];
            tensor<fp16, [2, 32, 60, 32, 32]> reshape_168_cast = reshape(shape = reshape_168_shape_0, x = input_367_cast);
            tensor<int32, [3]> reduce_mean_126_axes_0 = const()[name = tensor<string, []>("reduce_mean_126_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_126_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_126_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_126_cast = reduce_mean(axes = reduce_mean_126_axes_0, keep_dims = reduce_mean_126_keep_dims_0, x = reshape_168_cast);
            tensor<fp16, [2, 32, 60, 32, 32]> sub_84_cast = sub(x = reshape_168_cast, y = reduce_mean_126_cast);
            tensor<fp16, [2, 32, 60, 32, 32]> square_42_cast = square(x = sub_84_cast);
            tensor<int32, [3]> reduce_mean_128_axes_0 = const()[name = tensor<string, []>("reduce_mean_128_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_128_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_128_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_128_cast = reduce_mean(axes = reduce_mean_128_axes_0, keep_dims = reduce_mean_128_keep_dims_0, x = square_42_cast);
            tensor<fp16, []> add_84_y_0_to_fp16 = const()[name = tensor<string, []>("add_84_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_84_cast = add(x = reduce_mean_128_cast, y = add_84_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_42_cast = sqrt(x = add_84_cast);
            tensor<fp16, [2, 32, 60, 32, 32]> real_div_42_cast = real_div(x = sub_84_cast, y = sqrt_42_cast);
            tensor<int32, [4]> reshape_169_shape_0 = const()[name = tensor<string, []>("reshape_169_shape_0"), val = tensor<int32, [4]>([2, 1920, 32, 32])];
            tensor<fp16, [2, 1920, 32, 32]> reshape_169_cast = reshape(shape = reshape_169_shape_0, x = real_div_42_cast);
            tensor<fp16, [1920]> add_85_mean_0_to_fp16 = const()[name = tensor<string, []>("add_85_mean_0_to_fp16"), val = tensor<fp16, [1920]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(651125440)))];
            tensor<fp16, [1920]> add_85_variance_0_to_fp16 = const()[name = tensor<string, []>("add_85_variance_0_to_fp16"), val = tensor<fp16, [1920]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(651129344)))];
            tensor<fp16, [1920]> add_85_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_85_gamma_0_to_fp16"), val = tensor<fp16, [1920]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(651133248)))];
            tensor<fp16, [1920]> add_85_beta_0_to_fp16 = const()[name = tensor<string, []>("add_85_beta_0_to_fp16"), val = tensor<fp16, [1920]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(651137152)))];
            tensor<fp16, []> add_85_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_85_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1920, 32, 32]> add_85_cast = batch_norm(beta = add_85_beta_0_to_fp16, epsilon = add_85_epsilon_0_to_fp16, gamma = add_85_gamma_0_to_fp16, mean = add_85_mean_0_to_fp16, variance = add_85_variance_0_to_fp16, x = reshape_169_cast);
            tensor<fp16, [2, 1920, 32, 32]> input_371_cast = silu(x = add_85_cast);
            tensor<int32, [2]> var_5959 = const()[name = tensor<string, []>("op_5959"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5961 = const()[name = tensor<string, []>("op_5961"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_219_pad_type_0 = const()[name = tensor<string, []>("hidden_states_219_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_219_pad_0 = const()[name = tensor<string, []>("hidden_states_219_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [640, 1920, 3, 3]> up_blocks_2_resnets_0_conv1_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_0_conv1_weight_to_fp16"), val = tensor<fp16, [640, 1920, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(651141056)))];
            tensor<fp16, [640]> up_blocks_2_resnets_0_conv1_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_0_conv1_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(673259520)))];
            tensor<fp16, [2, 640, 32, 32]> hidden_states_219_cast = conv(bias = up_blocks_2_resnets_0_conv1_bias_to_fp16, dilations = var_5961, groups = var_5930, pad = hidden_states_219_pad_0, pad_type = hidden_states_219_pad_type_0, strides = var_5959, weight = up_blocks_2_resnets_0_conv1_weight_to_fp16, x = input_371_cast);
            tensor<int32, [2]> var_5967 = const()[name = tensor<string, []>("op_5967"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5969 = const()[name = tensor<string, []>("op_5969"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> temb_33_pad_type_0 = const()[name = tensor<string, []>("temb_33_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> temb_33_pad_0 = const()[name = tensor<string, []>("temb_33_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 1280, 1, 1]> up_blocks_2_resnets_0_time_emb_proj_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_0_time_emb_proj_weight_to_fp16"), val = tensor<fp16, [640, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(673260864)))];
            tensor<fp16, [640]> up_blocks_2_resnets_0_time_emb_proj_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_0_time_emb_proj_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(674899328)))];
            tensor<fp16, [2, 640, 1, 1]> temb_33_cast = conv(bias = up_blocks_2_resnets_0_time_emb_proj_bias_to_fp16, dilations = var_5969, groups = var_5930, pad = temb_33_pad_0, pad_type = temb_33_pad_type_0, strides = var_5967, weight = up_blocks_2_resnets_0_time_emb_proj_weight_to_fp16, x = cast_12);
            tensor<fp16, [2, 640, 32, 32]> input_375_cast = add(x = hidden_states_219_cast, y = temb_33_cast);
            tensor<int32, [5]> reshape_172_shape_0 = const()[name = tensor<string, []>("reshape_172_shape_0"), val = tensor<int32, [5]>([2, 32, 20, 32, 32])];
            tensor<fp16, [2, 32, 20, 32, 32]> reshape_172_cast = reshape(shape = reshape_172_shape_0, x = input_375_cast);
            tensor<int32, [3]> reduce_mean_129_axes_0 = const()[name = tensor<string, []>("reduce_mean_129_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_129_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_129_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_129_cast = reduce_mean(axes = reduce_mean_129_axes_0, keep_dims = reduce_mean_129_keep_dims_0, x = reshape_172_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> sub_86_cast = sub(x = reshape_172_cast, y = reduce_mean_129_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> square_43_cast = square(x = sub_86_cast);
            tensor<int32, [3]> reduce_mean_131_axes_0 = const()[name = tensor<string, []>("reduce_mean_131_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_131_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_131_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_131_cast = reduce_mean(axes = reduce_mean_131_axes_0, keep_dims = reduce_mean_131_keep_dims_0, x = square_43_cast);
            tensor<fp16, []> add_86_y_0_to_fp16 = const()[name = tensor<string, []>("add_86_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_86_cast = add(x = reduce_mean_131_cast, y = add_86_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_43_cast = sqrt(x = add_86_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> real_div_43_cast = real_div(x = sub_86_cast, y = sqrt_43_cast);
            tensor<int32, [4]> reshape_173_shape_0 = const()[name = tensor<string, []>("reshape_173_shape_0"), val = tensor<int32, [4]>([2, 640, 32, 32])];
            tensor<fp16, [2, 640, 32, 32]> reshape_173_cast = reshape(shape = reshape_173_shape_0, x = real_div_43_cast);
            tensor<fp16, [640]> add_87_mean_0_to_fp16 = const()[name = tensor<string, []>("add_87_mean_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(674900672)))];
            tensor<fp16, [640]> add_87_variance_0_to_fp16 = const()[name = tensor<string, []>("add_87_variance_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(674902016)))];
            tensor<fp16, [640]> add_87_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_87_gamma_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(674903360)))];
            tensor<fp16, [640]> add_87_beta_0_to_fp16 = const()[name = tensor<string, []>("add_87_beta_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(674904704)))];
            tensor<fp16, []> add_87_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_87_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 640, 32, 32]> add_87_cast = batch_norm(beta = add_87_beta_0_to_fp16, epsilon = add_87_epsilon_0_to_fp16, gamma = add_87_gamma_0_to_fp16, mean = add_87_mean_0_to_fp16, variance = add_87_variance_0_to_fp16, x = reshape_173_cast);
            tensor<fp16, [2, 640, 32, 32]> input_379_cast = silu(x = add_87_cast);
            tensor<int32, [2]> var_5979 = const()[name = tensor<string, []>("op_5979"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5981 = const()[name = tensor<string, []>("op_5981"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_221_pad_type_0 = const()[name = tensor<string, []>("hidden_states_221_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_221_pad_0 = const()[name = tensor<string, []>("hidden_states_221_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [640, 640, 3, 3]> up_blocks_2_resnets_0_conv2_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_0_conv2_weight_to_fp16"), val = tensor<fp16, [640, 640, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(674906048)))];
            tensor<fp16, [640]> up_blocks_2_resnets_0_conv2_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_0_conv2_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(682278912)))];
            tensor<fp16, [2, 640, 32, 32]> hidden_states_221_cast = conv(bias = up_blocks_2_resnets_0_conv2_bias_to_fp16, dilations = var_5981, groups = var_5930, pad = hidden_states_221_pad_0, pad_type = hidden_states_221_pad_type_0, strides = var_5979, weight = up_blocks_2_resnets_0_conv2_weight_to_fp16, x = input_379_cast);
            tensor<int32, [2]> var_5986 = const()[name = tensor<string, []>("op_5986"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5988 = const()[name = tensor<string, []>("op_5988"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_17_pad_type_0 = const()[name = tensor<string, []>("x_17_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_17_pad_0 = const()[name = tensor<string, []>("x_17_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 1920, 1, 1]> up_blocks_2_resnets_0_conv_shortcut_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_0_conv_shortcut_weight_to_fp16"), val = tensor<fp16, [640, 1920, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(682280256)))];
            tensor<fp16, [640]> up_blocks_2_resnets_0_conv_shortcut_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_0_conv_shortcut_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(684737920)))];
            tensor<fp16, [2, 640, 32, 32]> x_17_cast = conv(bias = up_blocks_2_resnets_0_conv_shortcut_bias_to_fp16, dilations = var_5988, groups = var_5930, pad = x_17_pad_0, pad_type = x_17_pad_type_0, strides = var_5986, weight = up_blocks_2_resnets_0_conv_shortcut_weight_to_fp16, x = input_367_cast);
            tensor<fp16, [2, 640, 32, 32]> hidden_states_223_cast = add(x = x_17_cast, y = hidden_states_221_cast);
            tensor<int32, [5]> reshape_176_shape_0 = const()[name = tensor<string, []>("reshape_176_shape_0"), val = tensor<int32, [5]>([2, 32, 20, 32, 32])];
            tensor<fp16, [2, 32, 20, 32, 32]> reshape_176_cast = reshape(shape = reshape_176_shape_0, x = hidden_states_223_cast);
            tensor<int32, [3]> reduce_mean_132_axes_0 = const()[name = tensor<string, []>("reduce_mean_132_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_132_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_132_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_132_cast = reduce_mean(axes = reduce_mean_132_axes_0, keep_dims = reduce_mean_132_keep_dims_0, x = reshape_176_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> sub_88_cast = sub(x = reshape_176_cast, y = reduce_mean_132_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> square_44_cast = square(x = sub_88_cast);
            tensor<int32, [3]> reduce_mean_134_axes_0 = const()[name = tensor<string, []>("reduce_mean_134_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_134_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_134_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_134_cast = reduce_mean(axes = reduce_mean_134_axes_0, keep_dims = reduce_mean_134_keep_dims_0, x = square_44_cast);
            tensor<fp16, []> add_88_y_0_to_fp16 = const()[name = tensor<string, []>("add_88_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_88_cast = add(x = reduce_mean_134_cast, y = add_88_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_44_cast = sqrt(x = add_88_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> real_div_44_cast = real_div(x = sub_88_cast, y = sqrt_44_cast);
            tensor<int32, [4]> reshape_177_shape_0 = const()[name = tensor<string, []>("reshape_177_shape_0"), val = tensor<int32, [4]>([2, 640, 32, 32])];
            tensor<fp16, [2, 640, 32, 32]> reshape_177_cast = reshape(shape = reshape_177_shape_0, x = real_div_44_cast);
            tensor<fp16, [640]> add_89_mean_0_to_fp16 = const()[name = tensor<string, []>("add_89_mean_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(684739264)))];
            tensor<fp16, [640]> add_89_variance_0_to_fp16 = const()[name = tensor<string, []>("add_89_variance_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(684740608)))];
            tensor<fp16, [640]> add_89_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_89_gamma_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(684741952)))];
            tensor<fp16, [640]> add_89_beta_0_to_fp16 = const()[name = tensor<string, []>("add_89_beta_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(684743296)))];
            tensor<fp16, []> add_89_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_89_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 640, 32, 32]> add_89_cast = batch_norm(beta = add_89_beta_0_to_fp16, epsilon = add_89_epsilon_0_to_fp16, gamma = add_89_gamma_0_to_fp16, mean = add_89_mean_0_to_fp16, variance = add_89_variance_0_to_fp16, x = reshape_177_cast);
            tensor<int32, [2]> var_6008 = const()[name = tensor<string, []>("op_6008"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6010 = const()[name = tensor<string, []>("op_6010"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_225_pad_type_0 = const()[name = tensor<string, []>("hidden_states_225_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_225_pad_0 = const()[name = tensor<string, []>("hidden_states_225_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_0_proj_in_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_0_proj_in_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(684744640)))];
            tensor<fp16, [640]> up_blocks_2_attentions_0_proj_in_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_0_proj_in_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(685563904)))];
            tensor<fp16, [2, 640, 32, 32]> hidden_states_225_cast = conv(bias = up_blocks_2_attentions_0_proj_in_bias_to_fp16, dilations = var_6010, groups = var_5930, pad = hidden_states_225_pad_0, pad_type = hidden_states_225_pad_type_0, strides = var_6008, weight = up_blocks_2_attentions_0_proj_in_weight_to_fp16, x = add_89_cast);
            tensor<int32, [4]> var_6015 = const()[name = tensor<string, []>("op_6015"), val = tensor<int32, [4]>([2, 640, 1, 1024])];
            tensor<fp16, [2, 640, 1, 1024]> inputs_61_cast = reshape(shape = var_6015, x = hidden_states_225_cast);
            tensor<int32, [1]> var_6025 = const()[name = tensor<string, []>("op_6025"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> channels_mean_61_cast = reduce_mean(axes = var_6025, keep_dims = var_5925, x = inputs_61_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_61_cast = sub(x = inputs_61_cast, y = channels_mean_61_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_sq_61_cast = mul(x = zero_mean_61_cast, y = zero_mean_61_cast);
            tensor<int32, [1]> var_6029 = const()[name = tensor<string, []>("op_6029"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> var_6030_cast = reduce_mean(axes = var_6029, keep_dims = var_5925, x = zero_mean_sq_61_cast);
            tensor<fp16, []> var_6031_to_fp16 = const()[name = tensor<string, []>("op_6031_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 1024]> var_6032_cast = add(x = var_6030_cast, y = var_6031_to_fp16);
            tensor<fp16, []> denom_61_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_61_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 1024]> denom_61_cast = rsqrt(epsilon = denom_61_epsilon_0_to_fp16, x = var_6032_cast);
            tensor<fp16, [2, 640, 1, 1024]> out_61_cast = mul(x = zero_mean_61_cast, y = denom_61_cast);
            tensor<fp16, [1, 640, 1, 1]> var_6036_to_fp16 = const()[name = tensor<string, []>("op_6036_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(685565248)))];
            tensor<fp16, [2, 640, 1, 1024]> var_6037_cast = add(x = out_61_cast, y = var_6036_to_fp16);
            tensor<fp16, [1, 640, 1, 1]> var_6039_to_fp16 = const()[name = tensor<string, []>("op_6039_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(685566592)))];
            tensor<fp16, [2, 640, 1, 1024]> hidden_states_227_cast = mul(x = var_6037_cast, y = var_6039_to_fp16);
            tensor<int32, [2]> var_6046 = const()[name = tensor<string, []>("op_6046"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6048 = const()[name = tensor<string, []>("op_6048"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_41_pad_type_0 = const()[name = tensor<string, []>("q_41_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_41_pad_0 = const()[name = tensor<string, []>("q_41_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_0_transformer_blocks_0_attn1_to_q_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_0_transformer_blocks_0_attn1_to_q_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(685567936)))];
            tensor<fp16, [2, 640, 1, 1024]> q_41_cast = conv(dilations = var_6048, groups = var_5930, pad = q_41_pad_0, pad_type = q_41_pad_type_0, strides = var_6046, weight = up_blocks_2_attentions_0_transformer_blocks_0_attn1_to_q_weight_to_fp16, x = hidden_states_227_cast);
            tensor<int32, [2]> var_6052 = const()[name = tensor<string, []>("op_6052"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6054 = const()[name = tensor<string, []>("op_6054"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_81_pad_type_0 = const()[name = tensor<string, []>("k_81_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_81_pad_0 = const()[name = tensor<string, []>("k_81_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_0_transformer_blocks_0_attn1_to_k_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_0_transformer_blocks_0_attn1_to_k_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(686387200)))];
            tensor<fp16, [2, 640, 1, 1024]> k_81_cast = conv(dilations = var_6054, groups = var_5930, pad = k_81_pad_0, pad_type = k_81_pad_type_0, strides = var_6052, weight = up_blocks_2_attentions_0_transformer_blocks_0_attn1_to_k_weight_to_fp16, x = hidden_states_227_cast);
            tensor<int32, [2]> var_6058 = const()[name = tensor<string, []>("op_6058"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6060 = const()[name = tensor<string, []>("op_6060"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_41_pad_type_0 = const()[name = tensor<string, []>("v_41_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_41_pad_0 = const()[name = tensor<string, []>("v_41_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_0_transformer_blocks_0_attn1_to_v_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_0_transformer_blocks_0_attn1_to_v_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(687206464)))];
            tensor<fp16, [2, 640, 1, 1024]> v_41_cast = conv(dilations = var_6060, groups = var_5930, pad = v_41_pad_0, pad_type = v_41_pad_type_0, strides = var_6058, weight = up_blocks_2_attentions_0_transformer_blocks_0_attn1_to_v_weight_to_fp16, x = hidden_states_227_cast);
            tensor<int32, [4]> var_6064_begin_0 = const()[name = tensor<string, []>("op_6064_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_6064_end_0 = const()[name = tensor<string, []>("op_6064_end_0"), val = tensor<int32, [4]>([2, 80, 1, 1024])];
            tensor<bool, [4]> var_6064_end_mask_0 = const()[name = tensor<string, []>("op_6064_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6064_cast = slice_by_index(begin = var_6064_begin_0, end = var_6064_end_0, end_mask = var_6064_end_mask_0, x = q_41_cast);
            tensor<int32, [4]> var_6068_begin_0 = const()[name = tensor<string, []>("op_6068_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_6068_end_0 = const()[name = tensor<string, []>("op_6068_end_0"), val = tensor<int32, [4]>([2, 160, 1, 1024])];
            tensor<bool, [4]> var_6068_end_mask_0 = const()[name = tensor<string, []>("op_6068_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6068_cast = slice_by_index(begin = var_6068_begin_0, end = var_6068_end_0, end_mask = var_6068_end_mask_0, x = q_41_cast);
            tensor<int32, [4]> var_6072_begin_0 = const()[name = tensor<string, []>("op_6072_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_6072_end_0 = const()[name = tensor<string, []>("op_6072_end_0"), val = tensor<int32, [4]>([2, 240, 1, 1024])];
            tensor<bool, [4]> var_6072_end_mask_0 = const()[name = tensor<string, []>("op_6072_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6072_cast = slice_by_index(begin = var_6072_begin_0, end = var_6072_end_0, end_mask = var_6072_end_mask_0, x = q_41_cast);
            tensor<int32, [4]> var_6076_begin_0 = const()[name = tensor<string, []>("op_6076_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_6076_end_0 = const()[name = tensor<string, []>("op_6076_end_0"), val = tensor<int32, [4]>([2, 320, 1, 1024])];
            tensor<bool, [4]> var_6076_end_mask_0 = const()[name = tensor<string, []>("op_6076_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6076_cast = slice_by_index(begin = var_6076_begin_0, end = var_6076_end_0, end_mask = var_6076_end_mask_0, x = q_41_cast);
            tensor<int32, [4]> var_6080_begin_0 = const()[name = tensor<string, []>("op_6080_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_6080_end_0 = const()[name = tensor<string, []>("op_6080_end_0"), val = tensor<int32, [4]>([2, 400, 1, 1024])];
            tensor<bool, [4]> var_6080_end_mask_0 = const()[name = tensor<string, []>("op_6080_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6080_cast = slice_by_index(begin = var_6080_begin_0, end = var_6080_end_0, end_mask = var_6080_end_mask_0, x = q_41_cast);
            tensor<int32, [4]> var_6084_begin_0 = const()[name = tensor<string, []>("op_6084_begin_0"), val = tensor<int32, [4]>([0, 400, 0, 0])];
            tensor<int32, [4]> var_6084_end_0 = const()[name = tensor<string, []>("op_6084_end_0"), val = tensor<int32, [4]>([2, 480, 1, 1024])];
            tensor<bool, [4]> var_6084_end_mask_0 = const()[name = tensor<string, []>("op_6084_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6084_cast = slice_by_index(begin = var_6084_begin_0, end = var_6084_end_0, end_mask = var_6084_end_mask_0, x = q_41_cast);
            tensor<int32, [4]> var_6088_begin_0 = const()[name = tensor<string, []>("op_6088_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_6088_end_0 = const()[name = tensor<string, []>("op_6088_end_0"), val = tensor<int32, [4]>([2, 560, 1, 1024])];
            tensor<bool, [4]> var_6088_end_mask_0 = const()[name = tensor<string, []>("op_6088_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6088_cast = slice_by_index(begin = var_6088_begin_0, end = var_6088_end_0, end_mask = var_6088_end_mask_0, x = q_41_cast);
            tensor<int32, [4]> var_6092_begin_0 = const()[name = tensor<string, []>("op_6092_begin_0"), val = tensor<int32, [4]>([0, 560, 0, 0])];
            tensor<int32, [4]> var_6092_end_0 = const()[name = tensor<string, []>("op_6092_end_0"), val = tensor<int32, [4]>([2, 640, 1, 1024])];
            tensor<bool, [4]> var_6092_end_mask_0 = const()[name = tensor<string, []>("op_6092_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6092_cast = slice_by_index(begin = var_6092_begin_0, end = var_6092_end_0, end_mask = var_6092_end_mask_0, x = q_41_cast);
            tensor<int32, [4]> k_83_perm_0 = const()[name = tensor<string, []>("k_83_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_6099_begin_0 = const()[name = tensor<string, []>("op_6099_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_6099_end_0 = const()[name = tensor<string, []>("op_6099_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 80])];
            tensor<bool, [4]> var_6099_end_mask_0 = const()[name = tensor<string, []>("op_6099_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 640]> transpose_11 = transpose(perm = k_83_perm_0, x = k_81_cast);
            tensor<fp16, [2, 1024, 1, 80]> var_6099_cast = slice_by_index(begin = var_6099_begin_0, end = var_6099_end_0, end_mask = var_6099_end_mask_0, x = transpose_11);
            tensor<int32, [4]> var_6103_begin_0 = const()[name = tensor<string, []>("op_6103_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 80])];
            tensor<int32, [4]> var_6103_end_0 = const()[name = tensor<string, []>("op_6103_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 160])];
            tensor<bool, [4]> var_6103_end_mask_0 = const()[name = tensor<string, []>("op_6103_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_6103_cast = slice_by_index(begin = var_6103_begin_0, end = var_6103_end_0, end_mask = var_6103_end_mask_0, x = transpose_11);
            tensor<int32, [4]> var_6107_begin_0 = const()[name = tensor<string, []>("op_6107_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 160])];
            tensor<int32, [4]> var_6107_end_0 = const()[name = tensor<string, []>("op_6107_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 240])];
            tensor<bool, [4]> var_6107_end_mask_0 = const()[name = tensor<string, []>("op_6107_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_6107_cast = slice_by_index(begin = var_6107_begin_0, end = var_6107_end_0, end_mask = var_6107_end_mask_0, x = transpose_11);
            tensor<int32, [4]> var_6111_begin_0 = const()[name = tensor<string, []>("op_6111_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 240])];
            tensor<int32, [4]> var_6111_end_0 = const()[name = tensor<string, []>("op_6111_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 320])];
            tensor<bool, [4]> var_6111_end_mask_0 = const()[name = tensor<string, []>("op_6111_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_6111_cast = slice_by_index(begin = var_6111_begin_0, end = var_6111_end_0, end_mask = var_6111_end_mask_0, x = transpose_11);
            tensor<int32, [4]> var_6115_begin_0 = const()[name = tensor<string, []>("op_6115_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_6115_end_0 = const()[name = tensor<string, []>("op_6115_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 400])];
            tensor<bool, [4]> var_6115_end_mask_0 = const()[name = tensor<string, []>("op_6115_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_6115_cast = slice_by_index(begin = var_6115_begin_0, end = var_6115_end_0, end_mask = var_6115_end_mask_0, x = transpose_11);
            tensor<int32, [4]> var_6119_begin_0 = const()[name = tensor<string, []>("op_6119_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 400])];
            tensor<int32, [4]> var_6119_end_0 = const()[name = tensor<string, []>("op_6119_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 480])];
            tensor<bool, [4]> var_6119_end_mask_0 = const()[name = tensor<string, []>("op_6119_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_6119_cast = slice_by_index(begin = var_6119_begin_0, end = var_6119_end_0, end_mask = var_6119_end_mask_0, x = transpose_11);
            tensor<int32, [4]> var_6123_begin_0 = const()[name = tensor<string, []>("op_6123_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 480])];
            tensor<int32, [4]> var_6123_end_0 = const()[name = tensor<string, []>("op_6123_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 560])];
            tensor<bool, [4]> var_6123_end_mask_0 = const()[name = tensor<string, []>("op_6123_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_6123_cast = slice_by_index(begin = var_6123_begin_0, end = var_6123_end_0, end_mask = var_6123_end_mask_0, x = transpose_11);
            tensor<int32, [4]> var_6127_begin_0 = const()[name = tensor<string, []>("op_6127_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 560])];
            tensor<int32, [4]> var_6127_end_0 = const()[name = tensor<string, []>("op_6127_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 640])];
            tensor<bool, [4]> var_6127_end_mask_0 = const()[name = tensor<string, []>("op_6127_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_6127_cast = slice_by_index(begin = var_6127_begin_0, end = var_6127_end_0, end_mask = var_6127_end_mask_0, x = transpose_11);
            tensor<int32, [4]> var_6129_begin_0 = const()[name = tensor<string, []>("op_6129_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_6129_end_0 = const()[name = tensor<string, []>("op_6129_end_0"), val = tensor<int32, [4]>([2, 80, 1, 1024])];
            tensor<bool, [4]> var_6129_end_mask_0 = const()[name = tensor<string, []>("op_6129_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6129_cast = slice_by_index(begin = var_6129_begin_0, end = var_6129_end_0, end_mask = var_6129_end_mask_0, x = v_41_cast);
            tensor<int32, [4]> var_6133_begin_0 = const()[name = tensor<string, []>("op_6133_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_6133_end_0 = const()[name = tensor<string, []>("op_6133_end_0"), val = tensor<int32, [4]>([2, 160, 1, 1024])];
            tensor<bool, [4]> var_6133_end_mask_0 = const()[name = tensor<string, []>("op_6133_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6133_cast = slice_by_index(begin = var_6133_begin_0, end = var_6133_end_0, end_mask = var_6133_end_mask_0, x = v_41_cast);
            tensor<int32, [4]> var_6137_begin_0 = const()[name = tensor<string, []>("op_6137_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_6137_end_0 = const()[name = tensor<string, []>("op_6137_end_0"), val = tensor<int32, [4]>([2, 240, 1, 1024])];
            tensor<bool, [4]> var_6137_end_mask_0 = const()[name = tensor<string, []>("op_6137_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6137_cast = slice_by_index(begin = var_6137_begin_0, end = var_6137_end_0, end_mask = var_6137_end_mask_0, x = v_41_cast);
            tensor<int32, [4]> var_6141_begin_0 = const()[name = tensor<string, []>("op_6141_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_6141_end_0 = const()[name = tensor<string, []>("op_6141_end_0"), val = tensor<int32, [4]>([2, 320, 1, 1024])];
            tensor<bool, [4]> var_6141_end_mask_0 = const()[name = tensor<string, []>("op_6141_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6141_cast = slice_by_index(begin = var_6141_begin_0, end = var_6141_end_0, end_mask = var_6141_end_mask_0, x = v_41_cast);
            tensor<int32, [4]> var_6145_begin_0 = const()[name = tensor<string, []>("op_6145_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_6145_end_0 = const()[name = tensor<string, []>("op_6145_end_0"), val = tensor<int32, [4]>([2, 400, 1, 1024])];
            tensor<bool, [4]> var_6145_end_mask_0 = const()[name = tensor<string, []>("op_6145_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6145_cast = slice_by_index(begin = var_6145_begin_0, end = var_6145_end_0, end_mask = var_6145_end_mask_0, x = v_41_cast);
            tensor<int32, [4]> var_6149_begin_0 = const()[name = tensor<string, []>("op_6149_begin_0"), val = tensor<int32, [4]>([0, 400, 0, 0])];
            tensor<int32, [4]> var_6149_end_0 = const()[name = tensor<string, []>("op_6149_end_0"), val = tensor<int32, [4]>([2, 480, 1, 1024])];
            tensor<bool, [4]> var_6149_end_mask_0 = const()[name = tensor<string, []>("op_6149_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6149_cast = slice_by_index(begin = var_6149_begin_0, end = var_6149_end_0, end_mask = var_6149_end_mask_0, x = v_41_cast);
            tensor<int32, [4]> var_6153_begin_0 = const()[name = tensor<string, []>("op_6153_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_6153_end_0 = const()[name = tensor<string, []>("op_6153_end_0"), val = tensor<int32, [4]>([2, 560, 1, 1024])];
            tensor<bool, [4]> var_6153_end_mask_0 = const()[name = tensor<string, []>("op_6153_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6153_cast = slice_by_index(begin = var_6153_begin_0, end = var_6153_end_0, end_mask = var_6153_end_mask_0, x = v_41_cast);
            tensor<int32, [4]> var_6157_begin_0 = const()[name = tensor<string, []>("op_6157_begin_0"), val = tensor<int32, [4]>([0, 560, 0, 0])];
            tensor<int32, [4]> var_6157_end_0 = const()[name = tensor<string, []>("op_6157_end_0"), val = tensor<int32, [4]>([2, 640, 1, 1024])];
            tensor<bool, [4]> var_6157_end_mask_0 = const()[name = tensor<string, []>("op_6157_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6157_cast = slice_by_index(begin = var_6157_begin_0, end = var_6157_end_0, end_mask = var_6157_end_mask_0, x = v_41_cast);
            tensor<string, []> var_6161_equation_0 = const()[name = tensor<string, []>("op_6161_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_6161_cast = einsum(equation = var_6161_equation_0, values = (var_6099_cast, var_6064_cast));
            tensor<fp16, []> var_6162_to_fp16 = const()[name = tensor<string, []>("op_6162_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_321_cast = mul(x = var_6161_cast, y = var_6162_to_fp16);
            tensor<string, []> var_6165_equation_0 = const()[name = tensor<string, []>("op_6165_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_6165_cast = einsum(equation = var_6165_equation_0, values = (var_6103_cast, var_6068_cast));
            tensor<fp16, []> var_6166_to_fp16 = const()[name = tensor<string, []>("op_6166_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_323_cast = mul(x = var_6165_cast, y = var_6166_to_fp16);
            tensor<string, []> var_6169_equation_0 = const()[name = tensor<string, []>("op_6169_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_6169_cast = einsum(equation = var_6169_equation_0, values = (var_6107_cast, var_6072_cast));
            tensor<fp16, []> var_6170_to_fp16 = const()[name = tensor<string, []>("op_6170_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_325_cast = mul(x = var_6169_cast, y = var_6170_to_fp16);
            tensor<string, []> var_6173_equation_0 = const()[name = tensor<string, []>("op_6173_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_6173_cast = einsum(equation = var_6173_equation_0, values = (var_6111_cast, var_6076_cast));
            tensor<fp16, []> var_6174_to_fp16 = const()[name = tensor<string, []>("op_6174_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_327_cast = mul(x = var_6173_cast, y = var_6174_to_fp16);
            tensor<string, []> var_6177_equation_0 = const()[name = tensor<string, []>("op_6177_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_6177_cast = einsum(equation = var_6177_equation_0, values = (var_6115_cast, var_6080_cast));
            tensor<fp16, []> var_6178_to_fp16 = const()[name = tensor<string, []>("op_6178_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_329_cast = mul(x = var_6177_cast, y = var_6178_to_fp16);
            tensor<string, []> var_6181_equation_0 = const()[name = tensor<string, []>("op_6181_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_6181_cast = einsum(equation = var_6181_equation_0, values = (var_6119_cast, var_6084_cast));
            tensor<fp16, []> var_6182_to_fp16 = const()[name = tensor<string, []>("op_6182_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_331_cast = mul(x = var_6181_cast, y = var_6182_to_fp16);
            tensor<string, []> var_6185_equation_0 = const()[name = tensor<string, []>("op_6185_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_6185_cast = einsum(equation = var_6185_equation_0, values = (var_6123_cast, var_6088_cast));
            tensor<fp16, []> var_6186_to_fp16 = const()[name = tensor<string, []>("op_6186_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_333_cast = mul(x = var_6185_cast, y = var_6186_to_fp16);
            tensor<string, []> var_6189_equation_0 = const()[name = tensor<string, []>("op_6189_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_6189_cast = einsum(equation = var_6189_equation_0, values = (var_6127_cast, var_6092_cast));
            tensor<fp16, []> var_6190_to_fp16 = const()[name = tensor<string, []>("op_6190_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_335_cast = mul(x = var_6189_cast, y = var_6190_to_fp16);
            tensor<fp16, [2, 1024, 1, 1024]> var_6192_cast = softmax(axis = var_5930, x = aw_321_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_6193_cast = softmax(axis = var_5930, x = aw_323_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_6194_cast = softmax(axis = var_5930, x = aw_325_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_6195_cast = softmax(axis = var_5930, x = aw_327_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_6196_cast = softmax(axis = var_5930, x = aw_329_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_6197_cast = softmax(axis = var_5930, x = aw_331_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_6198_cast = softmax(axis = var_5930, x = aw_333_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_6199_cast = softmax(axis = var_5930, x = aw_335_cast);
            tensor<string, []> var_6201_equation_0 = const()[name = tensor<string, []>("op_6201_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_6201_cast = einsum(equation = var_6201_equation_0, values = (var_6129_cast, var_6192_cast));
            tensor<string, []> var_6203_equation_0 = const()[name = tensor<string, []>("op_6203_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_6203_cast = einsum(equation = var_6203_equation_0, values = (var_6133_cast, var_6193_cast));
            tensor<string, []> var_6205_equation_0 = const()[name = tensor<string, []>("op_6205_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_6205_cast = einsum(equation = var_6205_equation_0, values = (var_6137_cast, var_6194_cast));
            tensor<string, []> var_6207_equation_0 = const()[name = tensor<string, []>("op_6207_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_6207_cast = einsum(equation = var_6207_equation_0, values = (var_6141_cast, var_6195_cast));
            tensor<string, []> var_6209_equation_0 = const()[name = tensor<string, []>("op_6209_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_6209_cast = einsum(equation = var_6209_equation_0, values = (var_6145_cast, var_6196_cast));
            tensor<string, []> var_6211_equation_0 = const()[name = tensor<string, []>("op_6211_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_6211_cast = einsum(equation = var_6211_equation_0, values = (var_6149_cast, var_6197_cast));
            tensor<string, []> var_6213_equation_0 = const()[name = tensor<string, []>("op_6213_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_6213_cast = einsum(equation = var_6213_equation_0, values = (var_6153_cast, var_6198_cast));
            tensor<string, []> var_6215_equation_0 = const()[name = tensor<string, []>("op_6215_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_6215_cast = einsum(equation = var_6215_equation_0, values = (var_6157_cast, var_6199_cast));
            tensor<bool, []> input_383_interleave_0 = const()[name = tensor<string, []>("input_383_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 640, 1, 1024]> input_383_cast = concat(axis = var_5930, interleave = input_383_interleave_0, values = (var_6201_cast, var_6203_cast, var_6205_cast, var_6207_cast, var_6209_cast, var_6211_cast, var_6213_cast, var_6215_cast));
            tensor<int32, [2]> var_6221 = const()[name = tensor<string, []>("op_6221"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6223 = const()[name = tensor<string, []>("op_6223"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_6225_pad_type_0 = const()[name = tensor<string, []>("op_6225_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_6225_pad_0 = const()[name = tensor<string, []>("op_6225_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_0_transformer_blocks_0_attn1_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_0_transformer_blocks_0_attn1_to_out_0_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(688025728)))];
            tensor<fp16, [640]> up_blocks_2_attentions_0_transformer_blocks_0_attn1_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_0_transformer_blocks_0_attn1_to_out_0_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(688844992)))];
            tensor<fp16, [2, 640, 1, 1024]> var_6225_cast = conv(bias = up_blocks_2_attentions_0_transformer_blocks_0_attn1_to_out_0_bias_to_fp16, dilations = var_6223, groups = var_5930, pad = var_6225_pad_0, pad_type = var_6225_pad_type_0, strides = var_6221, weight = up_blocks_2_attentions_0_transformer_blocks_0_attn1_to_out_0_weight_to_fp16, x = input_383_cast);
            tensor<fp16, [2, 640, 1, 1024]> inputs_63_cast = add(x = var_6225_cast, y = inputs_61_cast);
            tensor<int32, [1]> var_6229 = const()[name = tensor<string, []>("op_6229"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> channels_mean_63_cast = reduce_mean(axes = var_6229, keep_dims = var_5925, x = inputs_63_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_63_cast = sub(x = inputs_63_cast, y = channels_mean_63_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_sq_63_cast = mul(x = zero_mean_63_cast, y = zero_mean_63_cast);
            tensor<int32, [1]> var_6233 = const()[name = tensor<string, []>("op_6233"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> var_6234_cast = reduce_mean(axes = var_6233, keep_dims = var_5925, x = zero_mean_sq_63_cast);
            tensor<fp16, []> var_6235_to_fp16 = const()[name = tensor<string, []>("op_6235_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 1024]> var_6236_cast = add(x = var_6234_cast, y = var_6235_to_fp16);
            tensor<fp16, []> denom_63_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_63_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 1024]> denom_63_cast = rsqrt(epsilon = denom_63_epsilon_0_to_fp16, x = var_6236_cast);
            tensor<fp16, [2, 640, 1, 1024]> out_63_cast = mul(x = zero_mean_63_cast, y = denom_63_cast);
            tensor<fp16, [1, 640, 1, 1]> var_6240_to_fp16 = const()[name = tensor<string, []>("op_6240_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(688846336)))];
            tensor<fp16, [2, 640, 1, 1024]> var_6241_cast = add(x = out_63_cast, y = var_6240_to_fp16);
            tensor<fp16, [1, 640, 1, 1]> var_6243_to_fp16 = const()[name = tensor<string, []>("op_6243_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(688847680)))];
            tensor<fp16, [2, 640, 1, 1024]> hidden_states_229_cast = mul(x = var_6241_cast, y = var_6243_to_fp16);
            tensor<int32, [2]> var_6250 = const()[name = tensor<string, []>("op_6250"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6252 = const()[name = tensor<string, []>("op_6252"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_43_pad_type_0 = const()[name = tensor<string, []>("q_43_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_43_pad_0 = const()[name = tensor<string, []>("q_43_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_0_transformer_blocks_0_attn2_to_q_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_0_transformer_blocks_0_attn2_to_q_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(688849024)))];
            tensor<fp16, [2, 640, 1, 1024]> q_43_cast = conv(dilations = var_6252, groups = var_5930, pad = q_43_pad_0, pad_type = q_43_pad_type_0, strides = var_6250, weight = up_blocks_2_attentions_0_transformer_blocks_0_attn2_to_q_weight_to_fp16, x = hidden_states_229_cast);
            tensor<int32, [2]> var_6256 = const()[name = tensor<string, []>("op_6256"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6258 = const()[name = tensor<string, []>("op_6258"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_85_pad_type_0 = const()[name = tensor<string, []>("k_85_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_85_pad_0 = const()[name = tensor<string, []>("k_85_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 768, 1, 1]> up_blocks_2_attentions_0_transformer_blocks_0_attn2_to_k_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_0_transformer_blocks_0_attn2_to_k_weight_to_fp16"), val = tensor<fp16, [640, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(689668288)))];
            tensor<fp16, [2, 640, 1, 77]> k_85_cast = conv(dilations = var_6258, groups = var_5930, pad = k_85_pad_0, pad_type = k_85_pad_type_0, strides = var_6256, weight = up_blocks_2_attentions_0_transformer_blocks_0_attn2_to_k_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [2]> var_6262 = const()[name = tensor<string, []>("op_6262"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6264 = const()[name = tensor<string, []>("op_6264"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_43_pad_type_0 = const()[name = tensor<string, []>("v_43_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_43_pad_0 = const()[name = tensor<string, []>("v_43_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 768, 1, 1]> up_blocks_2_attentions_0_transformer_blocks_0_attn2_to_v_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_0_transformer_blocks_0_attn2_to_v_weight_to_fp16"), val = tensor<fp16, [640, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(690651392)))];
            tensor<fp16, [2, 640, 1, 77]> v_43_cast = conv(dilations = var_6264, groups = var_5930, pad = v_43_pad_0, pad_type = v_43_pad_type_0, strides = var_6262, weight = up_blocks_2_attentions_0_transformer_blocks_0_attn2_to_v_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [4]> var_6268_begin_0 = const()[name = tensor<string, []>("op_6268_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_6268_end_0 = const()[name = tensor<string, []>("op_6268_end_0"), val = tensor<int32, [4]>([2, 80, 1, 1024])];
            tensor<bool, [4]> var_6268_end_mask_0 = const()[name = tensor<string, []>("op_6268_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6268_cast = slice_by_index(begin = var_6268_begin_0, end = var_6268_end_0, end_mask = var_6268_end_mask_0, x = q_43_cast);
            tensor<int32, [4]> var_6272_begin_0 = const()[name = tensor<string, []>("op_6272_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_6272_end_0 = const()[name = tensor<string, []>("op_6272_end_0"), val = tensor<int32, [4]>([2, 160, 1, 1024])];
            tensor<bool, [4]> var_6272_end_mask_0 = const()[name = tensor<string, []>("op_6272_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6272_cast = slice_by_index(begin = var_6272_begin_0, end = var_6272_end_0, end_mask = var_6272_end_mask_0, x = q_43_cast);
            tensor<int32, [4]> var_6276_begin_0 = const()[name = tensor<string, []>("op_6276_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_6276_end_0 = const()[name = tensor<string, []>("op_6276_end_0"), val = tensor<int32, [4]>([2, 240, 1, 1024])];
            tensor<bool, [4]> var_6276_end_mask_0 = const()[name = tensor<string, []>("op_6276_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6276_cast = slice_by_index(begin = var_6276_begin_0, end = var_6276_end_0, end_mask = var_6276_end_mask_0, x = q_43_cast);
            tensor<int32, [4]> var_6280_begin_0 = const()[name = tensor<string, []>("op_6280_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_6280_end_0 = const()[name = tensor<string, []>("op_6280_end_0"), val = tensor<int32, [4]>([2, 320, 1, 1024])];
            tensor<bool, [4]> var_6280_end_mask_0 = const()[name = tensor<string, []>("op_6280_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6280_cast = slice_by_index(begin = var_6280_begin_0, end = var_6280_end_0, end_mask = var_6280_end_mask_0, x = q_43_cast);
            tensor<int32, [4]> var_6284_begin_0 = const()[name = tensor<string, []>("op_6284_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_6284_end_0 = const()[name = tensor<string, []>("op_6284_end_0"), val = tensor<int32, [4]>([2, 400, 1, 1024])];
            tensor<bool, [4]> var_6284_end_mask_0 = const()[name = tensor<string, []>("op_6284_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6284_cast = slice_by_index(begin = var_6284_begin_0, end = var_6284_end_0, end_mask = var_6284_end_mask_0, x = q_43_cast);
            tensor<int32, [4]> var_6288_begin_0 = const()[name = tensor<string, []>("op_6288_begin_0"), val = tensor<int32, [4]>([0, 400, 0, 0])];
            tensor<int32, [4]> var_6288_end_0 = const()[name = tensor<string, []>("op_6288_end_0"), val = tensor<int32, [4]>([2, 480, 1, 1024])];
            tensor<bool, [4]> var_6288_end_mask_0 = const()[name = tensor<string, []>("op_6288_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6288_cast = slice_by_index(begin = var_6288_begin_0, end = var_6288_end_0, end_mask = var_6288_end_mask_0, x = q_43_cast);
            tensor<int32, [4]> var_6292_begin_0 = const()[name = tensor<string, []>("op_6292_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_6292_end_0 = const()[name = tensor<string, []>("op_6292_end_0"), val = tensor<int32, [4]>([2, 560, 1, 1024])];
            tensor<bool, [4]> var_6292_end_mask_0 = const()[name = tensor<string, []>("op_6292_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6292_cast = slice_by_index(begin = var_6292_begin_0, end = var_6292_end_0, end_mask = var_6292_end_mask_0, x = q_43_cast);
            tensor<int32, [4]> var_6296_begin_0 = const()[name = tensor<string, []>("op_6296_begin_0"), val = tensor<int32, [4]>([0, 560, 0, 0])];
            tensor<int32, [4]> var_6296_end_0 = const()[name = tensor<string, []>("op_6296_end_0"), val = tensor<int32, [4]>([2, 640, 1, 1024])];
            tensor<bool, [4]> var_6296_end_mask_0 = const()[name = tensor<string, []>("op_6296_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6296_cast = slice_by_index(begin = var_6296_begin_0, end = var_6296_end_0, end_mask = var_6296_end_mask_0, x = q_43_cast);
            tensor<int32, [4]> k_87_perm_0 = const()[name = tensor<string, []>("k_87_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_6303_begin_0 = const()[name = tensor<string, []>("op_6303_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_6303_end_0 = const()[name = tensor<string, []>("op_6303_end_0"), val = tensor<int32, [4]>([2, 77, 1, 80])];
            tensor<bool, [4]> var_6303_end_mask_0 = const()[name = tensor<string, []>("op_6303_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 640]> transpose_10 = transpose(perm = k_87_perm_0, x = k_85_cast);
            tensor<fp16, [2, 77, 1, 80]> var_6303_cast = slice_by_index(begin = var_6303_begin_0, end = var_6303_end_0, end_mask = var_6303_end_mask_0, x = transpose_10);
            tensor<int32, [4]> var_6307_begin_0 = const()[name = tensor<string, []>("op_6307_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 80])];
            tensor<int32, [4]> var_6307_end_0 = const()[name = tensor<string, []>("op_6307_end_0"), val = tensor<int32, [4]>([2, 77, 1, 160])];
            tensor<bool, [4]> var_6307_end_mask_0 = const()[name = tensor<string, []>("op_6307_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_6307_cast = slice_by_index(begin = var_6307_begin_0, end = var_6307_end_0, end_mask = var_6307_end_mask_0, x = transpose_10);
            tensor<int32, [4]> var_6311_begin_0 = const()[name = tensor<string, []>("op_6311_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 160])];
            tensor<int32, [4]> var_6311_end_0 = const()[name = tensor<string, []>("op_6311_end_0"), val = tensor<int32, [4]>([2, 77, 1, 240])];
            tensor<bool, [4]> var_6311_end_mask_0 = const()[name = tensor<string, []>("op_6311_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_6311_cast = slice_by_index(begin = var_6311_begin_0, end = var_6311_end_0, end_mask = var_6311_end_mask_0, x = transpose_10);
            tensor<int32, [4]> var_6315_begin_0 = const()[name = tensor<string, []>("op_6315_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 240])];
            tensor<int32, [4]> var_6315_end_0 = const()[name = tensor<string, []>("op_6315_end_0"), val = tensor<int32, [4]>([2, 77, 1, 320])];
            tensor<bool, [4]> var_6315_end_mask_0 = const()[name = tensor<string, []>("op_6315_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_6315_cast = slice_by_index(begin = var_6315_begin_0, end = var_6315_end_0, end_mask = var_6315_end_mask_0, x = transpose_10);
            tensor<int32, [4]> var_6319_begin_0 = const()[name = tensor<string, []>("op_6319_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_6319_end_0 = const()[name = tensor<string, []>("op_6319_end_0"), val = tensor<int32, [4]>([2, 77, 1, 400])];
            tensor<bool, [4]> var_6319_end_mask_0 = const()[name = tensor<string, []>("op_6319_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_6319_cast = slice_by_index(begin = var_6319_begin_0, end = var_6319_end_0, end_mask = var_6319_end_mask_0, x = transpose_10);
            tensor<int32, [4]> var_6323_begin_0 = const()[name = tensor<string, []>("op_6323_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 400])];
            tensor<int32, [4]> var_6323_end_0 = const()[name = tensor<string, []>("op_6323_end_0"), val = tensor<int32, [4]>([2, 77, 1, 480])];
            tensor<bool, [4]> var_6323_end_mask_0 = const()[name = tensor<string, []>("op_6323_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_6323_cast = slice_by_index(begin = var_6323_begin_0, end = var_6323_end_0, end_mask = var_6323_end_mask_0, x = transpose_10);
            tensor<int32, [4]> var_6327_begin_0 = const()[name = tensor<string, []>("op_6327_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 480])];
            tensor<int32, [4]> var_6327_end_0 = const()[name = tensor<string, []>("op_6327_end_0"), val = tensor<int32, [4]>([2, 77, 1, 560])];
            tensor<bool, [4]> var_6327_end_mask_0 = const()[name = tensor<string, []>("op_6327_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_6327_cast = slice_by_index(begin = var_6327_begin_0, end = var_6327_end_0, end_mask = var_6327_end_mask_0, x = transpose_10);
            tensor<int32, [4]> var_6331_begin_0 = const()[name = tensor<string, []>("op_6331_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 560])];
            tensor<int32, [4]> var_6331_end_0 = const()[name = tensor<string, []>("op_6331_end_0"), val = tensor<int32, [4]>([2, 77, 1, 640])];
            tensor<bool, [4]> var_6331_end_mask_0 = const()[name = tensor<string, []>("op_6331_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_6331_cast = slice_by_index(begin = var_6331_begin_0, end = var_6331_end_0, end_mask = var_6331_end_mask_0, x = transpose_10);
            tensor<int32, [4]> var_6333_begin_0 = const()[name = tensor<string, []>("op_6333_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_6333_end_0 = const()[name = tensor<string, []>("op_6333_end_0"), val = tensor<int32, [4]>([2, 80, 1, 77])];
            tensor<bool, [4]> var_6333_end_mask_0 = const()[name = tensor<string, []>("op_6333_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_6333_cast = slice_by_index(begin = var_6333_begin_0, end = var_6333_end_0, end_mask = var_6333_end_mask_0, x = v_43_cast);
            tensor<int32, [4]> var_6337_begin_0 = const()[name = tensor<string, []>("op_6337_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_6337_end_0 = const()[name = tensor<string, []>("op_6337_end_0"), val = tensor<int32, [4]>([2, 160, 1, 77])];
            tensor<bool, [4]> var_6337_end_mask_0 = const()[name = tensor<string, []>("op_6337_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_6337_cast = slice_by_index(begin = var_6337_begin_0, end = var_6337_end_0, end_mask = var_6337_end_mask_0, x = v_43_cast);
            tensor<int32, [4]> var_6341_begin_0 = const()[name = tensor<string, []>("op_6341_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_6341_end_0 = const()[name = tensor<string, []>("op_6341_end_0"), val = tensor<int32, [4]>([2, 240, 1, 77])];
            tensor<bool, [4]> var_6341_end_mask_0 = const()[name = tensor<string, []>("op_6341_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_6341_cast = slice_by_index(begin = var_6341_begin_0, end = var_6341_end_0, end_mask = var_6341_end_mask_0, x = v_43_cast);
            tensor<int32, [4]> var_6345_begin_0 = const()[name = tensor<string, []>("op_6345_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_6345_end_0 = const()[name = tensor<string, []>("op_6345_end_0"), val = tensor<int32, [4]>([2, 320, 1, 77])];
            tensor<bool, [4]> var_6345_end_mask_0 = const()[name = tensor<string, []>("op_6345_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_6345_cast = slice_by_index(begin = var_6345_begin_0, end = var_6345_end_0, end_mask = var_6345_end_mask_0, x = v_43_cast);
            tensor<int32, [4]> var_6349_begin_0 = const()[name = tensor<string, []>("op_6349_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_6349_end_0 = const()[name = tensor<string, []>("op_6349_end_0"), val = tensor<int32, [4]>([2, 400, 1, 77])];
            tensor<bool, [4]> var_6349_end_mask_0 = const()[name = tensor<string, []>("op_6349_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_6349_cast = slice_by_index(begin = var_6349_begin_0, end = var_6349_end_0, end_mask = var_6349_end_mask_0, x = v_43_cast);
            tensor<int32, [4]> var_6353_begin_0 = const()[name = tensor<string, []>("op_6353_begin_0"), val = tensor<int32, [4]>([0, 400, 0, 0])];
            tensor<int32, [4]> var_6353_end_0 = const()[name = tensor<string, []>("op_6353_end_0"), val = tensor<int32, [4]>([2, 480, 1, 77])];
            tensor<bool, [4]> var_6353_end_mask_0 = const()[name = tensor<string, []>("op_6353_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_6353_cast = slice_by_index(begin = var_6353_begin_0, end = var_6353_end_0, end_mask = var_6353_end_mask_0, x = v_43_cast);
            tensor<int32, [4]> var_6357_begin_0 = const()[name = tensor<string, []>("op_6357_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_6357_end_0 = const()[name = tensor<string, []>("op_6357_end_0"), val = tensor<int32, [4]>([2, 560, 1, 77])];
            tensor<bool, [4]> var_6357_end_mask_0 = const()[name = tensor<string, []>("op_6357_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_6357_cast = slice_by_index(begin = var_6357_begin_0, end = var_6357_end_0, end_mask = var_6357_end_mask_0, x = v_43_cast);
            tensor<int32, [4]> var_6361_begin_0 = const()[name = tensor<string, []>("op_6361_begin_0"), val = tensor<int32, [4]>([0, 560, 0, 0])];
            tensor<int32, [4]> var_6361_end_0 = const()[name = tensor<string, []>("op_6361_end_0"), val = tensor<int32, [4]>([2, 640, 1, 77])];
            tensor<bool, [4]> var_6361_end_mask_0 = const()[name = tensor<string, []>("op_6361_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_6361_cast = slice_by_index(begin = var_6361_begin_0, end = var_6361_end_0, end_mask = var_6361_end_mask_0, x = v_43_cast);
            tensor<string, []> var_6365_equation_0 = const()[name = tensor<string, []>("op_6365_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_6365_cast = einsum(equation = var_6365_equation_0, values = (var_6303_cast, var_6268_cast));
            tensor<fp16, []> var_6366_to_fp16 = const()[name = tensor<string, []>("op_6366_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_337_cast = mul(x = var_6365_cast, y = var_6366_to_fp16);
            tensor<string, []> var_6369_equation_0 = const()[name = tensor<string, []>("op_6369_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_6369_cast = einsum(equation = var_6369_equation_0, values = (var_6307_cast, var_6272_cast));
            tensor<fp16, []> var_6370_to_fp16 = const()[name = tensor<string, []>("op_6370_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_339_cast = mul(x = var_6369_cast, y = var_6370_to_fp16);
            tensor<string, []> var_6373_equation_0 = const()[name = tensor<string, []>("op_6373_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_6373_cast = einsum(equation = var_6373_equation_0, values = (var_6311_cast, var_6276_cast));
            tensor<fp16, []> var_6374_to_fp16 = const()[name = tensor<string, []>("op_6374_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_341_cast = mul(x = var_6373_cast, y = var_6374_to_fp16);
            tensor<string, []> var_6377_equation_0 = const()[name = tensor<string, []>("op_6377_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_6377_cast = einsum(equation = var_6377_equation_0, values = (var_6315_cast, var_6280_cast));
            tensor<fp16, []> var_6378_to_fp16 = const()[name = tensor<string, []>("op_6378_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_343_cast = mul(x = var_6377_cast, y = var_6378_to_fp16);
            tensor<string, []> var_6381_equation_0 = const()[name = tensor<string, []>("op_6381_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_6381_cast = einsum(equation = var_6381_equation_0, values = (var_6319_cast, var_6284_cast));
            tensor<fp16, []> var_6382_to_fp16 = const()[name = tensor<string, []>("op_6382_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_345_cast = mul(x = var_6381_cast, y = var_6382_to_fp16);
            tensor<string, []> var_6385_equation_0 = const()[name = tensor<string, []>("op_6385_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_6385_cast = einsum(equation = var_6385_equation_0, values = (var_6323_cast, var_6288_cast));
            tensor<fp16, []> var_6386_to_fp16 = const()[name = tensor<string, []>("op_6386_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_347_cast = mul(x = var_6385_cast, y = var_6386_to_fp16);
            tensor<string, []> var_6389_equation_0 = const()[name = tensor<string, []>("op_6389_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_6389_cast = einsum(equation = var_6389_equation_0, values = (var_6327_cast, var_6292_cast));
            tensor<fp16, []> var_6390_to_fp16 = const()[name = tensor<string, []>("op_6390_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_349_cast = mul(x = var_6389_cast, y = var_6390_to_fp16);
            tensor<string, []> var_6393_equation_0 = const()[name = tensor<string, []>("op_6393_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_6393_cast = einsum(equation = var_6393_equation_0, values = (var_6331_cast, var_6296_cast));
            tensor<fp16, []> var_6394_to_fp16 = const()[name = tensor<string, []>("op_6394_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_351_cast = mul(x = var_6393_cast, y = var_6394_to_fp16);
            tensor<fp16, [2, 77, 1, 1024]> var_6396_cast = softmax(axis = var_5930, x = aw_337_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_6397_cast = softmax(axis = var_5930, x = aw_339_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_6398_cast = softmax(axis = var_5930, x = aw_341_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_6399_cast = softmax(axis = var_5930, x = aw_343_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_6400_cast = softmax(axis = var_5930, x = aw_345_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_6401_cast = softmax(axis = var_5930, x = aw_347_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_6402_cast = softmax(axis = var_5930, x = aw_349_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_6403_cast = softmax(axis = var_5930, x = aw_351_cast);
            tensor<string, []> var_6405_equation_0 = const()[name = tensor<string, []>("op_6405_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_6405_cast = einsum(equation = var_6405_equation_0, values = (var_6333_cast, var_6396_cast));
            tensor<string, []> var_6407_equation_0 = const()[name = tensor<string, []>("op_6407_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_6407_cast = einsum(equation = var_6407_equation_0, values = (var_6337_cast, var_6397_cast));
            tensor<string, []> var_6409_equation_0 = const()[name = tensor<string, []>("op_6409_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_6409_cast = einsum(equation = var_6409_equation_0, values = (var_6341_cast, var_6398_cast));
            tensor<string, []> var_6411_equation_0 = const()[name = tensor<string, []>("op_6411_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_6411_cast = einsum(equation = var_6411_equation_0, values = (var_6345_cast, var_6399_cast));
            tensor<string, []> var_6413_equation_0 = const()[name = tensor<string, []>("op_6413_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_6413_cast = einsum(equation = var_6413_equation_0, values = (var_6349_cast, var_6400_cast));
            tensor<string, []> var_6415_equation_0 = const()[name = tensor<string, []>("op_6415_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_6415_cast = einsum(equation = var_6415_equation_0, values = (var_6353_cast, var_6401_cast));
            tensor<string, []> var_6417_equation_0 = const()[name = tensor<string, []>("op_6417_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_6417_cast = einsum(equation = var_6417_equation_0, values = (var_6357_cast, var_6402_cast));
            tensor<string, []> var_6419_equation_0 = const()[name = tensor<string, []>("op_6419_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_6419_cast = einsum(equation = var_6419_equation_0, values = (var_6361_cast, var_6403_cast));
            tensor<bool, []> input_385_interleave_0 = const()[name = tensor<string, []>("input_385_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 640, 1, 1024]> input_385_cast = concat(axis = var_5930, interleave = input_385_interleave_0, values = (var_6405_cast, var_6407_cast, var_6409_cast, var_6411_cast, var_6413_cast, var_6415_cast, var_6417_cast, var_6419_cast));
            tensor<int32, [2]> var_6425 = const()[name = tensor<string, []>("op_6425"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6427 = const()[name = tensor<string, []>("op_6427"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_6429_pad_type_0 = const()[name = tensor<string, []>("op_6429_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_6429_pad_0 = const()[name = tensor<string, []>("op_6429_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_0_transformer_blocks_0_attn2_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_0_transformer_blocks_0_attn2_to_out_0_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(691634496)))];
            tensor<fp16, [640]> up_blocks_2_attentions_0_transformer_blocks_0_attn2_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_0_transformer_blocks_0_attn2_to_out_0_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(692453760)))];
            tensor<fp16, [2, 640, 1, 1024]> var_6429_cast = conv(bias = up_blocks_2_attentions_0_transformer_blocks_0_attn2_to_out_0_bias_to_fp16, dilations = var_6427, groups = var_5930, pad = var_6429_pad_0, pad_type = var_6429_pad_type_0, strides = var_6425, weight = up_blocks_2_attentions_0_transformer_blocks_0_attn2_to_out_0_weight_to_fp16, x = input_385_cast);
            tensor<fp16, [2, 640, 1, 1024]> inputs_65_cast = add(x = var_6429_cast, y = inputs_63_cast);
            tensor<int32, [1]> var_6433 = const()[name = tensor<string, []>("op_6433"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> channels_mean_65_cast = reduce_mean(axes = var_6433, keep_dims = var_5925, x = inputs_65_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_65_cast = sub(x = inputs_65_cast, y = channels_mean_65_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_sq_65_cast = mul(x = zero_mean_65_cast, y = zero_mean_65_cast);
            tensor<int32, [1]> var_6437 = const()[name = tensor<string, []>("op_6437"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> var_6438_cast = reduce_mean(axes = var_6437, keep_dims = var_5925, x = zero_mean_sq_65_cast);
            tensor<fp16, []> var_6439_to_fp16 = const()[name = tensor<string, []>("op_6439_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 1024]> var_6440_cast = add(x = var_6438_cast, y = var_6439_to_fp16);
            tensor<fp16, []> denom_65_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_65_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 1024]> denom_65_cast = rsqrt(epsilon = denom_65_epsilon_0_to_fp16, x = var_6440_cast);
            tensor<fp16, [2, 640, 1, 1024]> out_65_cast = mul(x = zero_mean_65_cast, y = denom_65_cast);
            tensor<fp16, [1, 640, 1, 1]> var_6444_to_fp16 = const()[name = tensor<string, []>("op_6444_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(692455104)))];
            tensor<fp16, [2, 640, 1, 1024]> var_6445_cast = add(x = out_65_cast, y = var_6444_to_fp16);
            tensor<fp16, [1, 640, 1, 1]> var_6447_to_fp16 = const()[name = tensor<string, []>("op_6447_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(692456448)))];
            tensor<fp16, [2, 640, 1, 1024]> input_387_cast = mul(x = var_6445_cast, y = var_6447_to_fp16);
            tensor<int32, [2]> var_6455 = const()[name = tensor<string, []>("op_6455"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6457 = const()[name = tensor<string, []>("op_6457"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_6459_pad_type_0 = const()[name = tensor<string, []>("op_6459_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_6459_pad_0 = const()[name = tensor<string, []>("op_6459_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [5120, 640, 1, 1]> up_blocks_2_attentions_0_transformer_blocks_0_ff_net_0_proj_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_0_transformer_blocks_0_ff_net_0_proj_weight_to_fp16"), val = tensor<fp16, [5120, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(692457792)))];
            tensor<fp16, [5120]> up_blocks_2_attentions_0_transformer_blocks_0_ff_net_0_proj_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_0_transformer_blocks_0_ff_net_0_proj_bias_to_fp16"), val = tensor<fp16, [5120]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(699011456)))];
            tensor<fp16, [2, 5120, 1, 1024]> var_6459_cast = conv(bias = up_blocks_2_attentions_0_transformer_blocks_0_ff_net_0_proj_bias_to_fp16, dilations = var_6457, groups = var_5930, pad = var_6459_pad_0, pad_type = var_6459_pad_type_0, strides = var_6455, weight = up_blocks_2_attentions_0_transformer_blocks_0_ff_net_0_proj_weight_to_fp16, x = input_387_cast);
            tensor<int32, [2]> var_6460_split_sizes_0 = const()[name = tensor<string, []>("op_6460_split_sizes_0"), val = tensor<int32, [2]>([2560, 2560])];
            tensor<int32, []> var_6460_axis_0 = const()[name = tensor<string, []>("op_6460_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [2, 2560, 1, 1024]> var_6460_cast_0, tensor<fp16, [2, 2560, 1, 1024]> var_6460_cast_1 = split(axis = var_6460_axis_0, split_sizes = var_6460_split_sizes_0, x = var_6459_cast);
            tensor<string, []> var_6462_mode_0 = const()[name = tensor<string, []>("op_6462_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [2, 2560, 1, 1024]> var_6462_cast = gelu(mode = var_6462_mode_0, x = var_6460_cast_1);
            tensor<fp16, [2, 2560, 1, 1024]> input_389_cast = mul(x = var_6460_cast_0, y = var_6462_cast);
            tensor<int32, [2]> var_6466 = const()[name = tensor<string, []>("op_6466"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6468 = const()[name = tensor<string, []>("op_6468"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_6470_pad_type_0 = const()[name = tensor<string, []>("op_6470_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_6470_pad_0 = const()[name = tensor<string, []>("op_6470_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 2560, 1, 1]> up_blocks_2_attentions_0_transformer_blocks_0_ff_net_2_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_0_transformer_blocks_0_ff_net_2_weight_to_fp16"), val = tensor<fp16, [640, 2560, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(699021760)))];
            tensor<fp16, [640]> up_blocks_2_attentions_0_transformer_blocks_0_ff_net_2_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_0_transformer_blocks_0_ff_net_2_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(702298624)))];
            tensor<fp16, [2, 640, 1, 1024]> var_6470_cast = conv(bias = up_blocks_2_attentions_0_transformer_blocks_0_ff_net_2_bias_to_fp16, dilations = var_6468, groups = var_5930, pad = var_6470_pad_0, pad_type = var_6470_pad_type_0, strides = var_6466, weight = up_blocks_2_attentions_0_transformer_blocks_0_ff_net_2_weight_to_fp16, x = input_389_cast);
            tensor<fp16, [2, 640, 1, 1024]> hidden_states_233_cast = add(x = var_6470_cast, y = inputs_65_cast);
            tensor<int32, [4]> var_6472 = const()[name = tensor<string, []>("op_6472"), val = tensor<int32, [4]>([2, 640, 32, 32])];
            tensor<fp16, [2, 640, 32, 32]> input_391_cast = reshape(shape = var_6472, x = hidden_states_233_cast);
            tensor<int32, [2]> var_6476 = const()[name = tensor<string, []>("op_6476"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6478 = const()[name = tensor<string, []>("op_6478"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_235_pad_type_0 = const()[name = tensor<string, []>("hidden_states_235_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_235_pad_0 = const()[name = tensor<string, []>("hidden_states_235_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_0_proj_out_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_0_proj_out_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(702299968)))];
            tensor<fp16, [640]> up_blocks_2_attentions_0_proj_out_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_0_proj_out_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(703119232)))];
            tensor<fp16, [2, 640, 32, 32]> hidden_states_235_cast = conv(bias = up_blocks_2_attentions_0_proj_out_bias_to_fp16, dilations = var_6478, groups = var_5930, pad = hidden_states_235_pad_0, pad_type = hidden_states_235_pad_type_0, strides = var_6476, weight = up_blocks_2_attentions_0_proj_out_weight_to_fp16, x = input_391_cast);
            tensor<fp16, [2, 640, 32, 32]> hidden_states_237_cast = add(x = hidden_states_235_cast, y = hidden_states_223_cast);
            tensor<bool, []> input_393_interleave_0 = const()[name = tensor<string, []>("input_393_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 640, 32, 32]> cast_8 = cast(dtype = cast_8_dtype_0, x = input_89_cast);
            tensor<fp16, [2, 1280, 32, 32]> input_393_cast = concat(axis = var_5930, interleave = input_393_interleave_0, values = (hidden_states_237_cast, cast_8));
            tensor<int32, [5]> reshape_180_shape_0 = const()[name = tensor<string, []>("reshape_180_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 32, 32])];
            tensor<fp16, [2, 32, 40, 32, 32]> reshape_180_cast = reshape(shape = reshape_180_shape_0, x = input_393_cast);
            tensor<int32, [3]> reduce_mean_135_axes_0 = const()[name = tensor<string, []>("reduce_mean_135_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_135_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_135_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_135_cast = reduce_mean(axes = reduce_mean_135_axes_0, keep_dims = reduce_mean_135_keep_dims_0, x = reshape_180_cast);
            tensor<fp16, [2, 32, 40, 32, 32]> sub_90_cast = sub(x = reshape_180_cast, y = reduce_mean_135_cast);
            tensor<fp16, [2, 32, 40, 32, 32]> square_45_cast = square(x = sub_90_cast);
            tensor<int32, [3]> reduce_mean_137_axes_0 = const()[name = tensor<string, []>("reduce_mean_137_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_137_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_137_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_137_cast = reduce_mean(axes = reduce_mean_137_axes_0, keep_dims = reduce_mean_137_keep_dims_0, x = square_45_cast);
            tensor<fp16, []> add_90_y_0_to_fp16 = const()[name = tensor<string, []>("add_90_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_90_cast = add(x = reduce_mean_137_cast, y = add_90_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_45_cast = sqrt(x = add_90_cast);
            tensor<fp16, [2, 32, 40, 32, 32]> real_div_45_cast = real_div(x = sub_90_cast, y = sqrt_45_cast);
            tensor<int32, [4]> reshape_181_shape_0 = const()[name = tensor<string, []>("reshape_181_shape_0"), val = tensor<int32, [4]>([2, 1280, 32, 32])];
            tensor<fp16, [2, 1280, 32, 32]> reshape_181_cast = reshape(shape = reshape_181_shape_0, x = real_div_45_cast);
            tensor<fp16, [1280]> add_91_mean_0_to_fp16 = const()[name = tensor<string, []>("add_91_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(703120576)))];
            tensor<fp16, [1280]> add_91_variance_0_to_fp16 = const()[name = tensor<string, []>("add_91_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(703123200)))];
            tensor<fp16, [1280]> add_91_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_91_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(703125824)))];
            tensor<fp16, [1280]> add_91_beta_0_to_fp16 = const()[name = tensor<string, []>("add_91_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(703128448)))];
            tensor<fp16, []> add_91_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_91_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 32, 32]> add_91_cast = batch_norm(beta = add_91_beta_0_to_fp16, epsilon = add_91_epsilon_0_to_fp16, gamma = add_91_gamma_0_to_fp16, mean = add_91_mean_0_to_fp16, variance = add_91_variance_0_to_fp16, x = reshape_181_cast);
            tensor<fp16, [2, 1280, 32, 32]> input_397_cast = silu(x = add_91_cast);
            tensor<int32, [2]> var_6496 = const()[name = tensor<string, []>("op_6496"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6498 = const()[name = tensor<string, []>("op_6498"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_239_pad_type_0 = const()[name = tensor<string, []>("hidden_states_239_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_239_pad_0 = const()[name = tensor<string, []>("hidden_states_239_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [640, 1280, 3, 3]> up_blocks_2_resnets_1_conv1_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_1_conv1_weight_to_fp16"), val = tensor<fp16, [640, 1280, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(703131072)))];
            tensor<fp16, [640]> up_blocks_2_resnets_1_conv1_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_1_conv1_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(717876736)))];
            tensor<fp16, [2, 640, 32, 32]> hidden_states_239_cast = conv(bias = up_blocks_2_resnets_1_conv1_bias_to_fp16, dilations = var_6498, groups = var_5930, pad = hidden_states_239_pad_0, pad_type = hidden_states_239_pad_type_0, strides = var_6496, weight = up_blocks_2_resnets_1_conv1_weight_to_fp16, x = input_397_cast);
            tensor<int32, [2]> var_6504 = const()[name = tensor<string, []>("op_6504"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6506 = const()[name = tensor<string, []>("op_6506"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> temb_35_pad_type_0 = const()[name = tensor<string, []>("temb_35_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> temb_35_pad_0 = const()[name = tensor<string, []>("temb_35_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 1280, 1, 1]> up_blocks_2_resnets_1_time_emb_proj_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_1_time_emb_proj_weight_to_fp16"), val = tensor<fp16, [640, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(717878080)))];
            tensor<fp16, [640]> up_blocks_2_resnets_1_time_emb_proj_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_1_time_emb_proj_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(719516544)))];
            tensor<fp16, [2, 640, 1, 1]> temb_35_cast = conv(bias = up_blocks_2_resnets_1_time_emb_proj_bias_to_fp16, dilations = var_6506, groups = var_5930, pad = temb_35_pad_0, pad_type = temb_35_pad_type_0, strides = var_6504, weight = up_blocks_2_resnets_1_time_emb_proj_weight_to_fp16, x = cast_12);
            tensor<fp16, [2, 640, 32, 32]> input_401_cast = add(x = hidden_states_239_cast, y = temb_35_cast);
            tensor<int32, [5]> reshape_184_shape_0 = const()[name = tensor<string, []>("reshape_184_shape_0"), val = tensor<int32, [5]>([2, 32, 20, 32, 32])];
            tensor<fp16, [2, 32, 20, 32, 32]> reshape_184_cast = reshape(shape = reshape_184_shape_0, x = input_401_cast);
            tensor<int32, [3]> reduce_mean_138_axes_0 = const()[name = tensor<string, []>("reduce_mean_138_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_138_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_138_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_138_cast = reduce_mean(axes = reduce_mean_138_axes_0, keep_dims = reduce_mean_138_keep_dims_0, x = reshape_184_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> sub_92_cast = sub(x = reshape_184_cast, y = reduce_mean_138_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> square_46_cast = square(x = sub_92_cast);
            tensor<int32, [3]> reduce_mean_140_axes_0 = const()[name = tensor<string, []>("reduce_mean_140_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_140_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_140_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_140_cast = reduce_mean(axes = reduce_mean_140_axes_0, keep_dims = reduce_mean_140_keep_dims_0, x = square_46_cast);
            tensor<fp16, []> add_92_y_0_to_fp16 = const()[name = tensor<string, []>("add_92_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_92_cast = add(x = reduce_mean_140_cast, y = add_92_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_46_cast = sqrt(x = add_92_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> real_div_46_cast = real_div(x = sub_92_cast, y = sqrt_46_cast);
            tensor<int32, [4]> reshape_185_shape_0 = const()[name = tensor<string, []>("reshape_185_shape_0"), val = tensor<int32, [4]>([2, 640, 32, 32])];
            tensor<fp16, [2, 640, 32, 32]> reshape_185_cast = reshape(shape = reshape_185_shape_0, x = real_div_46_cast);
            tensor<fp16, [640]> add_93_mean_0_to_fp16 = const()[name = tensor<string, []>("add_93_mean_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(719517888)))];
            tensor<fp16, [640]> add_93_variance_0_to_fp16 = const()[name = tensor<string, []>("add_93_variance_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(719519232)))];
            tensor<fp16, [640]> add_93_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_93_gamma_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(719520576)))];
            tensor<fp16, [640]> add_93_beta_0_to_fp16 = const()[name = tensor<string, []>("add_93_beta_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(719521920)))];
            tensor<fp16, []> add_93_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_93_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 640, 32, 32]> add_93_cast = batch_norm(beta = add_93_beta_0_to_fp16, epsilon = add_93_epsilon_0_to_fp16, gamma = add_93_gamma_0_to_fp16, mean = add_93_mean_0_to_fp16, variance = add_93_variance_0_to_fp16, x = reshape_185_cast);
            tensor<fp16, [2, 640, 32, 32]> input_405_cast = silu(x = add_93_cast);
            tensor<int32, [2]> var_6516 = const()[name = tensor<string, []>("op_6516"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6518 = const()[name = tensor<string, []>("op_6518"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_241_pad_type_0 = const()[name = tensor<string, []>("hidden_states_241_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_241_pad_0 = const()[name = tensor<string, []>("hidden_states_241_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [640, 640, 3, 3]> up_blocks_2_resnets_1_conv2_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_1_conv2_weight_to_fp16"), val = tensor<fp16, [640, 640, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(719523264)))];
            tensor<fp16, [640]> up_blocks_2_resnets_1_conv2_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_1_conv2_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(726896128)))];
            tensor<fp16, [2, 640, 32, 32]> hidden_states_241_cast = conv(bias = up_blocks_2_resnets_1_conv2_bias_to_fp16, dilations = var_6518, groups = var_5930, pad = hidden_states_241_pad_0, pad_type = hidden_states_241_pad_type_0, strides = var_6516, weight = up_blocks_2_resnets_1_conv2_weight_to_fp16, x = input_405_cast);
            tensor<int32, [2]> var_6523 = const()[name = tensor<string, []>("op_6523"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6525 = const()[name = tensor<string, []>("op_6525"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_19_pad_type_0 = const()[name = tensor<string, []>("x_19_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_19_pad_0 = const()[name = tensor<string, []>("x_19_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 1280, 1, 1]> up_blocks_2_resnets_1_conv_shortcut_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_1_conv_shortcut_weight_to_fp16"), val = tensor<fp16, [640, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(726897472)))];
            tensor<fp16, [640]> up_blocks_2_resnets_1_conv_shortcut_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_1_conv_shortcut_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(728535936)))];
            tensor<fp16, [2, 640, 32, 32]> x_19_cast = conv(bias = up_blocks_2_resnets_1_conv_shortcut_bias_to_fp16, dilations = var_6525, groups = var_5930, pad = x_19_pad_0, pad_type = x_19_pad_type_0, strides = var_6523, weight = up_blocks_2_resnets_1_conv_shortcut_weight_to_fp16, x = input_393_cast);
            tensor<fp16, [2, 640, 32, 32]> hidden_states_243_cast = add(x = x_19_cast, y = hidden_states_241_cast);
            tensor<int32, [5]> reshape_188_shape_0 = const()[name = tensor<string, []>("reshape_188_shape_0"), val = tensor<int32, [5]>([2, 32, 20, 32, 32])];
            tensor<fp16, [2, 32, 20, 32, 32]> reshape_188_cast = reshape(shape = reshape_188_shape_0, x = hidden_states_243_cast);
            tensor<int32, [3]> reduce_mean_141_axes_0 = const()[name = tensor<string, []>("reduce_mean_141_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_141_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_141_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_141_cast = reduce_mean(axes = reduce_mean_141_axes_0, keep_dims = reduce_mean_141_keep_dims_0, x = reshape_188_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> sub_94_cast = sub(x = reshape_188_cast, y = reduce_mean_141_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> square_47_cast = square(x = sub_94_cast);
            tensor<int32, [3]> reduce_mean_143_axes_0 = const()[name = tensor<string, []>("reduce_mean_143_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_143_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_143_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_143_cast = reduce_mean(axes = reduce_mean_143_axes_0, keep_dims = reduce_mean_143_keep_dims_0, x = square_47_cast);
            tensor<fp16, []> add_94_y_0_to_fp16 = const()[name = tensor<string, []>("add_94_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_94_cast = add(x = reduce_mean_143_cast, y = add_94_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_47_cast = sqrt(x = add_94_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> real_div_47_cast = real_div(x = sub_94_cast, y = sqrt_47_cast);
            tensor<int32, [4]> reshape_189_shape_0 = const()[name = tensor<string, []>("reshape_189_shape_0"), val = tensor<int32, [4]>([2, 640, 32, 32])];
            tensor<fp16, [2, 640, 32, 32]> reshape_189_cast = reshape(shape = reshape_189_shape_0, x = real_div_47_cast);
            tensor<fp16, [640]> add_95_mean_0_to_fp16 = const()[name = tensor<string, []>("add_95_mean_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(728537280)))];
            tensor<fp16, [640]> add_95_variance_0_to_fp16 = const()[name = tensor<string, []>("add_95_variance_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(728538624)))];
            tensor<fp16, [640]> add_95_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_95_gamma_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(728539968)))];
            tensor<fp16, [640]> add_95_beta_0_to_fp16 = const()[name = tensor<string, []>("add_95_beta_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(728541312)))];
            tensor<fp16, []> add_95_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_95_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 640, 32, 32]> add_95_cast = batch_norm(beta = add_95_beta_0_to_fp16, epsilon = add_95_epsilon_0_to_fp16, gamma = add_95_gamma_0_to_fp16, mean = add_95_mean_0_to_fp16, variance = add_95_variance_0_to_fp16, x = reshape_189_cast);
            tensor<int32, [2]> var_6545 = const()[name = tensor<string, []>("op_6545"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6547 = const()[name = tensor<string, []>("op_6547"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_245_pad_type_0 = const()[name = tensor<string, []>("hidden_states_245_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_245_pad_0 = const()[name = tensor<string, []>("hidden_states_245_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_1_proj_in_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_1_proj_in_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(728542656)))];
            tensor<fp16, [640]> up_blocks_2_attentions_1_proj_in_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_1_proj_in_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(729361920)))];
            tensor<fp16, [2, 640, 32, 32]> hidden_states_245_cast = conv(bias = up_blocks_2_attentions_1_proj_in_bias_to_fp16, dilations = var_6547, groups = var_5930, pad = hidden_states_245_pad_0, pad_type = hidden_states_245_pad_type_0, strides = var_6545, weight = up_blocks_2_attentions_1_proj_in_weight_to_fp16, x = add_95_cast);
            tensor<int32, [4]> var_6552 = const()[name = tensor<string, []>("op_6552"), val = tensor<int32, [4]>([2, 640, 1, 1024])];
            tensor<fp16, [2, 640, 1, 1024]> inputs_67_cast = reshape(shape = var_6552, x = hidden_states_245_cast);
            tensor<int32, [1]> var_6562 = const()[name = tensor<string, []>("op_6562"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> channels_mean_67_cast = reduce_mean(axes = var_6562, keep_dims = var_5925, x = inputs_67_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_67_cast = sub(x = inputs_67_cast, y = channels_mean_67_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_sq_67_cast = mul(x = zero_mean_67_cast, y = zero_mean_67_cast);
            tensor<int32, [1]> var_6566 = const()[name = tensor<string, []>("op_6566"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> var_6567_cast = reduce_mean(axes = var_6566, keep_dims = var_5925, x = zero_mean_sq_67_cast);
            tensor<fp16, []> var_6568_to_fp16 = const()[name = tensor<string, []>("op_6568_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 1024]> var_6569_cast = add(x = var_6567_cast, y = var_6568_to_fp16);
            tensor<fp16, []> denom_67_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_67_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 1024]> denom_67_cast = rsqrt(epsilon = denom_67_epsilon_0_to_fp16, x = var_6569_cast);
            tensor<fp16, [2, 640, 1, 1024]> out_67_cast = mul(x = zero_mean_67_cast, y = denom_67_cast);
            tensor<fp16, [1, 640, 1, 1]> var_6573_to_fp16 = const()[name = tensor<string, []>("op_6573_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(729363264)))];
            tensor<fp16, [2, 640, 1, 1024]> var_6574_cast = add(x = out_67_cast, y = var_6573_to_fp16);
            tensor<fp16, [1, 640, 1, 1]> var_6576_to_fp16 = const()[name = tensor<string, []>("op_6576_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(729364608)))];
            tensor<fp16, [2, 640, 1, 1024]> hidden_states_247_cast = mul(x = var_6574_cast, y = var_6576_to_fp16);
            tensor<int32, [2]> var_6583 = const()[name = tensor<string, []>("op_6583"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6585 = const()[name = tensor<string, []>("op_6585"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_45_pad_type_0 = const()[name = tensor<string, []>("q_45_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_45_pad_0 = const()[name = tensor<string, []>("q_45_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_1_transformer_blocks_0_attn1_to_q_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_1_transformer_blocks_0_attn1_to_q_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(729365952)))];
            tensor<fp16, [2, 640, 1, 1024]> q_45_cast = conv(dilations = var_6585, groups = var_5930, pad = q_45_pad_0, pad_type = q_45_pad_type_0, strides = var_6583, weight = up_blocks_2_attentions_1_transformer_blocks_0_attn1_to_q_weight_to_fp16, x = hidden_states_247_cast);
            tensor<int32, [2]> var_6589 = const()[name = tensor<string, []>("op_6589"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6591 = const()[name = tensor<string, []>("op_6591"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_89_pad_type_0 = const()[name = tensor<string, []>("k_89_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_89_pad_0 = const()[name = tensor<string, []>("k_89_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_1_transformer_blocks_0_attn1_to_k_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_1_transformer_blocks_0_attn1_to_k_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(730185216)))];
            tensor<fp16, [2, 640, 1, 1024]> k_89_cast = conv(dilations = var_6591, groups = var_5930, pad = k_89_pad_0, pad_type = k_89_pad_type_0, strides = var_6589, weight = up_blocks_2_attentions_1_transformer_blocks_0_attn1_to_k_weight_to_fp16, x = hidden_states_247_cast);
            tensor<int32, [2]> var_6595 = const()[name = tensor<string, []>("op_6595"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6597 = const()[name = tensor<string, []>("op_6597"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_45_pad_type_0 = const()[name = tensor<string, []>("v_45_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_45_pad_0 = const()[name = tensor<string, []>("v_45_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_1_transformer_blocks_0_attn1_to_v_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_1_transformer_blocks_0_attn1_to_v_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(731004480)))];
            tensor<fp16, [2, 640, 1, 1024]> v_45_cast = conv(dilations = var_6597, groups = var_5930, pad = v_45_pad_0, pad_type = v_45_pad_type_0, strides = var_6595, weight = up_blocks_2_attentions_1_transformer_blocks_0_attn1_to_v_weight_to_fp16, x = hidden_states_247_cast);
            tensor<int32, [4]> var_6601_begin_0 = const()[name = tensor<string, []>("op_6601_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_6601_end_0 = const()[name = tensor<string, []>("op_6601_end_0"), val = tensor<int32, [4]>([2, 80, 1, 1024])];
            tensor<bool, [4]> var_6601_end_mask_0 = const()[name = tensor<string, []>("op_6601_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6601_cast = slice_by_index(begin = var_6601_begin_0, end = var_6601_end_0, end_mask = var_6601_end_mask_0, x = q_45_cast);
            tensor<int32, [4]> var_6605_begin_0 = const()[name = tensor<string, []>("op_6605_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_6605_end_0 = const()[name = tensor<string, []>("op_6605_end_0"), val = tensor<int32, [4]>([2, 160, 1, 1024])];
            tensor<bool, [4]> var_6605_end_mask_0 = const()[name = tensor<string, []>("op_6605_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6605_cast = slice_by_index(begin = var_6605_begin_0, end = var_6605_end_0, end_mask = var_6605_end_mask_0, x = q_45_cast);
            tensor<int32, [4]> var_6609_begin_0 = const()[name = tensor<string, []>("op_6609_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_6609_end_0 = const()[name = tensor<string, []>("op_6609_end_0"), val = tensor<int32, [4]>([2, 240, 1, 1024])];
            tensor<bool, [4]> var_6609_end_mask_0 = const()[name = tensor<string, []>("op_6609_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6609_cast = slice_by_index(begin = var_6609_begin_0, end = var_6609_end_0, end_mask = var_6609_end_mask_0, x = q_45_cast);
            tensor<int32, [4]> var_6613_begin_0 = const()[name = tensor<string, []>("op_6613_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_6613_end_0 = const()[name = tensor<string, []>("op_6613_end_0"), val = tensor<int32, [4]>([2, 320, 1, 1024])];
            tensor<bool, [4]> var_6613_end_mask_0 = const()[name = tensor<string, []>("op_6613_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6613_cast = slice_by_index(begin = var_6613_begin_0, end = var_6613_end_0, end_mask = var_6613_end_mask_0, x = q_45_cast);
            tensor<int32, [4]> var_6617_begin_0 = const()[name = tensor<string, []>("op_6617_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_6617_end_0 = const()[name = tensor<string, []>("op_6617_end_0"), val = tensor<int32, [4]>([2, 400, 1, 1024])];
            tensor<bool, [4]> var_6617_end_mask_0 = const()[name = tensor<string, []>("op_6617_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6617_cast = slice_by_index(begin = var_6617_begin_0, end = var_6617_end_0, end_mask = var_6617_end_mask_0, x = q_45_cast);
            tensor<int32, [4]> var_6621_begin_0 = const()[name = tensor<string, []>("op_6621_begin_0"), val = tensor<int32, [4]>([0, 400, 0, 0])];
            tensor<int32, [4]> var_6621_end_0 = const()[name = tensor<string, []>("op_6621_end_0"), val = tensor<int32, [4]>([2, 480, 1, 1024])];
            tensor<bool, [4]> var_6621_end_mask_0 = const()[name = tensor<string, []>("op_6621_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6621_cast = slice_by_index(begin = var_6621_begin_0, end = var_6621_end_0, end_mask = var_6621_end_mask_0, x = q_45_cast);
            tensor<int32, [4]> var_6625_begin_0 = const()[name = tensor<string, []>("op_6625_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_6625_end_0 = const()[name = tensor<string, []>("op_6625_end_0"), val = tensor<int32, [4]>([2, 560, 1, 1024])];
            tensor<bool, [4]> var_6625_end_mask_0 = const()[name = tensor<string, []>("op_6625_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6625_cast = slice_by_index(begin = var_6625_begin_0, end = var_6625_end_0, end_mask = var_6625_end_mask_0, x = q_45_cast);
            tensor<int32, [4]> var_6629_begin_0 = const()[name = tensor<string, []>("op_6629_begin_0"), val = tensor<int32, [4]>([0, 560, 0, 0])];
            tensor<int32, [4]> var_6629_end_0 = const()[name = tensor<string, []>("op_6629_end_0"), val = tensor<int32, [4]>([2, 640, 1, 1024])];
            tensor<bool, [4]> var_6629_end_mask_0 = const()[name = tensor<string, []>("op_6629_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6629_cast = slice_by_index(begin = var_6629_begin_0, end = var_6629_end_0, end_mask = var_6629_end_mask_0, x = q_45_cast);
            tensor<int32, [4]> k_91_perm_0 = const()[name = tensor<string, []>("k_91_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_6636_begin_0 = const()[name = tensor<string, []>("op_6636_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_6636_end_0 = const()[name = tensor<string, []>("op_6636_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 80])];
            tensor<bool, [4]> var_6636_end_mask_0 = const()[name = tensor<string, []>("op_6636_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 640]> transpose_9 = transpose(perm = k_91_perm_0, x = k_89_cast);
            tensor<fp16, [2, 1024, 1, 80]> var_6636_cast = slice_by_index(begin = var_6636_begin_0, end = var_6636_end_0, end_mask = var_6636_end_mask_0, x = transpose_9);
            tensor<int32, [4]> var_6640_begin_0 = const()[name = tensor<string, []>("op_6640_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 80])];
            tensor<int32, [4]> var_6640_end_0 = const()[name = tensor<string, []>("op_6640_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 160])];
            tensor<bool, [4]> var_6640_end_mask_0 = const()[name = tensor<string, []>("op_6640_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_6640_cast = slice_by_index(begin = var_6640_begin_0, end = var_6640_end_0, end_mask = var_6640_end_mask_0, x = transpose_9);
            tensor<int32, [4]> var_6644_begin_0 = const()[name = tensor<string, []>("op_6644_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 160])];
            tensor<int32, [4]> var_6644_end_0 = const()[name = tensor<string, []>("op_6644_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 240])];
            tensor<bool, [4]> var_6644_end_mask_0 = const()[name = tensor<string, []>("op_6644_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_6644_cast = slice_by_index(begin = var_6644_begin_0, end = var_6644_end_0, end_mask = var_6644_end_mask_0, x = transpose_9);
            tensor<int32, [4]> var_6648_begin_0 = const()[name = tensor<string, []>("op_6648_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 240])];
            tensor<int32, [4]> var_6648_end_0 = const()[name = tensor<string, []>("op_6648_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 320])];
            tensor<bool, [4]> var_6648_end_mask_0 = const()[name = tensor<string, []>("op_6648_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_6648_cast = slice_by_index(begin = var_6648_begin_0, end = var_6648_end_0, end_mask = var_6648_end_mask_0, x = transpose_9);
            tensor<int32, [4]> var_6652_begin_0 = const()[name = tensor<string, []>("op_6652_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_6652_end_0 = const()[name = tensor<string, []>("op_6652_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 400])];
            tensor<bool, [4]> var_6652_end_mask_0 = const()[name = tensor<string, []>("op_6652_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_6652_cast = slice_by_index(begin = var_6652_begin_0, end = var_6652_end_0, end_mask = var_6652_end_mask_0, x = transpose_9);
            tensor<int32, [4]> var_6656_begin_0 = const()[name = tensor<string, []>("op_6656_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 400])];
            tensor<int32, [4]> var_6656_end_0 = const()[name = tensor<string, []>("op_6656_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 480])];
            tensor<bool, [4]> var_6656_end_mask_0 = const()[name = tensor<string, []>("op_6656_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_6656_cast = slice_by_index(begin = var_6656_begin_0, end = var_6656_end_0, end_mask = var_6656_end_mask_0, x = transpose_9);
            tensor<int32, [4]> var_6660_begin_0 = const()[name = tensor<string, []>("op_6660_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 480])];
            tensor<int32, [4]> var_6660_end_0 = const()[name = tensor<string, []>("op_6660_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 560])];
            tensor<bool, [4]> var_6660_end_mask_0 = const()[name = tensor<string, []>("op_6660_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_6660_cast = slice_by_index(begin = var_6660_begin_0, end = var_6660_end_0, end_mask = var_6660_end_mask_0, x = transpose_9);
            tensor<int32, [4]> var_6664_begin_0 = const()[name = tensor<string, []>("op_6664_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 560])];
            tensor<int32, [4]> var_6664_end_0 = const()[name = tensor<string, []>("op_6664_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 640])];
            tensor<bool, [4]> var_6664_end_mask_0 = const()[name = tensor<string, []>("op_6664_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_6664_cast = slice_by_index(begin = var_6664_begin_0, end = var_6664_end_0, end_mask = var_6664_end_mask_0, x = transpose_9);
            tensor<int32, [4]> var_6666_begin_0 = const()[name = tensor<string, []>("op_6666_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_6666_end_0 = const()[name = tensor<string, []>("op_6666_end_0"), val = tensor<int32, [4]>([2, 80, 1, 1024])];
            tensor<bool, [4]> var_6666_end_mask_0 = const()[name = tensor<string, []>("op_6666_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6666_cast = slice_by_index(begin = var_6666_begin_0, end = var_6666_end_0, end_mask = var_6666_end_mask_0, x = v_45_cast);
            tensor<int32, [4]> var_6670_begin_0 = const()[name = tensor<string, []>("op_6670_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_6670_end_0 = const()[name = tensor<string, []>("op_6670_end_0"), val = tensor<int32, [4]>([2, 160, 1, 1024])];
            tensor<bool, [4]> var_6670_end_mask_0 = const()[name = tensor<string, []>("op_6670_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6670_cast = slice_by_index(begin = var_6670_begin_0, end = var_6670_end_0, end_mask = var_6670_end_mask_0, x = v_45_cast);
            tensor<int32, [4]> var_6674_begin_0 = const()[name = tensor<string, []>("op_6674_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_6674_end_0 = const()[name = tensor<string, []>("op_6674_end_0"), val = tensor<int32, [4]>([2, 240, 1, 1024])];
            tensor<bool, [4]> var_6674_end_mask_0 = const()[name = tensor<string, []>("op_6674_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6674_cast = slice_by_index(begin = var_6674_begin_0, end = var_6674_end_0, end_mask = var_6674_end_mask_0, x = v_45_cast);
            tensor<int32, [4]> var_6678_begin_0 = const()[name = tensor<string, []>("op_6678_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_6678_end_0 = const()[name = tensor<string, []>("op_6678_end_0"), val = tensor<int32, [4]>([2, 320, 1, 1024])];
            tensor<bool, [4]> var_6678_end_mask_0 = const()[name = tensor<string, []>("op_6678_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6678_cast = slice_by_index(begin = var_6678_begin_0, end = var_6678_end_0, end_mask = var_6678_end_mask_0, x = v_45_cast);
            tensor<int32, [4]> var_6682_begin_0 = const()[name = tensor<string, []>("op_6682_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_6682_end_0 = const()[name = tensor<string, []>("op_6682_end_0"), val = tensor<int32, [4]>([2, 400, 1, 1024])];
            tensor<bool, [4]> var_6682_end_mask_0 = const()[name = tensor<string, []>("op_6682_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6682_cast = slice_by_index(begin = var_6682_begin_0, end = var_6682_end_0, end_mask = var_6682_end_mask_0, x = v_45_cast);
            tensor<int32, [4]> var_6686_begin_0 = const()[name = tensor<string, []>("op_6686_begin_0"), val = tensor<int32, [4]>([0, 400, 0, 0])];
            tensor<int32, [4]> var_6686_end_0 = const()[name = tensor<string, []>("op_6686_end_0"), val = tensor<int32, [4]>([2, 480, 1, 1024])];
            tensor<bool, [4]> var_6686_end_mask_0 = const()[name = tensor<string, []>("op_6686_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6686_cast = slice_by_index(begin = var_6686_begin_0, end = var_6686_end_0, end_mask = var_6686_end_mask_0, x = v_45_cast);
            tensor<int32, [4]> var_6690_begin_0 = const()[name = tensor<string, []>("op_6690_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_6690_end_0 = const()[name = tensor<string, []>("op_6690_end_0"), val = tensor<int32, [4]>([2, 560, 1, 1024])];
            tensor<bool, [4]> var_6690_end_mask_0 = const()[name = tensor<string, []>("op_6690_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6690_cast = slice_by_index(begin = var_6690_begin_0, end = var_6690_end_0, end_mask = var_6690_end_mask_0, x = v_45_cast);
            tensor<int32, [4]> var_6694_begin_0 = const()[name = tensor<string, []>("op_6694_begin_0"), val = tensor<int32, [4]>([0, 560, 0, 0])];
            tensor<int32, [4]> var_6694_end_0 = const()[name = tensor<string, []>("op_6694_end_0"), val = tensor<int32, [4]>([2, 640, 1, 1024])];
            tensor<bool, [4]> var_6694_end_mask_0 = const()[name = tensor<string, []>("op_6694_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6694_cast = slice_by_index(begin = var_6694_begin_0, end = var_6694_end_0, end_mask = var_6694_end_mask_0, x = v_45_cast);
            tensor<string, []> var_6698_equation_0 = const()[name = tensor<string, []>("op_6698_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_6698_cast = einsum(equation = var_6698_equation_0, values = (var_6636_cast, var_6601_cast));
            tensor<fp16, []> var_6699_to_fp16 = const()[name = tensor<string, []>("op_6699_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_353_cast = mul(x = var_6698_cast, y = var_6699_to_fp16);
            tensor<string, []> var_6702_equation_0 = const()[name = tensor<string, []>("op_6702_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_6702_cast = einsum(equation = var_6702_equation_0, values = (var_6640_cast, var_6605_cast));
            tensor<fp16, []> var_6703_to_fp16 = const()[name = tensor<string, []>("op_6703_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_355_cast = mul(x = var_6702_cast, y = var_6703_to_fp16);
            tensor<string, []> var_6706_equation_0 = const()[name = tensor<string, []>("op_6706_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_6706_cast = einsum(equation = var_6706_equation_0, values = (var_6644_cast, var_6609_cast));
            tensor<fp16, []> var_6707_to_fp16 = const()[name = tensor<string, []>("op_6707_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_357_cast = mul(x = var_6706_cast, y = var_6707_to_fp16);
            tensor<string, []> var_6710_equation_0 = const()[name = tensor<string, []>("op_6710_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_6710_cast = einsum(equation = var_6710_equation_0, values = (var_6648_cast, var_6613_cast));
            tensor<fp16, []> var_6711_to_fp16 = const()[name = tensor<string, []>("op_6711_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_359_cast = mul(x = var_6710_cast, y = var_6711_to_fp16);
            tensor<string, []> var_6714_equation_0 = const()[name = tensor<string, []>("op_6714_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_6714_cast = einsum(equation = var_6714_equation_0, values = (var_6652_cast, var_6617_cast));
            tensor<fp16, []> var_6715_to_fp16 = const()[name = tensor<string, []>("op_6715_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_361_cast = mul(x = var_6714_cast, y = var_6715_to_fp16);
            tensor<string, []> var_6718_equation_0 = const()[name = tensor<string, []>("op_6718_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_6718_cast = einsum(equation = var_6718_equation_0, values = (var_6656_cast, var_6621_cast));
            tensor<fp16, []> var_6719_to_fp16 = const()[name = tensor<string, []>("op_6719_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_363_cast = mul(x = var_6718_cast, y = var_6719_to_fp16);
            tensor<string, []> var_6722_equation_0 = const()[name = tensor<string, []>("op_6722_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_6722_cast = einsum(equation = var_6722_equation_0, values = (var_6660_cast, var_6625_cast));
            tensor<fp16, []> var_6723_to_fp16 = const()[name = tensor<string, []>("op_6723_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_365_cast = mul(x = var_6722_cast, y = var_6723_to_fp16);
            tensor<string, []> var_6726_equation_0 = const()[name = tensor<string, []>("op_6726_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_6726_cast = einsum(equation = var_6726_equation_0, values = (var_6664_cast, var_6629_cast));
            tensor<fp16, []> var_6727_to_fp16 = const()[name = tensor<string, []>("op_6727_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_367_cast = mul(x = var_6726_cast, y = var_6727_to_fp16);
            tensor<fp16, [2, 1024, 1, 1024]> var_6729_cast = softmax(axis = var_5930, x = aw_353_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_6730_cast = softmax(axis = var_5930, x = aw_355_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_6731_cast = softmax(axis = var_5930, x = aw_357_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_6732_cast = softmax(axis = var_5930, x = aw_359_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_6733_cast = softmax(axis = var_5930, x = aw_361_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_6734_cast = softmax(axis = var_5930, x = aw_363_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_6735_cast = softmax(axis = var_5930, x = aw_365_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_6736_cast = softmax(axis = var_5930, x = aw_367_cast);
            tensor<string, []> var_6738_equation_0 = const()[name = tensor<string, []>("op_6738_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_6738_cast = einsum(equation = var_6738_equation_0, values = (var_6666_cast, var_6729_cast));
            tensor<string, []> var_6740_equation_0 = const()[name = tensor<string, []>("op_6740_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_6740_cast = einsum(equation = var_6740_equation_0, values = (var_6670_cast, var_6730_cast));
            tensor<string, []> var_6742_equation_0 = const()[name = tensor<string, []>("op_6742_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_6742_cast = einsum(equation = var_6742_equation_0, values = (var_6674_cast, var_6731_cast));
            tensor<string, []> var_6744_equation_0 = const()[name = tensor<string, []>("op_6744_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_6744_cast = einsum(equation = var_6744_equation_0, values = (var_6678_cast, var_6732_cast));
            tensor<string, []> var_6746_equation_0 = const()[name = tensor<string, []>("op_6746_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_6746_cast = einsum(equation = var_6746_equation_0, values = (var_6682_cast, var_6733_cast));
            tensor<string, []> var_6748_equation_0 = const()[name = tensor<string, []>("op_6748_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_6748_cast = einsum(equation = var_6748_equation_0, values = (var_6686_cast, var_6734_cast));
            tensor<string, []> var_6750_equation_0 = const()[name = tensor<string, []>("op_6750_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_6750_cast = einsum(equation = var_6750_equation_0, values = (var_6690_cast, var_6735_cast));
            tensor<string, []> var_6752_equation_0 = const()[name = tensor<string, []>("op_6752_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_6752_cast = einsum(equation = var_6752_equation_0, values = (var_6694_cast, var_6736_cast));
            tensor<bool, []> input_409_interleave_0 = const()[name = tensor<string, []>("input_409_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 640, 1, 1024]> input_409_cast = concat(axis = var_5930, interleave = input_409_interleave_0, values = (var_6738_cast, var_6740_cast, var_6742_cast, var_6744_cast, var_6746_cast, var_6748_cast, var_6750_cast, var_6752_cast));
            tensor<int32, [2]> var_6758 = const()[name = tensor<string, []>("op_6758"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6760 = const()[name = tensor<string, []>("op_6760"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_6762_pad_type_0 = const()[name = tensor<string, []>("op_6762_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_6762_pad_0 = const()[name = tensor<string, []>("op_6762_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_1_transformer_blocks_0_attn1_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_1_transformer_blocks_0_attn1_to_out_0_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(731823744)))];
            tensor<fp16, [640]> up_blocks_2_attentions_1_transformer_blocks_0_attn1_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_1_transformer_blocks_0_attn1_to_out_0_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(732643008)))];
            tensor<fp16, [2, 640, 1, 1024]> var_6762_cast = conv(bias = up_blocks_2_attentions_1_transformer_blocks_0_attn1_to_out_0_bias_to_fp16, dilations = var_6760, groups = var_5930, pad = var_6762_pad_0, pad_type = var_6762_pad_type_0, strides = var_6758, weight = up_blocks_2_attentions_1_transformer_blocks_0_attn1_to_out_0_weight_to_fp16, x = input_409_cast);
            tensor<fp16, [2, 640, 1, 1024]> inputs_69_cast = add(x = var_6762_cast, y = inputs_67_cast);
            tensor<int32, [1]> var_6766 = const()[name = tensor<string, []>("op_6766"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> channels_mean_69_cast = reduce_mean(axes = var_6766, keep_dims = var_5925, x = inputs_69_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_69_cast = sub(x = inputs_69_cast, y = channels_mean_69_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_sq_69_cast = mul(x = zero_mean_69_cast, y = zero_mean_69_cast);
            tensor<int32, [1]> var_6770 = const()[name = tensor<string, []>("op_6770"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> var_6771_cast = reduce_mean(axes = var_6770, keep_dims = var_5925, x = zero_mean_sq_69_cast);
            tensor<fp16, []> var_6772_to_fp16 = const()[name = tensor<string, []>("op_6772_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 1024]> var_6773_cast = add(x = var_6771_cast, y = var_6772_to_fp16);
            tensor<fp16, []> denom_69_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_69_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 1024]> denom_69_cast = rsqrt(epsilon = denom_69_epsilon_0_to_fp16, x = var_6773_cast);
            tensor<fp16, [2, 640, 1, 1024]> out_69_cast = mul(x = zero_mean_69_cast, y = denom_69_cast);
            tensor<fp16, [1, 640, 1, 1]> var_6777_to_fp16 = const()[name = tensor<string, []>("op_6777_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(732644352)))];
            tensor<fp16, [2, 640, 1, 1024]> var_6778_cast = add(x = out_69_cast, y = var_6777_to_fp16);
            tensor<fp16, [1, 640, 1, 1]> var_6780_to_fp16 = const()[name = tensor<string, []>("op_6780_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(732645696)))];
            tensor<fp16, [2, 640, 1, 1024]> hidden_states_249_cast = mul(x = var_6778_cast, y = var_6780_to_fp16);
            tensor<int32, [2]> var_6787 = const()[name = tensor<string, []>("op_6787"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6789 = const()[name = tensor<string, []>("op_6789"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_47_pad_type_0 = const()[name = tensor<string, []>("q_47_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_47_pad_0 = const()[name = tensor<string, []>("q_47_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_1_transformer_blocks_0_attn2_to_q_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_1_transformer_blocks_0_attn2_to_q_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(732647040)))];
            tensor<fp16, [2, 640, 1, 1024]> q_47_cast = conv(dilations = var_6789, groups = var_5930, pad = q_47_pad_0, pad_type = q_47_pad_type_0, strides = var_6787, weight = up_blocks_2_attentions_1_transformer_blocks_0_attn2_to_q_weight_to_fp16, x = hidden_states_249_cast);
            tensor<int32, [2]> var_6793 = const()[name = tensor<string, []>("op_6793"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6795 = const()[name = tensor<string, []>("op_6795"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_93_pad_type_0 = const()[name = tensor<string, []>("k_93_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_93_pad_0 = const()[name = tensor<string, []>("k_93_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 768, 1, 1]> up_blocks_2_attentions_1_transformer_blocks_0_attn2_to_k_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_1_transformer_blocks_0_attn2_to_k_weight_to_fp16"), val = tensor<fp16, [640, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(733466304)))];
            tensor<fp16, [2, 640, 1, 77]> k_93_cast = conv(dilations = var_6795, groups = var_5930, pad = k_93_pad_0, pad_type = k_93_pad_type_0, strides = var_6793, weight = up_blocks_2_attentions_1_transformer_blocks_0_attn2_to_k_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [2]> var_6799 = const()[name = tensor<string, []>("op_6799"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6801 = const()[name = tensor<string, []>("op_6801"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_47_pad_type_0 = const()[name = tensor<string, []>("v_47_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_47_pad_0 = const()[name = tensor<string, []>("v_47_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 768, 1, 1]> up_blocks_2_attentions_1_transformer_blocks_0_attn2_to_v_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_1_transformer_blocks_0_attn2_to_v_weight_to_fp16"), val = tensor<fp16, [640, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(734449408)))];
            tensor<fp16, [2, 640, 1, 77]> v_47_cast = conv(dilations = var_6801, groups = var_5930, pad = v_47_pad_0, pad_type = v_47_pad_type_0, strides = var_6799, weight = up_blocks_2_attentions_1_transformer_blocks_0_attn2_to_v_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [4]> var_6805_begin_0 = const()[name = tensor<string, []>("op_6805_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_6805_end_0 = const()[name = tensor<string, []>("op_6805_end_0"), val = tensor<int32, [4]>([2, 80, 1, 1024])];
            tensor<bool, [4]> var_6805_end_mask_0 = const()[name = tensor<string, []>("op_6805_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6805_cast = slice_by_index(begin = var_6805_begin_0, end = var_6805_end_0, end_mask = var_6805_end_mask_0, x = q_47_cast);
            tensor<int32, [4]> var_6809_begin_0 = const()[name = tensor<string, []>("op_6809_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_6809_end_0 = const()[name = tensor<string, []>("op_6809_end_0"), val = tensor<int32, [4]>([2, 160, 1, 1024])];
            tensor<bool, [4]> var_6809_end_mask_0 = const()[name = tensor<string, []>("op_6809_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6809_cast = slice_by_index(begin = var_6809_begin_0, end = var_6809_end_0, end_mask = var_6809_end_mask_0, x = q_47_cast);
            tensor<int32, [4]> var_6813_begin_0 = const()[name = tensor<string, []>("op_6813_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_6813_end_0 = const()[name = tensor<string, []>("op_6813_end_0"), val = tensor<int32, [4]>([2, 240, 1, 1024])];
            tensor<bool, [4]> var_6813_end_mask_0 = const()[name = tensor<string, []>("op_6813_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6813_cast = slice_by_index(begin = var_6813_begin_0, end = var_6813_end_0, end_mask = var_6813_end_mask_0, x = q_47_cast);
            tensor<int32, [4]> var_6817_begin_0 = const()[name = tensor<string, []>("op_6817_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_6817_end_0 = const()[name = tensor<string, []>("op_6817_end_0"), val = tensor<int32, [4]>([2, 320, 1, 1024])];
            tensor<bool, [4]> var_6817_end_mask_0 = const()[name = tensor<string, []>("op_6817_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6817_cast = slice_by_index(begin = var_6817_begin_0, end = var_6817_end_0, end_mask = var_6817_end_mask_0, x = q_47_cast);
            tensor<int32, [4]> var_6821_begin_0 = const()[name = tensor<string, []>("op_6821_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_6821_end_0 = const()[name = tensor<string, []>("op_6821_end_0"), val = tensor<int32, [4]>([2, 400, 1, 1024])];
            tensor<bool, [4]> var_6821_end_mask_0 = const()[name = tensor<string, []>("op_6821_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6821_cast = slice_by_index(begin = var_6821_begin_0, end = var_6821_end_0, end_mask = var_6821_end_mask_0, x = q_47_cast);
            tensor<int32, [4]> var_6825_begin_0 = const()[name = tensor<string, []>("op_6825_begin_0"), val = tensor<int32, [4]>([0, 400, 0, 0])];
            tensor<int32, [4]> var_6825_end_0 = const()[name = tensor<string, []>("op_6825_end_0"), val = tensor<int32, [4]>([2, 480, 1, 1024])];
            tensor<bool, [4]> var_6825_end_mask_0 = const()[name = tensor<string, []>("op_6825_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6825_cast = slice_by_index(begin = var_6825_begin_0, end = var_6825_end_0, end_mask = var_6825_end_mask_0, x = q_47_cast);
            tensor<int32, [4]> var_6829_begin_0 = const()[name = tensor<string, []>("op_6829_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_6829_end_0 = const()[name = tensor<string, []>("op_6829_end_0"), val = tensor<int32, [4]>([2, 560, 1, 1024])];
            tensor<bool, [4]> var_6829_end_mask_0 = const()[name = tensor<string, []>("op_6829_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6829_cast = slice_by_index(begin = var_6829_begin_0, end = var_6829_end_0, end_mask = var_6829_end_mask_0, x = q_47_cast);
            tensor<int32, [4]> var_6833_begin_0 = const()[name = tensor<string, []>("op_6833_begin_0"), val = tensor<int32, [4]>([0, 560, 0, 0])];
            tensor<int32, [4]> var_6833_end_0 = const()[name = tensor<string, []>("op_6833_end_0"), val = tensor<int32, [4]>([2, 640, 1, 1024])];
            tensor<bool, [4]> var_6833_end_mask_0 = const()[name = tensor<string, []>("op_6833_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6833_cast = slice_by_index(begin = var_6833_begin_0, end = var_6833_end_0, end_mask = var_6833_end_mask_0, x = q_47_cast);
            tensor<int32, [4]> k_95_perm_0 = const()[name = tensor<string, []>("k_95_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_6840_begin_0 = const()[name = tensor<string, []>("op_6840_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_6840_end_0 = const()[name = tensor<string, []>("op_6840_end_0"), val = tensor<int32, [4]>([2, 77, 1, 80])];
            tensor<bool, [4]> var_6840_end_mask_0 = const()[name = tensor<string, []>("op_6840_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 640]> transpose_8 = transpose(perm = k_95_perm_0, x = k_93_cast);
            tensor<fp16, [2, 77, 1, 80]> var_6840_cast = slice_by_index(begin = var_6840_begin_0, end = var_6840_end_0, end_mask = var_6840_end_mask_0, x = transpose_8);
            tensor<int32, [4]> var_6844_begin_0 = const()[name = tensor<string, []>("op_6844_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 80])];
            tensor<int32, [4]> var_6844_end_0 = const()[name = tensor<string, []>("op_6844_end_0"), val = tensor<int32, [4]>([2, 77, 1, 160])];
            tensor<bool, [4]> var_6844_end_mask_0 = const()[name = tensor<string, []>("op_6844_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_6844_cast = slice_by_index(begin = var_6844_begin_0, end = var_6844_end_0, end_mask = var_6844_end_mask_0, x = transpose_8);
            tensor<int32, [4]> var_6848_begin_0 = const()[name = tensor<string, []>("op_6848_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 160])];
            tensor<int32, [4]> var_6848_end_0 = const()[name = tensor<string, []>("op_6848_end_0"), val = tensor<int32, [4]>([2, 77, 1, 240])];
            tensor<bool, [4]> var_6848_end_mask_0 = const()[name = tensor<string, []>("op_6848_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_6848_cast = slice_by_index(begin = var_6848_begin_0, end = var_6848_end_0, end_mask = var_6848_end_mask_0, x = transpose_8);
            tensor<int32, [4]> var_6852_begin_0 = const()[name = tensor<string, []>("op_6852_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 240])];
            tensor<int32, [4]> var_6852_end_0 = const()[name = tensor<string, []>("op_6852_end_0"), val = tensor<int32, [4]>([2, 77, 1, 320])];
            tensor<bool, [4]> var_6852_end_mask_0 = const()[name = tensor<string, []>("op_6852_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_6852_cast = slice_by_index(begin = var_6852_begin_0, end = var_6852_end_0, end_mask = var_6852_end_mask_0, x = transpose_8);
            tensor<int32, [4]> var_6856_begin_0 = const()[name = tensor<string, []>("op_6856_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_6856_end_0 = const()[name = tensor<string, []>("op_6856_end_0"), val = tensor<int32, [4]>([2, 77, 1, 400])];
            tensor<bool, [4]> var_6856_end_mask_0 = const()[name = tensor<string, []>("op_6856_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_6856_cast = slice_by_index(begin = var_6856_begin_0, end = var_6856_end_0, end_mask = var_6856_end_mask_0, x = transpose_8);
            tensor<int32, [4]> var_6860_begin_0 = const()[name = tensor<string, []>("op_6860_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 400])];
            tensor<int32, [4]> var_6860_end_0 = const()[name = tensor<string, []>("op_6860_end_0"), val = tensor<int32, [4]>([2, 77, 1, 480])];
            tensor<bool, [4]> var_6860_end_mask_0 = const()[name = tensor<string, []>("op_6860_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_6860_cast = slice_by_index(begin = var_6860_begin_0, end = var_6860_end_0, end_mask = var_6860_end_mask_0, x = transpose_8);
            tensor<int32, [4]> var_6864_begin_0 = const()[name = tensor<string, []>("op_6864_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 480])];
            tensor<int32, [4]> var_6864_end_0 = const()[name = tensor<string, []>("op_6864_end_0"), val = tensor<int32, [4]>([2, 77, 1, 560])];
            tensor<bool, [4]> var_6864_end_mask_0 = const()[name = tensor<string, []>("op_6864_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_6864_cast = slice_by_index(begin = var_6864_begin_0, end = var_6864_end_0, end_mask = var_6864_end_mask_0, x = transpose_8);
            tensor<int32, [4]> var_6868_begin_0 = const()[name = tensor<string, []>("op_6868_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 560])];
            tensor<int32, [4]> var_6868_end_0 = const()[name = tensor<string, []>("op_6868_end_0"), val = tensor<int32, [4]>([2, 77, 1, 640])];
            tensor<bool, [4]> var_6868_end_mask_0 = const()[name = tensor<string, []>("op_6868_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_6868_cast = slice_by_index(begin = var_6868_begin_0, end = var_6868_end_0, end_mask = var_6868_end_mask_0, x = transpose_8);
            tensor<int32, [4]> var_6870_begin_0 = const()[name = tensor<string, []>("op_6870_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_6870_end_0 = const()[name = tensor<string, []>("op_6870_end_0"), val = tensor<int32, [4]>([2, 80, 1, 77])];
            tensor<bool, [4]> var_6870_end_mask_0 = const()[name = tensor<string, []>("op_6870_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_6870_cast = slice_by_index(begin = var_6870_begin_0, end = var_6870_end_0, end_mask = var_6870_end_mask_0, x = v_47_cast);
            tensor<int32, [4]> var_6874_begin_0 = const()[name = tensor<string, []>("op_6874_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_6874_end_0 = const()[name = tensor<string, []>("op_6874_end_0"), val = tensor<int32, [4]>([2, 160, 1, 77])];
            tensor<bool, [4]> var_6874_end_mask_0 = const()[name = tensor<string, []>("op_6874_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_6874_cast = slice_by_index(begin = var_6874_begin_0, end = var_6874_end_0, end_mask = var_6874_end_mask_0, x = v_47_cast);
            tensor<int32, [4]> var_6878_begin_0 = const()[name = tensor<string, []>("op_6878_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_6878_end_0 = const()[name = tensor<string, []>("op_6878_end_0"), val = tensor<int32, [4]>([2, 240, 1, 77])];
            tensor<bool, [4]> var_6878_end_mask_0 = const()[name = tensor<string, []>("op_6878_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_6878_cast = slice_by_index(begin = var_6878_begin_0, end = var_6878_end_0, end_mask = var_6878_end_mask_0, x = v_47_cast);
            tensor<int32, [4]> var_6882_begin_0 = const()[name = tensor<string, []>("op_6882_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_6882_end_0 = const()[name = tensor<string, []>("op_6882_end_0"), val = tensor<int32, [4]>([2, 320, 1, 77])];
            tensor<bool, [4]> var_6882_end_mask_0 = const()[name = tensor<string, []>("op_6882_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_6882_cast = slice_by_index(begin = var_6882_begin_0, end = var_6882_end_0, end_mask = var_6882_end_mask_0, x = v_47_cast);
            tensor<int32, [4]> var_6886_begin_0 = const()[name = tensor<string, []>("op_6886_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_6886_end_0 = const()[name = tensor<string, []>("op_6886_end_0"), val = tensor<int32, [4]>([2, 400, 1, 77])];
            tensor<bool, [4]> var_6886_end_mask_0 = const()[name = tensor<string, []>("op_6886_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_6886_cast = slice_by_index(begin = var_6886_begin_0, end = var_6886_end_0, end_mask = var_6886_end_mask_0, x = v_47_cast);
            tensor<int32, [4]> var_6890_begin_0 = const()[name = tensor<string, []>("op_6890_begin_0"), val = tensor<int32, [4]>([0, 400, 0, 0])];
            tensor<int32, [4]> var_6890_end_0 = const()[name = tensor<string, []>("op_6890_end_0"), val = tensor<int32, [4]>([2, 480, 1, 77])];
            tensor<bool, [4]> var_6890_end_mask_0 = const()[name = tensor<string, []>("op_6890_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_6890_cast = slice_by_index(begin = var_6890_begin_0, end = var_6890_end_0, end_mask = var_6890_end_mask_0, x = v_47_cast);
            tensor<int32, [4]> var_6894_begin_0 = const()[name = tensor<string, []>("op_6894_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_6894_end_0 = const()[name = tensor<string, []>("op_6894_end_0"), val = tensor<int32, [4]>([2, 560, 1, 77])];
            tensor<bool, [4]> var_6894_end_mask_0 = const()[name = tensor<string, []>("op_6894_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_6894_cast = slice_by_index(begin = var_6894_begin_0, end = var_6894_end_0, end_mask = var_6894_end_mask_0, x = v_47_cast);
            tensor<int32, [4]> var_6898_begin_0 = const()[name = tensor<string, []>("op_6898_begin_0"), val = tensor<int32, [4]>([0, 560, 0, 0])];
            tensor<int32, [4]> var_6898_end_0 = const()[name = tensor<string, []>("op_6898_end_0"), val = tensor<int32, [4]>([2, 640, 1, 77])];
            tensor<bool, [4]> var_6898_end_mask_0 = const()[name = tensor<string, []>("op_6898_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_6898_cast = slice_by_index(begin = var_6898_begin_0, end = var_6898_end_0, end_mask = var_6898_end_mask_0, x = v_47_cast);
            tensor<string, []> var_6902_equation_0 = const()[name = tensor<string, []>("op_6902_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_6902_cast = einsum(equation = var_6902_equation_0, values = (var_6840_cast, var_6805_cast));
            tensor<fp16, []> var_6903_to_fp16 = const()[name = tensor<string, []>("op_6903_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_369_cast = mul(x = var_6902_cast, y = var_6903_to_fp16);
            tensor<string, []> var_6906_equation_0 = const()[name = tensor<string, []>("op_6906_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_6906_cast = einsum(equation = var_6906_equation_0, values = (var_6844_cast, var_6809_cast));
            tensor<fp16, []> var_6907_to_fp16 = const()[name = tensor<string, []>("op_6907_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_371_cast = mul(x = var_6906_cast, y = var_6907_to_fp16);
            tensor<string, []> var_6910_equation_0 = const()[name = tensor<string, []>("op_6910_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_6910_cast = einsum(equation = var_6910_equation_0, values = (var_6848_cast, var_6813_cast));
            tensor<fp16, []> var_6911_to_fp16 = const()[name = tensor<string, []>("op_6911_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_373_cast = mul(x = var_6910_cast, y = var_6911_to_fp16);
            tensor<string, []> var_6914_equation_0 = const()[name = tensor<string, []>("op_6914_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_6914_cast = einsum(equation = var_6914_equation_0, values = (var_6852_cast, var_6817_cast));
            tensor<fp16, []> var_6915_to_fp16 = const()[name = tensor<string, []>("op_6915_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_375_cast = mul(x = var_6914_cast, y = var_6915_to_fp16);
            tensor<string, []> var_6918_equation_0 = const()[name = tensor<string, []>("op_6918_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_6918_cast = einsum(equation = var_6918_equation_0, values = (var_6856_cast, var_6821_cast));
            tensor<fp16, []> var_6919_to_fp16 = const()[name = tensor<string, []>("op_6919_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_377_cast = mul(x = var_6918_cast, y = var_6919_to_fp16);
            tensor<string, []> var_6922_equation_0 = const()[name = tensor<string, []>("op_6922_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_6922_cast = einsum(equation = var_6922_equation_0, values = (var_6860_cast, var_6825_cast));
            tensor<fp16, []> var_6923_to_fp16 = const()[name = tensor<string, []>("op_6923_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_379_cast = mul(x = var_6922_cast, y = var_6923_to_fp16);
            tensor<string, []> var_6926_equation_0 = const()[name = tensor<string, []>("op_6926_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_6926_cast = einsum(equation = var_6926_equation_0, values = (var_6864_cast, var_6829_cast));
            tensor<fp16, []> var_6927_to_fp16 = const()[name = tensor<string, []>("op_6927_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_381_cast = mul(x = var_6926_cast, y = var_6927_to_fp16);
            tensor<string, []> var_6930_equation_0 = const()[name = tensor<string, []>("op_6930_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_6930_cast = einsum(equation = var_6930_equation_0, values = (var_6868_cast, var_6833_cast));
            tensor<fp16, []> var_6931_to_fp16 = const()[name = tensor<string, []>("op_6931_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_383_cast = mul(x = var_6930_cast, y = var_6931_to_fp16);
            tensor<fp16, [2, 77, 1, 1024]> var_6933_cast = softmax(axis = var_5930, x = aw_369_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_6934_cast = softmax(axis = var_5930, x = aw_371_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_6935_cast = softmax(axis = var_5930, x = aw_373_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_6936_cast = softmax(axis = var_5930, x = aw_375_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_6937_cast = softmax(axis = var_5930, x = aw_377_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_6938_cast = softmax(axis = var_5930, x = aw_379_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_6939_cast = softmax(axis = var_5930, x = aw_381_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_6940_cast = softmax(axis = var_5930, x = aw_383_cast);
            tensor<string, []> var_6942_equation_0 = const()[name = tensor<string, []>("op_6942_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_6942_cast = einsum(equation = var_6942_equation_0, values = (var_6870_cast, var_6933_cast));
            tensor<string, []> var_6944_equation_0 = const()[name = tensor<string, []>("op_6944_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_6944_cast = einsum(equation = var_6944_equation_0, values = (var_6874_cast, var_6934_cast));
            tensor<string, []> var_6946_equation_0 = const()[name = tensor<string, []>("op_6946_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_6946_cast = einsum(equation = var_6946_equation_0, values = (var_6878_cast, var_6935_cast));
            tensor<string, []> var_6948_equation_0 = const()[name = tensor<string, []>("op_6948_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_6948_cast = einsum(equation = var_6948_equation_0, values = (var_6882_cast, var_6936_cast));
            tensor<string, []> var_6950_equation_0 = const()[name = tensor<string, []>("op_6950_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_6950_cast = einsum(equation = var_6950_equation_0, values = (var_6886_cast, var_6937_cast));
            tensor<string, []> var_6952_equation_0 = const()[name = tensor<string, []>("op_6952_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_6952_cast = einsum(equation = var_6952_equation_0, values = (var_6890_cast, var_6938_cast));
            tensor<string, []> var_6954_equation_0 = const()[name = tensor<string, []>("op_6954_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_6954_cast = einsum(equation = var_6954_equation_0, values = (var_6894_cast, var_6939_cast));
            tensor<string, []> var_6956_equation_0 = const()[name = tensor<string, []>("op_6956_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_6956_cast = einsum(equation = var_6956_equation_0, values = (var_6898_cast, var_6940_cast));
            tensor<bool, []> input_411_interleave_0 = const()[name = tensor<string, []>("input_411_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 640, 1, 1024]> input_411_cast = concat(axis = var_5930, interleave = input_411_interleave_0, values = (var_6942_cast, var_6944_cast, var_6946_cast, var_6948_cast, var_6950_cast, var_6952_cast, var_6954_cast, var_6956_cast));
            tensor<int32, [2]> var_6962 = const()[name = tensor<string, []>("op_6962"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6964 = const()[name = tensor<string, []>("op_6964"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_6966_pad_type_0 = const()[name = tensor<string, []>("op_6966_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_6966_pad_0 = const()[name = tensor<string, []>("op_6966_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_1_transformer_blocks_0_attn2_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_1_transformer_blocks_0_attn2_to_out_0_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(735432512)))];
            tensor<fp16, [640]> up_blocks_2_attentions_1_transformer_blocks_0_attn2_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_1_transformer_blocks_0_attn2_to_out_0_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(736251776)))];
            tensor<fp16, [2, 640, 1, 1024]> var_6966_cast = conv(bias = up_blocks_2_attentions_1_transformer_blocks_0_attn2_to_out_0_bias_to_fp16, dilations = var_6964, groups = var_5930, pad = var_6966_pad_0, pad_type = var_6966_pad_type_0, strides = var_6962, weight = up_blocks_2_attentions_1_transformer_blocks_0_attn2_to_out_0_weight_to_fp16, x = input_411_cast);
            tensor<fp16, [2, 640, 1, 1024]> inputs_71_cast = add(x = var_6966_cast, y = inputs_69_cast);
            tensor<int32, [1]> var_6970 = const()[name = tensor<string, []>("op_6970"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> channels_mean_71_cast = reduce_mean(axes = var_6970, keep_dims = var_5925, x = inputs_71_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_71_cast = sub(x = inputs_71_cast, y = channels_mean_71_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_sq_71_cast = mul(x = zero_mean_71_cast, y = zero_mean_71_cast);
            tensor<int32, [1]> var_6974 = const()[name = tensor<string, []>("op_6974"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> var_6975_cast = reduce_mean(axes = var_6974, keep_dims = var_5925, x = zero_mean_sq_71_cast);
            tensor<fp16, []> var_6976_to_fp16 = const()[name = tensor<string, []>("op_6976_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 1024]> var_6977_cast = add(x = var_6975_cast, y = var_6976_to_fp16);
            tensor<fp16, []> denom_71_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_71_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 1024]> denom_71_cast = rsqrt(epsilon = denom_71_epsilon_0_to_fp16, x = var_6977_cast);
            tensor<fp16, [2, 640, 1, 1024]> out_71_cast = mul(x = zero_mean_71_cast, y = denom_71_cast);
            tensor<fp16, [1, 640, 1, 1]> var_6981_to_fp16 = const()[name = tensor<string, []>("op_6981_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(736253120)))];
            tensor<fp16, [2, 640, 1, 1024]> var_6982_cast = add(x = out_71_cast, y = var_6981_to_fp16);
            tensor<fp16, [1, 640, 1, 1]> var_6984_to_fp16 = const()[name = tensor<string, []>("op_6984_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(736254464)))];
            tensor<fp16, [2, 640, 1, 1024]> input_413_cast = mul(x = var_6982_cast, y = var_6984_to_fp16);
            tensor<int32, [2]> var_6992 = const()[name = tensor<string, []>("op_6992"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6994 = const()[name = tensor<string, []>("op_6994"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_6996_pad_type_0 = const()[name = tensor<string, []>("op_6996_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_6996_pad_0 = const()[name = tensor<string, []>("op_6996_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [5120, 640, 1, 1]> up_blocks_2_attentions_1_transformer_blocks_0_ff_net_0_proj_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_1_transformer_blocks_0_ff_net_0_proj_weight_to_fp16"), val = tensor<fp16, [5120, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(736255808)))];
            tensor<fp16, [5120]> up_blocks_2_attentions_1_transformer_blocks_0_ff_net_0_proj_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_1_transformer_blocks_0_ff_net_0_proj_bias_to_fp16"), val = tensor<fp16, [5120]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(742809472)))];
            tensor<fp16, [2, 5120, 1, 1024]> var_6996_cast = conv(bias = up_blocks_2_attentions_1_transformer_blocks_0_ff_net_0_proj_bias_to_fp16, dilations = var_6994, groups = var_5930, pad = var_6996_pad_0, pad_type = var_6996_pad_type_0, strides = var_6992, weight = up_blocks_2_attentions_1_transformer_blocks_0_ff_net_0_proj_weight_to_fp16, x = input_413_cast);
            tensor<int32, [2]> var_6997_split_sizes_0 = const()[name = tensor<string, []>("op_6997_split_sizes_0"), val = tensor<int32, [2]>([2560, 2560])];
            tensor<int32, []> var_6997_axis_0 = const()[name = tensor<string, []>("op_6997_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [2, 2560, 1, 1024]> var_6997_cast_0, tensor<fp16, [2, 2560, 1, 1024]> var_6997_cast_1 = split(axis = var_6997_axis_0, split_sizes = var_6997_split_sizes_0, x = var_6996_cast);
            tensor<string, []> var_6999_mode_0 = const()[name = tensor<string, []>("op_6999_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [2, 2560, 1, 1024]> var_6999_cast = gelu(mode = var_6999_mode_0, x = var_6997_cast_1);
            tensor<fp16, [2, 2560, 1, 1024]> input_415_cast = mul(x = var_6997_cast_0, y = var_6999_cast);
            tensor<int32, [2]> var_7003 = const()[name = tensor<string, []>("op_7003"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7005 = const()[name = tensor<string, []>("op_7005"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_7007_pad_type_0 = const()[name = tensor<string, []>("op_7007_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_7007_pad_0 = const()[name = tensor<string, []>("op_7007_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 2560, 1, 1]> up_blocks_2_attentions_1_transformer_blocks_0_ff_net_2_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_1_transformer_blocks_0_ff_net_2_weight_to_fp16"), val = tensor<fp16, [640, 2560, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(742819776)))];
            tensor<fp16, [640]> up_blocks_2_attentions_1_transformer_blocks_0_ff_net_2_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_1_transformer_blocks_0_ff_net_2_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(746096640)))];
            tensor<fp16, [2, 640, 1, 1024]> var_7007_cast = conv(bias = up_blocks_2_attentions_1_transformer_blocks_0_ff_net_2_bias_to_fp16, dilations = var_7005, groups = var_5930, pad = var_7007_pad_0, pad_type = var_7007_pad_type_0, strides = var_7003, weight = up_blocks_2_attentions_1_transformer_blocks_0_ff_net_2_weight_to_fp16, x = input_415_cast);
            tensor<fp16, [2, 640, 1, 1024]> hidden_states_253_cast = add(x = var_7007_cast, y = inputs_71_cast);
            tensor<int32, [4]> var_7009 = const()[name = tensor<string, []>("op_7009"), val = tensor<int32, [4]>([2, 640, 32, 32])];
            tensor<fp16, [2, 640, 32, 32]> input_417_cast = reshape(shape = var_7009, x = hidden_states_253_cast);
            tensor<int32, [2]> var_7013 = const()[name = tensor<string, []>("op_7013"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7015 = const()[name = tensor<string, []>("op_7015"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_255_pad_type_0 = const()[name = tensor<string, []>("hidden_states_255_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_255_pad_0 = const()[name = tensor<string, []>("hidden_states_255_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_1_proj_out_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_1_proj_out_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(746097984)))];
            tensor<fp16, [640]> up_blocks_2_attentions_1_proj_out_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_1_proj_out_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(746917248)))];
            tensor<fp16, [2, 640, 32, 32]> hidden_states_255_cast = conv(bias = up_blocks_2_attentions_1_proj_out_bias_to_fp16, dilations = var_7015, groups = var_5930, pad = hidden_states_255_pad_0, pad_type = hidden_states_255_pad_type_0, strides = var_7013, weight = up_blocks_2_attentions_1_proj_out_weight_to_fp16, x = input_417_cast);
            tensor<fp16, [2, 640, 32, 32]> hidden_states_257_cast = add(x = hidden_states_255_cast, y = hidden_states_243_cast);
            tensor<bool, []> input_419_interleave_0 = const()[name = tensor<string, []>("input_419_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 320, 32, 32]> cast_9 = cast(dtype = cast_6_dtype_0, x = input_63_cast);
            tensor<fp16, [2, 960, 32, 32]> input_419_cast = concat(axis = var_5930, interleave = input_419_interleave_0, values = (hidden_states_257_cast, cast_9));
            tensor<int32, [5]> reshape_192_shape_0 = const()[name = tensor<string, []>("reshape_192_shape_0"), val = tensor<int32, [5]>([2, 32, 30, 32, 32])];
            tensor<fp16, [2, 32, 30, 32, 32]> reshape_192_cast = reshape(shape = reshape_192_shape_0, x = input_419_cast);
            tensor<int32, [3]> reduce_mean_144_axes_0 = const()[name = tensor<string, []>("reduce_mean_144_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_144_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_144_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_144_cast = reduce_mean(axes = reduce_mean_144_axes_0, keep_dims = reduce_mean_144_keep_dims_0, x = reshape_192_cast);
            tensor<fp16, [2, 32, 30, 32, 32]> sub_96_cast = sub(x = reshape_192_cast, y = reduce_mean_144_cast);
            tensor<fp16, [2, 32, 30, 32, 32]> square_48_cast = square(x = sub_96_cast);
            tensor<int32, [3]> reduce_mean_146_axes_0 = const()[name = tensor<string, []>("reduce_mean_146_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_146_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_146_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_146_cast = reduce_mean(axes = reduce_mean_146_axes_0, keep_dims = reduce_mean_146_keep_dims_0, x = square_48_cast);
            tensor<fp16, []> add_96_y_0_to_fp16 = const()[name = tensor<string, []>("add_96_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_96_cast = add(x = reduce_mean_146_cast, y = add_96_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_48_cast = sqrt(x = add_96_cast);
            tensor<fp16, [2, 32, 30, 32, 32]> real_div_48_cast = real_div(x = sub_96_cast, y = sqrt_48_cast);
            tensor<int32, [4]> reshape_193_shape_0 = const()[name = tensor<string, []>("reshape_193_shape_0"), val = tensor<int32, [4]>([2, 960, 32, 32])];
            tensor<fp16, [2, 960, 32, 32]> reshape_193_cast = reshape(shape = reshape_193_shape_0, x = real_div_48_cast);
            tensor<fp16, [960]> add_97_mean_0_to_fp16 = const()[name = tensor<string, []>("add_97_mean_0_to_fp16"), val = tensor<fp16, [960]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(746918592)))];
            tensor<fp16, [960]> add_97_variance_0_to_fp16 = const()[name = tensor<string, []>("add_97_variance_0_to_fp16"), val = tensor<fp16, [960]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(746920576)))];
            tensor<fp16, [960]> add_97_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_97_gamma_0_to_fp16"), val = tensor<fp16, [960]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(746922560)))];
            tensor<fp16, [960]> add_97_beta_0_to_fp16 = const()[name = tensor<string, []>("add_97_beta_0_to_fp16"), val = tensor<fp16, [960]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(746924544)))];
            tensor<fp16, []> add_97_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_97_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 960, 32, 32]> add_97_cast = batch_norm(beta = add_97_beta_0_to_fp16, epsilon = add_97_epsilon_0_to_fp16, gamma = add_97_gamma_0_to_fp16, mean = add_97_mean_0_to_fp16, variance = add_97_variance_0_to_fp16, x = reshape_193_cast);
            tensor<fp16, [2, 960, 32, 32]> input_423_cast = silu(x = add_97_cast);
            tensor<int32, [2]> var_7033 = const()[name = tensor<string, []>("op_7033"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7035 = const()[name = tensor<string, []>("op_7035"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_259_pad_type_0 = const()[name = tensor<string, []>("hidden_states_259_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_259_pad_0 = const()[name = tensor<string, []>("hidden_states_259_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [640, 960, 3, 3]> up_blocks_2_resnets_2_conv1_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_2_conv1_weight_to_fp16"), val = tensor<fp16, [640, 960, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(746926528)))];
            tensor<fp16, [640]> up_blocks_2_resnets_2_conv1_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_2_conv1_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(757985792)))];
            tensor<fp16, [2, 640, 32, 32]> hidden_states_259_cast = conv(bias = up_blocks_2_resnets_2_conv1_bias_to_fp16, dilations = var_7035, groups = var_5930, pad = hidden_states_259_pad_0, pad_type = hidden_states_259_pad_type_0, strides = var_7033, weight = up_blocks_2_resnets_2_conv1_weight_to_fp16, x = input_423_cast);
            tensor<int32, [2]> var_7041 = const()[name = tensor<string, []>("op_7041"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7043 = const()[name = tensor<string, []>("op_7043"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> temb_37_pad_type_0 = const()[name = tensor<string, []>("temb_37_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> temb_37_pad_0 = const()[name = tensor<string, []>("temb_37_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 1280, 1, 1]> up_blocks_2_resnets_2_time_emb_proj_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_2_time_emb_proj_weight_to_fp16"), val = tensor<fp16, [640, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(757987136)))];
            tensor<fp16, [640]> up_blocks_2_resnets_2_time_emb_proj_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_2_time_emb_proj_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(759625600)))];
            tensor<fp16, [2, 640, 1, 1]> temb_37_cast = conv(bias = up_blocks_2_resnets_2_time_emb_proj_bias_to_fp16, dilations = var_7043, groups = var_5930, pad = temb_37_pad_0, pad_type = temb_37_pad_type_0, strides = var_7041, weight = up_blocks_2_resnets_2_time_emb_proj_weight_to_fp16, x = cast_12);
            tensor<fp16, [2, 640, 32, 32]> input_427_cast = add(x = hidden_states_259_cast, y = temb_37_cast);
            tensor<int32, [5]> reshape_196_shape_0 = const()[name = tensor<string, []>("reshape_196_shape_0"), val = tensor<int32, [5]>([2, 32, 20, 32, 32])];
            tensor<fp16, [2, 32, 20, 32, 32]> reshape_196_cast = reshape(shape = reshape_196_shape_0, x = input_427_cast);
            tensor<int32, [3]> reduce_mean_147_axes_0 = const()[name = tensor<string, []>("reduce_mean_147_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_147_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_147_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_147_cast = reduce_mean(axes = reduce_mean_147_axes_0, keep_dims = reduce_mean_147_keep_dims_0, x = reshape_196_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> sub_98_cast = sub(x = reshape_196_cast, y = reduce_mean_147_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> square_49_cast = square(x = sub_98_cast);
            tensor<int32, [3]> reduce_mean_149_axes_0 = const()[name = tensor<string, []>("reduce_mean_149_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_149_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_149_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_149_cast = reduce_mean(axes = reduce_mean_149_axes_0, keep_dims = reduce_mean_149_keep_dims_0, x = square_49_cast);
            tensor<fp16, []> add_98_y_0_to_fp16 = const()[name = tensor<string, []>("add_98_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_98_cast = add(x = reduce_mean_149_cast, y = add_98_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_49_cast = sqrt(x = add_98_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> real_div_49_cast = real_div(x = sub_98_cast, y = sqrt_49_cast);
            tensor<int32, [4]> reshape_197_shape_0 = const()[name = tensor<string, []>("reshape_197_shape_0"), val = tensor<int32, [4]>([2, 640, 32, 32])];
            tensor<fp16, [2, 640, 32, 32]> reshape_197_cast = reshape(shape = reshape_197_shape_0, x = real_div_49_cast);
            tensor<fp16, [640]> add_99_mean_0_to_fp16 = const()[name = tensor<string, []>("add_99_mean_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(759626944)))];
            tensor<fp16, [640]> add_99_variance_0_to_fp16 = const()[name = tensor<string, []>("add_99_variance_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(759628288)))];
            tensor<fp16, [640]> add_99_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_99_gamma_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(759629632)))];
            tensor<fp16, [640]> add_99_beta_0_to_fp16 = const()[name = tensor<string, []>("add_99_beta_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(759630976)))];
            tensor<fp16, []> add_99_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_99_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 640, 32, 32]> add_99_cast = batch_norm(beta = add_99_beta_0_to_fp16, epsilon = add_99_epsilon_0_to_fp16, gamma = add_99_gamma_0_to_fp16, mean = add_99_mean_0_to_fp16, variance = add_99_variance_0_to_fp16, x = reshape_197_cast);
            tensor<fp16, [2, 640, 32, 32]> input_431_cast = silu(x = add_99_cast);
            tensor<int32, [2]> var_7053 = const()[name = tensor<string, []>("op_7053"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7055 = const()[name = tensor<string, []>("op_7055"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_261_pad_type_0 = const()[name = tensor<string, []>("hidden_states_261_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_261_pad_0 = const()[name = tensor<string, []>("hidden_states_261_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [640, 640, 3, 3]> up_blocks_2_resnets_2_conv2_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_2_conv2_weight_to_fp16"), val = tensor<fp16, [640, 640, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(759632320)))];
            tensor<fp16, [640]> up_blocks_2_resnets_2_conv2_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_2_conv2_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(767005184)))];
            tensor<fp16, [2, 640, 32, 32]> hidden_states_261_cast = conv(bias = up_blocks_2_resnets_2_conv2_bias_to_fp16, dilations = var_7055, groups = var_5930, pad = hidden_states_261_pad_0, pad_type = hidden_states_261_pad_type_0, strides = var_7053, weight = up_blocks_2_resnets_2_conv2_weight_to_fp16, x = input_431_cast);
            tensor<int32, [2]> var_7060 = const()[name = tensor<string, []>("op_7060"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7062 = const()[name = tensor<string, []>("op_7062"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_21_pad_type_0 = const()[name = tensor<string, []>("x_21_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_21_pad_0 = const()[name = tensor<string, []>("x_21_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 960, 1, 1]> up_blocks_2_resnets_2_conv_shortcut_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_2_conv_shortcut_weight_to_fp16"), val = tensor<fp16, [640, 960, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(767006528)))];
            tensor<fp16, [640]> up_blocks_2_resnets_2_conv_shortcut_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_2_conv_shortcut_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(768235392)))];
            tensor<fp16, [2, 640, 32, 32]> x_21_cast = conv(bias = up_blocks_2_resnets_2_conv_shortcut_bias_to_fp16, dilations = var_7062, groups = var_5930, pad = x_21_pad_0, pad_type = x_21_pad_type_0, strides = var_7060, weight = up_blocks_2_resnets_2_conv_shortcut_weight_to_fp16, x = input_419_cast);
            tensor<fp16, [2, 640, 32, 32]> hidden_states_263_cast = add(x = x_21_cast, y = hidden_states_261_cast);
            tensor<int32, [5]> reshape_200_shape_0 = const()[name = tensor<string, []>("reshape_200_shape_0"), val = tensor<int32, [5]>([2, 32, 20, 32, 32])];
            tensor<fp16, [2, 32, 20, 32, 32]> reshape_200_cast = reshape(shape = reshape_200_shape_0, x = hidden_states_263_cast);
            tensor<int32, [3]> reduce_mean_150_axes_0 = const()[name = tensor<string, []>("reduce_mean_150_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_150_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_150_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_150_cast = reduce_mean(axes = reduce_mean_150_axes_0, keep_dims = reduce_mean_150_keep_dims_0, x = reshape_200_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> sub_100_cast = sub(x = reshape_200_cast, y = reduce_mean_150_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> square_50_cast = square(x = sub_100_cast);
            tensor<int32, [3]> reduce_mean_152_axes_0 = const()[name = tensor<string, []>("reduce_mean_152_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_152_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_152_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_152_cast = reduce_mean(axes = reduce_mean_152_axes_0, keep_dims = reduce_mean_152_keep_dims_0, x = square_50_cast);
            tensor<fp16, []> add_100_y_0_to_fp16 = const()[name = tensor<string, []>("add_100_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_100_cast = add(x = reduce_mean_152_cast, y = add_100_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_50_cast = sqrt(x = add_100_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> real_div_50_cast = real_div(x = sub_100_cast, y = sqrt_50_cast);
            tensor<int32, [4]> reshape_201_shape_0 = const()[name = tensor<string, []>("reshape_201_shape_0"), val = tensor<int32, [4]>([2, 640, 32, 32])];
            tensor<fp16, [2, 640, 32, 32]> reshape_201_cast = reshape(shape = reshape_201_shape_0, x = real_div_50_cast);
            tensor<fp16, [640]> add_101_mean_0_to_fp16 = const()[name = tensor<string, []>("add_101_mean_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(768236736)))];
            tensor<fp16, [640]> add_101_variance_0_to_fp16 = const()[name = tensor<string, []>("add_101_variance_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(768238080)))];
            tensor<fp16, [640]> add_101_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_101_gamma_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(768239424)))];
            tensor<fp16, [640]> add_101_beta_0_to_fp16 = const()[name = tensor<string, []>("add_101_beta_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(768240768)))];
            tensor<fp16, []> add_101_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_101_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 640, 32, 32]> add_101_cast = batch_norm(beta = add_101_beta_0_to_fp16, epsilon = add_101_epsilon_0_to_fp16, gamma = add_101_gamma_0_to_fp16, mean = add_101_mean_0_to_fp16, variance = add_101_variance_0_to_fp16, x = reshape_201_cast);
            tensor<int32, [2]> var_7082 = const()[name = tensor<string, []>("op_7082"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7084 = const()[name = tensor<string, []>("op_7084"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_265_pad_type_0 = const()[name = tensor<string, []>("hidden_states_265_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_265_pad_0 = const()[name = tensor<string, []>("hidden_states_265_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_2_proj_in_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_2_proj_in_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(768242112)))];
            tensor<fp16, [640]> up_blocks_2_attentions_2_proj_in_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_2_proj_in_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(769061376)))];
            tensor<fp16, [2, 640, 32, 32]> hidden_states_265_cast = conv(bias = up_blocks_2_attentions_2_proj_in_bias_to_fp16, dilations = var_7084, groups = var_5930, pad = hidden_states_265_pad_0, pad_type = hidden_states_265_pad_type_0, strides = var_7082, weight = up_blocks_2_attentions_2_proj_in_weight_to_fp16, x = add_101_cast);
            tensor<int32, [4]> var_7089 = const()[name = tensor<string, []>("op_7089"), val = tensor<int32, [4]>([2, 640, 1, 1024])];
            tensor<fp16, [2, 640, 1, 1024]> inputs_73_cast = reshape(shape = var_7089, x = hidden_states_265_cast);
            tensor<int32, [1]> var_7099 = const()[name = tensor<string, []>("op_7099"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> channels_mean_73_cast = reduce_mean(axes = var_7099, keep_dims = var_5925, x = inputs_73_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_73_cast = sub(x = inputs_73_cast, y = channels_mean_73_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_sq_73_cast = mul(x = zero_mean_73_cast, y = zero_mean_73_cast);
            tensor<int32, [1]> var_7103 = const()[name = tensor<string, []>("op_7103"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> var_7104_cast = reduce_mean(axes = var_7103, keep_dims = var_5925, x = zero_mean_sq_73_cast);
            tensor<fp16, []> var_7105_to_fp16 = const()[name = tensor<string, []>("op_7105_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 1024]> var_7106_cast = add(x = var_7104_cast, y = var_7105_to_fp16);
            tensor<fp16, []> denom_73_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_73_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 1024]> denom_73_cast = rsqrt(epsilon = denom_73_epsilon_0_to_fp16, x = var_7106_cast);
            tensor<fp16, [2, 640, 1, 1024]> out_73_cast = mul(x = zero_mean_73_cast, y = denom_73_cast);
            tensor<fp16, [1, 640, 1, 1]> var_7110_to_fp16 = const()[name = tensor<string, []>("op_7110_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(769062720)))];
            tensor<fp16, [2, 640, 1, 1024]> var_7111_cast = add(x = out_73_cast, y = var_7110_to_fp16);
            tensor<fp16, [1, 640, 1, 1]> var_7113_to_fp16 = const()[name = tensor<string, []>("op_7113_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(769064064)))];
            tensor<fp16, [2, 640, 1, 1024]> hidden_states_267_cast = mul(x = var_7111_cast, y = var_7113_to_fp16);
            tensor<int32, [2]> var_7120 = const()[name = tensor<string, []>("op_7120"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7122 = const()[name = tensor<string, []>("op_7122"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_49_pad_type_0 = const()[name = tensor<string, []>("q_49_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_49_pad_0 = const()[name = tensor<string, []>("q_49_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_2_transformer_blocks_0_attn1_to_q_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_2_transformer_blocks_0_attn1_to_q_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(769065408)))];
            tensor<fp16, [2, 640, 1, 1024]> q_49_cast = conv(dilations = var_7122, groups = var_5930, pad = q_49_pad_0, pad_type = q_49_pad_type_0, strides = var_7120, weight = up_blocks_2_attentions_2_transformer_blocks_0_attn1_to_q_weight_to_fp16, x = hidden_states_267_cast);
            tensor<int32, [2]> var_7126 = const()[name = tensor<string, []>("op_7126"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7128 = const()[name = tensor<string, []>("op_7128"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_97_pad_type_0 = const()[name = tensor<string, []>("k_97_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_97_pad_0 = const()[name = tensor<string, []>("k_97_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_2_transformer_blocks_0_attn1_to_k_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_2_transformer_blocks_0_attn1_to_k_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(769884672)))];
            tensor<fp16, [2, 640, 1, 1024]> k_97_cast = conv(dilations = var_7128, groups = var_5930, pad = k_97_pad_0, pad_type = k_97_pad_type_0, strides = var_7126, weight = up_blocks_2_attentions_2_transformer_blocks_0_attn1_to_k_weight_to_fp16, x = hidden_states_267_cast);
            tensor<int32, [2]> var_7132 = const()[name = tensor<string, []>("op_7132"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7134 = const()[name = tensor<string, []>("op_7134"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_49_pad_type_0 = const()[name = tensor<string, []>("v_49_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_49_pad_0 = const()[name = tensor<string, []>("v_49_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_2_transformer_blocks_0_attn1_to_v_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_2_transformer_blocks_0_attn1_to_v_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(770703936)))];
            tensor<fp16, [2, 640, 1, 1024]> v_49_cast = conv(dilations = var_7134, groups = var_5930, pad = v_49_pad_0, pad_type = v_49_pad_type_0, strides = var_7132, weight = up_blocks_2_attentions_2_transformer_blocks_0_attn1_to_v_weight_to_fp16, x = hidden_states_267_cast);
            tensor<int32, [4]> var_7138_begin_0 = const()[name = tensor<string, []>("op_7138_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_7138_end_0 = const()[name = tensor<string, []>("op_7138_end_0"), val = tensor<int32, [4]>([2, 80, 1, 1024])];
            tensor<bool, [4]> var_7138_end_mask_0 = const()[name = tensor<string, []>("op_7138_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_7138_cast = slice_by_index(begin = var_7138_begin_0, end = var_7138_end_0, end_mask = var_7138_end_mask_0, x = q_49_cast);
            tensor<int32, [4]> var_7142_begin_0 = const()[name = tensor<string, []>("op_7142_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_7142_end_0 = const()[name = tensor<string, []>("op_7142_end_0"), val = tensor<int32, [4]>([2, 160, 1, 1024])];
            tensor<bool, [4]> var_7142_end_mask_0 = const()[name = tensor<string, []>("op_7142_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_7142_cast = slice_by_index(begin = var_7142_begin_0, end = var_7142_end_0, end_mask = var_7142_end_mask_0, x = q_49_cast);
            tensor<int32, [4]> var_7146_begin_0 = const()[name = tensor<string, []>("op_7146_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_7146_end_0 = const()[name = tensor<string, []>("op_7146_end_0"), val = tensor<int32, [4]>([2, 240, 1, 1024])];
            tensor<bool, [4]> var_7146_end_mask_0 = const()[name = tensor<string, []>("op_7146_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_7146_cast = slice_by_index(begin = var_7146_begin_0, end = var_7146_end_0, end_mask = var_7146_end_mask_0, x = q_49_cast);
            tensor<int32, [4]> var_7150_begin_0 = const()[name = tensor<string, []>("op_7150_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_7150_end_0 = const()[name = tensor<string, []>("op_7150_end_0"), val = tensor<int32, [4]>([2, 320, 1, 1024])];
            tensor<bool, [4]> var_7150_end_mask_0 = const()[name = tensor<string, []>("op_7150_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_7150_cast = slice_by_index(begin = var_7150_begin_0, end = var_7150_end_0, end_mask = var_7150_end_mask_0, x = q_49_cast);
            tensor<int32, [4]> var_7154_begin_0 = const()[name = tensor<string, []>("op_7154_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_7154_end_0 = const()[name = tensor<string, []>("op_7154_end_0"), val = tensor<int32, [4]>([2, 400, 1, 1024])];
            tensor<bool, [4]> var_7154_end_mask_0 = const()[name = tensor<string, []>("op_7154_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_7154_cast = slice_by_index(begin = var_7154_begin_0, end = var_7154_end_0, end_mask = var_7154_end_mask_0, x = q_49_cast);
            tensor<int32, [4]> var_7158_begin_0 = const()[name = tensor<string, []>("op_7158_begin_0"), val = tensor<int32, [4]>([0, 400, 0, 0])];
            tensor<int32, [4]> var_7158_end_0 = const()[name = tensor<string, []>("op_7158_end_0"), val = tensor<int32, [4]>([2, 480, 1, 1024])];
            tensor<bool, [4]> var_7158_end_mask_0 = const()[name = tensor<string, []>("op_7158_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_7158_cast = slice_by_index(begin = var_7158_begin_0, end = var_7158_end_0, end_mask = var_7158_end_mask_0, x = q_49_cast);
            tensor<int32, [4]> var_7162_begin_0 = const()[name = tensor<string, []>("op_7162_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_7162_end_0 = const()[name = tensor<string, []>("op_7162_end_0"), val = tensor<int32, [4]>([2, 560, 1, 1024])];
            tensor<bool, [4]> var_7162_end_mask_0 = const()[name = tensor<string, []>("op_7162_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_7162_cast = slice_by_index(begin = var_7162_begin_0, end = var_7162_end_0, end_mask = var_7162_end_mask_0, x = q_49_cast);
            tensor<int32, [4]> var_7166_begin_0 = const()[name = tensor<string, []>("op_7166_begin_0"), val = tensor<int32, [4]>([0, 560, 0, 0])];
            tensor<int32, [4]> var_7166_end_0 = const()[name = tensor<string, []>("op_7166_end_0"), val = tensor<int32, [4]>([2, 640, 1, 1024])];
            tensor<bool, [4]> var_7166_end_mask_0 = const()[name = tensor<string, []>("op_7166_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_7166_cast = slice_by_index(begin = var_7166_begin_0, end = var_7166_end_0, end_mask = var_7166_end_mask_0, x = q_49_cast);
            tensor<int32, [4]> k_99_perm_0 = const()[name = tensor<string, []>("k_99_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_7173_begin_0 = const()[name = tensor<string, []>("op_7173_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_7173_end_0 = const()[name = tensor<string, []>("op_7173_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 80])];
            tensor<bool, [4]> var_7173_end_mask_0 = const()[name = tensor<string, []>("op_7173_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 640]> transpose_7 = transpose(perm = k_99_perm_0, x = k_97_cast);
            tensor<fp16, [2, 1024, 1, 80]> var_7173_cast = slice_by_index(begin = var_7173_begin_0, end = var_7173_end_0, end_mask = var_7173_end_mask_0, x = transpose_7);
            tensor<int32, [4]> var_7177_begin_0 = const()[name = tensor<string, []>("op_7177_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 80])];
            tensor<int32, [4]> var_7177_end_0 = const()[name = tensor<string, []>("op_7177_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 160])];
            tensor<bool, [4]> var_7177_end_mask_0 = const()[name = tensor<string, []>("op_7177_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_7177_cast = slice_by_index(begin = var_7177_begin_0, end = var_7177_end_0, end_mask = var_7177_end_mask_0, x = transpose_7);
            tensor<int32, [4]> var_7181_begin_0 = const()[name = tensor<string, []>("op_7181_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 160])];
            tensor<int32, [4]> var_7181_end_0 = const()[name = tensor<string, []>("op_7181_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 240])];
            tensor<bool, [4]> var_7181_end_mask_0 = const()[name = tensor<string, []>("op_7181_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_7181_cast = slice_by_index(begin = var_7181_begin_0, end = var_7181_end_0, end_mask = var_7181_end_mask_0, x = transpose_7);
            tensor<int32, [4]> var_7185_begin_0 = const()[name = tensor<string, []>("op_7185_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 240])];
            tensor<int32, [4]> var_7185_end_0 = const()[name = tensor<string, []>("op_7185_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 320])];
            tensor<bool, [4]> var_7185_end_mask_0 = const()[name = tensor<string, []>("op_7185_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_7185_cast = slice_by_index(begin = var_7185_begin_0, end = var_7185_end_0, end_mask = var_7185_end_mask_0, x = transpose_7);
            tensor<int32, [4]> var_7189_begin_0 = const()[name = tensor<string, []>("op_7189_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_7189_end_0 = const()[name = tensor<string, []>("op_7189_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 400])];
            tensor<bool, [4]> var_7189_end_mask_0 = const()[name = tensor<string, []>("op_7189_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_7189_cast = slice_by_index(begin = var_7189_begin_0, end = var_7189_end_0, end_mask = var_7189_end_mask_0, x = transpose_7);
            tensor<int32, [4]> var_7193_begin_0 = const()[name = tensor<string, []>("op_7193_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 400])];
            tensor<int32, [4]> var_7193_end_0 = const()[name = tensor<string, []>("op_7193_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 480])];
            tensor<bool, [4]> var_7193_end_mask_0 = const()[name = tensor<string, []>("op_7193_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_7193_cast = slice_by_index(begin = var_7193_begin_0, end = var_7193_end_0, end_mask = var_7193_end_mask_0, x = transpose_7);
            tensor<int32, [4]> var_7197_begin_0 = const()[name = tensor<string, []>("op_7197_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 480])];
            tensor<int32, [4]> var_7197_end_0 = const()[name = tensor<string, []>("op_7197_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 560])];
            tensor<bool, [4]> var_7197_end_mask_0 = const()[name = tensor<string, []>("op_7197_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_7197_cast = slice_by_index(begin = var_7197_begin_0, end = var_7197_end_0, end_mask = var_7197_end_mask_0, x = transpose_7);
            tensor<int32, [4]> var_7201_begin_0 = const()[name = tensor<string, []>("op_7201_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 560])];
            tensor<int32, [4]> var_7201_end_0 = const()[name = tensor<string, []>("op_7201_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 640])];
            tensor<bool, [4]> var_7201_end_mask_0 = const()[name = tensor<string, []>("op_7201_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_7201_cast = slice_by_index(begin = var_7201_begin_0, end = var_7201_end_0, end_mask = var_7201_end_mask_0, x = transpose_7);
            tensor<int32, [4]> var_7203_begin_0 = const()[name = tensor<string, []>("op_7203_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_7203_end_0 = const()[name = tensor<string, []>("op_7203_end_0"), val = tensor<int32, [4]>([2, 80, 1, 1024])];
            tensor<bool, [4]> var_7203_end_mask_0 = const()[name = tensor<string, []>("op_7203_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_7203_cast = slice_by_index(begin = var_7203_begin_0, end = var_7203_end_0, end_mask = var_7203_end_mask_0, x = v_49_cast);
            tensor<int32, [4]> var_7207_begin_0 = const()[name = tensor<string, []>("op_7207_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_7207_end_0 = const()[name = tensor<string, []>("op_7207_end_0"), val = tensor<int32, [4]>([2, 160, 1, 1024])];
            tensor<bool, [4]> var_7207_end_mask_0 = const()[name = tensor<string, []>("op_7207_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_7207_cast = slice_by_index(begin = var_7207_begin_0, end = var_7207_end_0, end_mask = var_7207_end_mask_0, x = v_49_cast);
            tensor<int32, [4]> var_7211_begin_0 = const()[name = tensor<string, []>("op_7211_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_7211_end_0 = const()[name = tensor<string, []>("op_7211_end_0"), val = tensor<int32, [4]>([2, 240, 1, 1024])];
            tensor<bool, [4]> var_7211_end_mask_0 = const()[name = tensor<string, []>("op_7211_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_7211_cast = slice_by_index(begin = var_7211_begin_0, end = var_7211_end_0, end_mask = var_7211_end_mask_0, x = v_49_cast);
            tensor<int32, [4]> var_7215_begin_0 = const()[name = tensor<string, []>("op_7215_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_7215_end_0 = const()[name = tensor<string, []>("op_7215_end_0"), val = tensor<int32, [4]>([2, 320, 1, 1024])];
            tensor<bool, [4]> var_7215_end_mask_0 = const()[name = tensor<string, []>("op_7215_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_7215_cast = slice_by_index(begin = var_7215_begin_0, end = var_7215_end_0, end_mask = var_7215_end_mask_0, x = v_49_cast);
            tensor<int32, [4]> var_7219_begin_0 = const()[name = tensor<string, []>("op_7219_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_7219_end_0 = const()[name = tensor<string, []>("op_7219_end_0"), val = tensor<int32, [4]>([2, 400, 1, 1024])];
            tensor<bool, [4]> var_7219_end_mask_0 = const()[name = tensor<string, []>("op_7219_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_7219_cast = slice_by_index(begin = var_7219_begin_0, end = var_7219_end_0, end_mask = var_7219_end_mask_0, x = v_49_cast);
            tensor<int32, [4]> var_7223_begin_0 = const()[name = tensor<string, []>("op_7223_begin_0"), val = tensor<int32, [4]>([0, 400, 0, 0])];
            tensor<int32, [4]> var_7223_end_0 = const()[name = tensor<string, []>("op_7223_end_0"), val = tensor<int32, [4]>([2, 480, 1, 1024])];
            tensor<bool, [4]> var_7223_end_mask_0 = const()[name = tensor<string, []>("op_7223_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_7223_cast = slice_by_index(begin = var_7223_begin_0, end = var_7223_end_0, end_mask = var_7223_end_mask_0, x = v_49_cast);
            tensor<int32, [4]> var_7227_begin_0 = const()[name = tensor<string, []>("op_7227_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_7227_end_0 = const()[name = tensor<string, []>("op_7227_end_0"), val = tensor<int32, [4]>([2, 560, 1, 1024])];
            tensor<bool, [4]> var_7227_end_mask_0 = const()[name = tensor<string, []>("op_7227_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_7227_cast = slice_by_index(begin = var_7227_begin_0, end = var_7227_end_0, end_mask = var_7227_end_mask_0, x = v_49_cast);
            tensor<int32, [4]> var_7231_begin_0 = const()[name = tensor<string, []>("op_7231_begin_0"), val = tensor<int32, [4]>([0, 560, 0, 0])];
            tensor<int32, [4]> var_7231_end_0 = const()[name = tensor<string, []>("op_7231_end_0"), val = tensor<int32, [4]>([2, 640, 1, 1024])];
            tensor<bool, [4]> var_7231_end_mask_0 = const()[name = tensor<string, []>("op_7231_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_7231_cast = slice_by_index(begin = var_7231_begin_0, end = var_7231_end_0, end_mask = var_7231_end_mask_0, x = v_49_cast);
            tensor<string, []> var_7235_equation_0 = const()[name = tensor<string, []>("op_7235_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_7235_cast = einsum(equation = var_7235_equation_0, values = (var_7173_cast, var_7138_cast));
            tensor<fp16, []> var_7236_to_fp16 = const()[name = tensor<string, []>("op_7236_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_385_cast = mul(x = var_7235_cast, y = var_7236_to_fp16);
            tensor<string, []> var_7239_equation_0 = const()[name = tensor<string, []>("op_7239_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_7239_cast = einsum(equation = var_7239_equation_0, values = (var_7177_cast, var_7142_cast));
            tensor<fp16, []> var_7240_to_fp16 = const()[name = tensor<string, []>("op_7240_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_387_cast = mul(x = var_7239_cast, y = var_7240_to_fp16);
            tensor<string, []> var_7243_equation_0 = const()[name = tensor<string, []>("op_7243_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_7243_cast = einsum(equation = var_7243_equation_0, values = (var_7181_cast, var_7146_cast));
            tensor<fp16, []> var_7244_to_fp16 = const()[name = tensor<string, []>("op_7244_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_389_cast = mul(x = var_7243_cast, y = var_7244_to_fp16);
            tensor<string, []> var_7247_equation_0 = const()[name = tensor<string, []>("op_7247_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_7247_cast = einsum(equation = var_7247_equation_0, values = (var_7185_cast, var_7150_cast));
            tensor<fp16, []> var_7248_to_fp16 = const()[name = tensor<string, []>("op_7248_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_391_cast = mul(x = var_7247_cast, y = var_7248_to_fp16);
            tensor<string, []> var_7251_equation_0 = const()[name = tensor<string, []>("op_7251_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_7251_cast = einsum(equation = var_7251_equation_0, values = (var_7189_cast, var_7154_cast));
            tensor<fp16, []> var_7252_to_fp16 = const()[name = tensor<string, []>("op_7252_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_393_cast = mul(x = var_7251_cast, y = var_7252_to_fp16);
            tensor<string, []> var_7255_equation_0 = const()[name = tensor<string, []>("op_7255_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_7255_cast = einsum(equation = var_7255_equation_0, values = (var_7193_cast, var_7158_cast));
            tensor<fp16, []> var_7256_to_fp16 = const()[name = tensor<string, []>("op_7256_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_395_cast = mul(x = var_7255_cast, y = var_7256_to_fp16);
            tensor<string, []> var_7259_equation_0 = const()[name = tensor<string, []>("op_7259_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_7259_cast = einsum(equation = var_7259_equation_0, values = (var_7197_cast, var_7162_cast));
            tensor<fp16, []> var_7260_to_fp16 = const()[name = tensor<string, []>("op_7260_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_397_cast = mul(x = var_7259_cast, y = var_7260_to_fp16);
            tensor<string, []> var_7263_equation_0 = const()[name = tensor<string, []>("op_7263_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_7263_cast = einsum(equation = var_7263_equation_0, values = (var_7201_cast, var_7166_cast));
            tensor<fp16, []> var_7264_to_fp16 = const()[name = tensor<string, []>("op_7264_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_399_cast = mul(x = var_7263_cast, y = var_7264_to_fp16);
            tensor<fp16, [2, 1024, 1, 1024]> var_7266_cast = softmax(axis = var_5930, x = aw_385_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_7267_cast = softmax(axis = var_5930, x = aw_387_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_7268_cast = softmax(axis = var_5930, x = aw_389_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_7269_cast = softmax(axis = var_5930, x = aw_391_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_7270_cast = softmax(axis = var_5930, x = aw_393_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_7271_cast = softmax(axis = var_5930, x = aw_395_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_7272_cast = softmax(axis = var_5930, x = aw_397_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_7273_cast = softmax(axis = var_5930, x = aw_399_cast);
            tensor<string, []> var_7275_equation_0 = const()[name = tensor<string, []>("op_7275_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_7275_cast = einsum(equation = var_7275_equation_0, values = (var_7203_cast, var_7266_cast));
            tensor<string, []> var_7277_equation_0 = const()[name = tensor<string, []>("op_7277_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_7277_cast = einsum(equation = var_7277_equation_0, values = (var_7207_cast, var_7267_cast));
            tensor<string, []> var_7279_equation_0 = const()[name = tensor<string, []>("op_7279_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_7279_cast = einsum(equation = var_7279_equation_0, values = (var_7211_cast, var_7268_cast));
            tensor<string, []> var_7281_equation_0 = const()[name = tensor<string, []>("op_7281_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_7281_cast = einsum(equation = var_7281_equation_0, values = (var_7215_cast, var_7269_cast));
            tensor<string, []> var_7283_equation_0 = const()[name = tensor<string, []>("op_7283_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_7283_cast = einsum(equation = var_7283_equation_0, values = (var_7219_cast, var_7270_cast));
            tensor<string, []> var_7285_equation_0 = const()[name = tensor<string, []>("op_7285_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_7285_cast = einsum(equation = var_7285_equation_0, values = (var_7223_cast, var_7271_cast));
            tensor<string, []> var_7287_equation_0 = const()[name = tensor<string, []>("op_7287_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_7287_cast = einsum(equation = var_7287_equation_0, values = (var_7227_cast, var_7272_cast));
            tensor<string, []> var_7289_equation_0 = const()[name = tensor<string, []>("op_7289_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_7289_cast = einsum(equation = var_7289_equation_0, values = (var_7231_cast, var_7273_cast));
            tensor<bool, []> input_435_interleave_0 = const()[name = tensor<string, []>("input_435_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 640, 1, 1024]> input_435_cast = concat(axis = var_5930, interleave = input_435_interleave_0, values = (var_7275_cast, var_7277_cast, var_7279_cast, var_7281_cast, var_7283_cast, var_7285_cast, var_7287_cast, var_7289_cast));
            tensor<int32, [2]> var_7295 = const()[name = tensor<string, []>("op_7295"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7297 = const()[name = tensor<string, []>("op_7297"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_7299_pad_type_0 = const()[name = tensor<string, []>("op_7299_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_7299_pad_0 = const()[name = tensor<string, []>("op_7299_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_2_transformer_blocks_0_attn1_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_2_transformer_blocks_0_attn1_to_out_0_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(771523200)))];
            tensor<fp16, [640]> up_blocks_2_attentions_2_transformer_blocks_0_attn1_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_2_transformer_blocks_0_attn1_to_out_0_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(772342464)))];
            tensor<fp16, [2, 640, 1, 1024]> var_7299_cast = conv(bias = up_blocks_2_attentions_2_transformer_blocks_0_attn1_to_out_0_bias_to_fp16, dilations = var_7297, groups = var_5930, pad = var_7299_pad_0, pad_type = var_7299_pad_type_0, strides = var_7295, weight = up_blocks_2_attentions_2_transformer_blocks_0_attn1_to_out_0_weight_to_fp16, x = input_435_cast);
            tensor<fp16, [2, 640, 1, 1024]> inputs_75_cast = add(x = var_7299_cast, y = inputs_73_cast);
            tensor<int32, [1]> var_7303 = const()[name = tensor<string, []>("op_7303"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> channels_mean_75_cast = reduce_mean(axes = var_7303, keep_dims = var_5925, x = inputs_75_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_75_cast = sub(x = inputs_75_cast, y = channels_mean_75_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_sq_75_cast = mul(x = zero_mean_75_cast, y = zero_mean_75_cast);
            tensor<int32, [1]> var_7307 = const()[name = tensor<string, []>("op_7307"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> var_7308_cast = reduce_mean(axes = var_7307, keep_dims = var_5925, x = zero_mean_sq_75_cast);
            tensor<fp16, []> var_7309_to_fp16 = const()[name = tensor<string, []>("op_7309_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 1024]> var_7310_cast = add(x = var_7308_cast, y = var_7309_to_fp16);
            tensor<fp16, []> denom_75_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_75_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 1024]> denom_75_cast = rsqrt(epsilon = denom_75_epsilon_0_to_fp16, x = var_7310_cast);
            tensor<fp16, [2, 640, 1, 1024]> out_75_cast = mul(x = zero_mean_75_cast, y = denom_75_cast);
            tensor<fp16, [1, 640, 1, 1]> var_7314_to_fp16 = const()[name = tensor<string, []>("op_7314_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(772343808)))];
            tensor<fp16, [2, 640, 1, 1024]> var_7315_cast = add(x = out_75_cast, y = var_7314_to_fp16);
            tensor<fp16, [1, 640, 1, 1]> var_7317_to_fp16 = const()[name = tensor<string, []>("op_7317_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(772345152)))];
            tensor<fp16, [2, 640, 1, 1024]> hidden_states_269_cast = mul(x = var_7315_cast, y = var_7317_to_fp16);
            tensor<int32, [2]> var_7324 = const()[name = tensor<string, []>("op_7324"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7326 = const()[name = tensor<string, []>("op_7326"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_51_pad_type_0 = const()[name = tensor<string, []>("q_51_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_51_pad_0 = const()[name = tensor<string, []>("q_51_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_2_transformer_blocks_0_attn2_to_q_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_2_transformer_blocks_0_attn2_to_q_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(772346496)))];
            tensor<fp16, [2, 640, 1, 1024]> q_51_cast = conv(dilations = var_7326, groups = var_5930, pad = q_51_pad_0, pad_type = q_51_pad_type_0, strides = var_7324, weight = up_blocks_2_attentions_2_transformer_blocks_0_attn2_to_q_weight_to_fp16, x = hidden_states_269_cast);
            tensor<int32, [2]> var_7330 = const()[name = tensor<string, []>("op_7330"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7332 = const()[name = tensor<string, []>("op_7332"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_101_pad_type_0 = const()[name = tensor<string, []>("k_101_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_101_pad_0 = const()[name = tensor<string, []>("k_101_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 768, 1, 1]> up_blocks_2_attentions_2_transformer_blocks_0_attn2_to_k_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_2_transformer_blocks_0_attn2_to_k_weight_to_fp16"), val = tensor<fp16, [640, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(773165760)))];
            tensor<fp16, [2, 640, 1, 77]> k_101_cast = conv(dilations = var_7332, groups = var_5930, pad = k_101_pad_0, pad_type = k_101_pad_type_0, strides = var_7330, weight = up_blocks_2_attentions_2_transformer_blocks_0_attn2_to_k_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [2]> var_7336 = const()[name = tensor<string, []>("op_7336"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7338 = const()[name = tensor<string, []>("op_7338"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_51_pad_type_0 = const()[name = tensor<string, []>("v_51_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_51_pad_0 = const()[name = tensor<string, []>("v_51_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 768, 1, 1]> up_blocks_2_attentions_2_transformer_blocks_0_attn2_to_v_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_2_transformer_blocks_0_attn2_to_v_weight_to_fp16"), val = tensor<fp16, [640, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(774148864)))];
            tensor<fp16, [2, 640, 1, 77]> v_51_cast = conv(dilations = var_7338, groups = var_5930, pad = v_51_pad_0, pad_type = v_51_pad_type_0, strides = var_7336, weight = up_blocks_2_attentions_2_transformer_blocks_0_attn2_to_v_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [4]> var_7342_begin_0 = const()[name = tensor<string, []>("op_7342_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_7342_end_0 = const()[name = tensor<string, []>("op_7342_end_0"), val = tensor<int32, [4]>([2, 80, 1, 1024])];
            tensor<bool, [4]> var_7342_end_mask_0 = const()[name = tensor<string, []>("op_7342_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_7342_cast = slice_by_index(begin = var_7342_begin_0, end = var_7342_end_0, end_mask = var_7342_end_mask_0, x = q_51_cast);
            tensor<int32, [4]> var_7346_begin_0 = const()[name = tensor<string, []>("op_7346_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_7346_end_0 = const()[name = tensor<string, []>("op_7346_end_0"), val = tensor<int32, [4]>([2, 160, 1, 1024])];
            tensor<bool, [4]> var_7346_end_mask_0 = const()[name = tensor<string, []>("op_7346_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_7346_cast = slice_by_index(begin = var_7346_begin_0, end = var_7346_end_0, end_mask = var_7346_end_mask_0, x = q_51_cast);
            tensor<int32, [4]> var_7350_begin_0 = const()[name = tensor<string, []>("op_7350_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_7350_end_0 = const()[name = tensor<string, []>("op_7350_end_0"), val = tensor<int32, [4]>([2, 240, 1, 1024])];
            tensor<bool, [4]> var_7350_end_mask_0 = const()[name = tensor<string, []>("op_7350_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_7350_cast = slice_by_index(begin = var_7350_begin_0, end = var_7350_end_0, end_mask = var_7350_end_mask_0, x = q_51_cast);
            tensor<int32, [4]> var_7354_begin_0 = const()[name = tensor<string, []>("op_7354_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_7354_end_0 = const()[name = tensor<string, []>("op_7354_end_0"), val = tensor<int32, [4]>([2, 320, 1, 1024])];
            tensor<bool, [4]> var_7354_end_mask_0 = const()[name = tensor<string, []>("op_7354_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_7354_cast = slice_by_index(begin = var_7354_begin_0, end = var_7354_end_0, end_mask = var_7354_end_mask_0, x = q_51_cast);
            tensor<int32, [4]> var_7358_begin_0 = const()[name = tensor<string, []>("op_7358_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_7358_end_0 = const()[name = tensor<string, []>("op_7358_end_0"), val = tensor<int32, [4]>([2, 400, 1, 1024])];
            tensor<bool, [4]> var_7358_end_mask_0 = const()[name = tensor<string, []>("op_7358_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_7358_cast = slice_by_index(begin = var_7358_begin_0, end = var_7358_end_0, end_mask = var_7358_end_mask_0, x = q_51_cast);
            tensor<int32, [4]> var_7362_begin_0 = const()[name = tensor<string, []>("op_7362_begin_0"), val = tensor<int32, [4]>([0, 400, 0, 0])];
            tensor<int32, [4]> var_7362_end_0 = const()[name = tensor<string, []>("op_7362_end_0"), val = tensor<int32, [4]>([2, 480, 1, 1024])];
            tensor<bool, [4]> var_7362_end_mask_0 = const()[name = tensor<string, []>("op_7362_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_7362_cast = slice_by_index(begin = var_7362_begin_0, end = var_7362_end_0, end_mask = var_7362_end_mask_0, x = q_51_cast);
            tensor<int32, [4]> var_7366_begin_0 = const()[name = tensor<string, []>("op_7366_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_7366_end_0 = const()[name = tensor<string, []>("op_7366_end_0"), val = tensor<int32, [4]>([2, 560, 1, 1024])];
            tensor<bool, [4]> var_7366_end_mask_0 = const()[name = tensor<string, []>("op_7366_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_7366_cast = slice_by_index(begin = var_7366_begin_0, end = var_7366_end_0, end_mask = var_7366_end_mask_0, x = q_51_cast);
            tensor<int32, [4]> var_7370_begin_0 = const()[name = tensor<string, []>("op_7370_begin_0"), val = tensor<int32, [4]>([0, 560, 0, 0])];
            tensor<int32, [4]> var_7370_end_0 = const()[name = tensor<string, []>("op_7370_end_0"), val = tensor<int32, [4]>([2, 640, 1, 1024])];
            tensor<bool, [4]> var_7370_end_mask_0 = const()[name = tensor<string, []>("op_7370_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_7370_cast = slice_by_index(begin = var_7370_begin_0, end = var_7370_end_0, end_mask = var_7370_end_mask_0, x = q_51_cast);
            tensor<int32, [4]> k_103_perm_0 = const()[name = tensor<string, []>("k_103_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_7377_begin_0 = const()[name = tensor<string, []>("op_7377_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_7377_end_0 = const()[name = tensor<string, []>("op_7377_end_0"), val = tensor<int32, [4]>([2, 77, 1, 80])];
            tensor<bool, [4]> var_7377_end_mask_0 = const()[name = tensor<string, []>("op_7377_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 640]> transpose_6 = transpose(perm = k_103_perm_0, x = k_101_cast);
            tensor<fp16, [2, 77, 1, 80]> var_7377_cast = slice_by_index(begin = var_7377_begin_0, end = var_7377_end_0, end_mask = var_7377_end_mask_0, x = transpose_6);
            tensor<int32, [4]> var_7381_begin_0 = const()[name = tensor<string, []>("op_7381_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 80])];
            tensor<int32, [4]> var_7381_end_0 = const()[name = tensor<string, []>("op_7381_end_0"), val = tensor<int32, [4]>([2, 77, 1, 160])];
            tensor<bool, [4]> var_7381_end_mask_0 = const()[name = tensor<string, []>("op_7381_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_7381_cast = slice_by_index(begin = var_7381_begin_0, end = var_7381_end_0, end_mask = var_7381_end_mask_0, x = transpose_6);
            tensor<int32, [4]> var_7385_begin_0 = const()[name = tensor<string, []>("op_7385_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 160])];
            tensor<int32, [4]> var_7385_end_0 = const()[name = tensor<string, []>("op_7385_end_0"), val = tensor<int32, [4]>([2, 77, 1, 240])];
            tensor<bool, [4]> var_7385_end_mask_0 = const()[name = tensor<string, []>("op_7385_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_7385_cast = slice_by_index(begin = var_7385_begin_0, end = var_7385_end_0, end_mask = var_7385_end_mask_0, x = transpose_6);
            tensor<int32, [4]> var_7389_begin_0 = const()[name = tensor<string, []>("op_7389_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 240])];
            tensor<int32, [4]> var_7389_end_0 = const()[name = tensor<string, []>("op_7389_end_0"), val = tensor<int32, [4]>([2, 77, 1, 320])];
            tensor<bool, [4]> var_7389_end_mask_0 = const()[name = tensor<string, []>("op_7389_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_7389_cast = slice_by_index(begin = var_7389_begin_0, end = var_7389_end_0, end_mask = var_7389_end_mask_0, x = transpose_6);
            tensor<int32, [4]> var_7393_begin_0 = const()[name = tensor<string, []>("op_7393_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_7393_end_0 = const()[name = tensor<string, []>("op_7393_end_0"), val = tensor<int32, [4]>([2, 77, 1, 400])];
            tensor<bool, [4]> var_7393_end_mask_0 = const()[name = tensor<string, []>("op_7393_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_7393_cast = slice_by_index(begin = var_7393_begin_0, end = var_7393_end_0, end_mask = var_7393_end_mask_0, x = transpose_6);
            tensor<int32, [4]> var_7397_begin_0 = const()[name = tensor<string, []>("op_7397_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 400])];
            tensor<int32, [4]> var_7397_end_0 = const()[name = tensor<string, []>("op_7397_end_0"), val = tensor<int32, [4]>([2, 77, 1, 480])];
            tensor<bool, [4]> var_7397_end_mask_0 = const()[name = tensor<string, []>("op_7397_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_7397_cast = slice_by_index(begin = var_7397_begin_0, end = var_7397_end_0, end_mask = var_7397_end_mask_0, x = transpose_6);
            tensor<int32, [4]> var_7401_begin_0 = const()[name = tensor<string, []>("op_7401_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 480])];
            tensor<int32, [4]> var_7401_end_0 = const()[name = tensor<string, []>("op_7401_end_0"), val = tensor<int32, [4]>([2, 77, 1, 560])];
            tensor<bool, [4]> var_7401_end_mask_0 = const()[name = tensor<string, []>("op_7401_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_7401_cast = slice_by_index(begin = var_7401_begin_0, end = var_7401_end_0, end_mask = var_7401_end_mask_0, x = transpose_6);
            tensor<int32, [4]> var_7405_begin_0 = const()[name = tensor<string, []>("op_7405_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 560])];
            tensor<int32, [4]> var_7405_end_0 = const()[name = tensor<string, []>("op_7405_end_0"), val = tensor<int32, [4]>([2, 77, 1, 640])];
            tensor<bool, [4]> var_7405_end_mask_0 = const()[name = tensor<string, []>("op_7405_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_7405_cast = slice_by_index(begin = var_7405_begin_0, end = var_7405_end_0, end_mask = var_7405_end_mask_0, x = transpose_6);
            tensor<int32, [4]> var_7407_begin_0 = const()[name = tensor<string, []>("op_7407_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_7407_end_0 = const()[name = tensor<string, []>("op_7407_end_0"), val = tensor<int32, [4]>([2, 80, 1, 77])];
            tensor<bool, [4]> var_7407_end_mask_0 = const()[name = tensor<string, []>("op_7407_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_7407_cast = slice_by_index(begin = var_7407_begin_0, end = var_7407_end_0, end_mask = var_7407_end_mask_0, x = v_51_cast);
            tensor<int32, [4]> var_7411_begin_0 = const()[name = tensor<string, []>("op_7411_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_7411_end_0 = const()[name = tensor<string, []>("op_7411_end_0"), val = tensor<int32, [4]>([2, 160, 1, 77])];
            tensor<bool, [4]> var_7411_end_mask_0 = const()[name = tensor<string, []>("op_7411_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_7411_cast = slice_by_index(begin = var_7411_begin_0, end = var_7411_end_0, end_mask = var_7411_end_mask_0, x = v_51_cast);
            tensor<int32, [4]> var_7415_begin_0 = const()[name = tensor<string, []>("op_7415_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_7415_end_0 = const()[name = tensor<string, []>("op_7415_end_0"), val = tensor<int32, [4]>([2, 240, 1, 77])];
            tensor<bool, [4]> var_7415_end_mask_0 = const()[name = tensor<string, []>("op_7415_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_7415_cast = slice_by_index(begin = var_7415_begin_0, end = var_7415_end_0, end_mask = var_7415_end_mask_0, x = v_51_cast);
            tensor<int32, [4]> var_7419_begin_0 = const()[name = tensor<string, []>("op_7419_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_7419_end_0 = const()[name = tensor<string, []>("op_7419_end_0"), val = tensor<int32, [4]>([2, 320, 1, 77])];
            tensor<bool, [4]> var_7419_end_mask_0 = const()[name = tensor<string, []>("op_7419_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_7419_cast = slice_by_index(begin = var_7419_begin_0, end = var_7419_end_0, end_mask = var_7419_end_mask_0, x = v_51_cast);
            tensor<int32, [4]> var_7423_begin_0 = const()[name = tensor<string, []>("op_7423_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_7423_end_0 = const()[name = tensor<string, []>("op_7423_end_0"), val = tensor<int32, [4]>([2, 400, 1, 77])];
            tensor<bool, [4]> var_7423_end_mask_0 = const()[name = tensor<string, []>("op_7423_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_7423_cast = slice_by_index(begin = var_7423_begin_0, end = var_7423_end_0, end_mask = var_7423_end_mask_0, x = v_51_cast);
            tensor<int32, [4]> var_7427_begin_0 = const()[name = tensor<string, []>("op_7427_begin_0"), val = tensor<int32, [4]>([0, 400, 0, 0])];
            tensor<int32, [4]> var_7427_end_0 = const()[name = tensor<string, []>("op_7427_end_0"), val = tensor<int32, [4]>([2, 480, 1, 77])];
            tensor<bool, [4]> var_7427_end_mask_0 = const()[name = tensor<string, []>("op_7427_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_7427_cast = slice_by_index(begin = var_7427_begin_0, end = var_7427_end_0, end_mask = var_7427_end_mask_0, x = v_51_cast);
            tensor<int32, [4]> var_7431_begin_0 = const()[name = tensor<string, []>("op_7431_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_7431_end_0 = const()[name = tensor<string, []>("op_7431_end_0"), val = tensor<int32, [4]>([2, 560, 1, 77])];
            tensor<bool, [4]> var_7431_end_mask_0 = const()[name = tensor<string, []>("op_7431_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_7431_cast = slice_by_index(begin = var_7431_begin_0, end = var_7431_end_0, end_mask = var_7431_end_mask_0, x = v_51_cast);
            tensor<int32, [4]> var_7435_begin_0 = const()[name = tensor<string, []>("op_7435_begin_0"), val = tensor<int32, [4]>([0, 560, 0, 0])];
            tensor<int32, [4]> var_7435_end_0 = const()[name = tensor<string, []>("op_7435_end_0"), val = tensor<int32, [4]>([2, 640, 1, 77])];
            tensor<bool, [4]> var_7435_end_mask_0 = const()[name = tensor<string, []>("op_7435_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_7435_cast = slice_by_index(begin = var_7435_begin_0, end = var_7435_end_0, end_mask = var_7435_end_mask_0, x = v_51_cast);
            tensor<string, []> var_7439_equation_0 = const()[name = tensor<string, []>("op_7439_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_7439_cast = einsum(equation = var_7439_equation_0, values = (var_7377_cast, var_7342_cast));
            tensor<fp16, []> var_7440_to_fp16 = const()[name = tensor<string, []>("op_7440_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_401_cast = mul(x = var_7439_cast, y = var_7440_to_fp16);
            tensor<string, []> var_7443_equation_0 = const()[name = tensor<string, []>("op_7443_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_7443_cast = einsum(equation = var_7443_equation_0, values = (var_7381_cast, var_7346_cast));
            tensor<fp16, []> var_7444_to_fp16 = const()[name = tensor<string, []>("op_7444_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_403_cast = mul(x = var_7443_cast, y = var_7444_to_fp16);
            tensor<string, []> var_7447_equation_0 = const()[name = tensor<string, []>("op_7447_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_7447_cast = einsum(equation = var_7447_equation_0, values = (var_7385_cast, var_7350_cast));
            tensor<fp16, []> var_7448_to_fp16 = const()[name = tensor<string, []>("op_7448_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_405_cast = mul(x = var_7447_cast, y = var_7448_to_fp16);
            tensor<string, []> var_7451_equation_0 = const()[name = tensor<string, []>("op_7451_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_7451_cast = einsum(equation = var_7451_equation_0, values = (var_7389_cast, var_7354_cast));
            tensor<fp16, []> var_7452_to_fp16 = const()[name = tensor<string, []>("op_7452_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_407_cast = mul(x = var_7451_cast, y = var_7452_to_fp16);
            tensor<string, []> var_7455_equation_0 = const()[name = tensor<string, []>("op_7455_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_7455_cast = einsum(equation = var_7455_equation_0, values = (var_7393_cast, var_7358_cast));
            tensor<fp16, []> var_7456_to_fp16 = const()[name = tensor<string, []>("op_7456_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_409_cast = mul(x = var_7455_cast, y = var_7456_to_fp16);
            tensor<string, []> var_7459_equation_0 = const()[name = tensor<string, []>("op_7459_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_7459_cast = einsum(equation = var_7459_equation_0, values = (var_7397_cast, var_7362_cast));
            tensor<fp16, []> var_7460_to_fp16 = const()[name = tensor<string, []>("op_7460_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_411_cast = mul(x = var_7459_cast, y = var_7460_to_fp16);
            tensor<string, []> var_7463_equation_0 = const()[name = tensor<string, []>("op_7463_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_7463_cast = einsum(equation = var_7463_equation_0, values = (var_7401_cast, var_7366_cast));
            tensor<fp16, []> var_7464_to_fp16 = const()[name = tensor<string, []>("op_7464_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_413_cast = mul(x = var_7463_cast, y = var_7464_to_fp16);
            tensor<string, []> var_7467_equation_0 = const()[name = tensor<string, []>("op_7467_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_7467_cast = einsum(equation = var_7467_equation_0, values = (var_7405_cast, var_7370_cast));
            tensor<fp16, []> var_7468_to_fp16 = const()[name = tensor<string, []>("op_7468_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_415_cast = mul(x = var_7467_cast, y = var_7468_to_fp16);
            tensor<fp16, [2, 77, 1, 1024]> var_7470_cast = softmax(axis = var_5930, x = aw_401_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_7471_cast = softmax(axis = var_5930, x = aw_403_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_7472_cast = softmax(axis = var_5930, x = aw_405_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_7473_cast = softmax(axis = var_5930, x = aw_407_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_7474_cast = softmax(axis = var_5930, x = aw_409_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_7475_cast = softmax(axis = var_5930, x = aw_411_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_7476_cast = softmax(axis = var_5930, x = aw_413_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_7477_cast = softmax(axis = var_5930, x = aw_415_cast);
            tensor<string, []> var_7479_equation_0 = const()[name = tensor<string, []>("op_7479_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_7479_cast = einsum(equation = var_7479_equation_0, values = (var_7407_cast, var_7470_cast));
            tensor<string, []> var_7481_equation_0 = const()[name = tensor<string, []>("op_7481_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_7481_cast = einsum(equation = var_7481_equation_0, values = (var_7411_cast, var_7471_cast));
            tensor<string, []> var_7483_equation_0 = const()[name = tensor<string, []>("op_7483_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_7483_cast = einsum(equation = var_7483_equation_0, values = (var_7415_cast, var_7472_cast));
            tensor<string, []> var_7485_equation_0 = const()[name = tensor<string, []>("op_7485_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_7485_cast = einsum(equation = var_7485_equation_0, values = (var_7419_cast, var_7473_cast));
            tensor<string, []> var_7487_equation_0 = const()[name = tensor<string, []>("op_7487_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_7487_cast = einsum(equation = var_7487_equation_0, values = (var_7423_cast, var_7474_cast));
            tensor<string, []> var_7489_equation_0 = const()[name = tensor<string, []>("op_7489_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_7489_cast = einsum(equation = var_7489_equation_0, values = (var_7427_cast, var_7475_cast));
            tensor<string, []> var_7491_equation_0 = const()[name = tensor<string, []>("op_7491_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_7491_cast = einsum(equation = var_7491_equation_0, values = (var_7431_cast, var_7476_cast));
            tensor<string, []> var_7493_equation_0 = const()[name = tensor<string, []>("op_7493_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_7493_cast = einsum(equation = var_7493_equation_0, values = (var_7435_cast, var_7477_cast));
            tensor<bool, []> input_437_interleave_0 = const()[name = tensor<string, []>("input_437_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 640, 1, 1024]> input_437_cast = concat(axis = var_5930, interleave = input_437_interleave_0, values = (var_7479_cast, var_7481_cast, var_7483_cast, var_7485_cast, var_7487_cast, var_7489_cast, var_7491_cast, var_7493_cast));
            tensor<int32, [2]> var_7499 = const()[name = tensor<string, []>("op_7499"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7501 = const()[name = tensor<string, []>("op_7501"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_7503_pad_type_0 = const()[name = tensor<string, []>("op_7503_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_7503_pad_0 = const()[name = tensor<string, []>("op_7503_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_2_transformer_blocks_0_attn2_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_2_transformer_blocks_0_attn2_to_out_0_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(775131968)))];
            tensor<fp16, [640]> up_blocks_2_attentions_2_transformer_blocks_0_attn2_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_2_transformer_blocks_0_attn2_to_out_0_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(775951232)))];
            tensor<fp16, [2, 640, 1, 1024]> var_7503_cast = conv(bias = up_blocks_2_attentions_2_transformer_blocks_0_attn2_to_out_0_bias_to_fp16, dilations = var_7501, groups = var_5930, pad = var_7503_pad_0, pad_type = var_7503_pad_type_0, strides = var_7499, weight = up_blocks_2_attentions_2_transformer_blocks_0_attn2_to_out_0_weight_to_fp16, x = input_437_cast);
            tensor<fp16, [2, 640, 1, 1024]> inputs_77_cast = add(x = var_7503_cast, y = inputs_75_cast);
            tensor<int32, [1]> var_7507 = const()[name = tensor<string, []>("op_7507"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> channels_mean_77_cast = reduce_mean(axes = var_7507, keep_dims = var_5925, x = inputs_77_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_77_cast = sub(x = inputs_77_cast, y = channels_mean_77_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_sq_77_cast = mul(x = zero_mean_77_cast, y = zero_mean_77_cast);
            tensor<int32, [1]> var_7511 = const()[name = tensor<string, []>("op_7511"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> var_7512_cast = reduce_mean(axes = var_7511, keep_dims = var_5925, x = zero_mean_sq_77_cast);
            tensor<fp16, []> var_7513_to_fp16 = const()[name = tensor<string, []>("op_7513_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 1024]> var_7514_cast = add(x = var_7512_cast, y = var_7513_to_fp16);
            tensor<fp16, []> denom_77_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_77_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 1024]> denom_77_cast = rsqrt(epsilon = denom_77_epsilon_0_to_fp16, x = var_7514_cast);
            tensor<fp16, [2, 640, 1, 1024]> out_77_cast = mul(x = zero_mean_77_cast, y = denom_77_cast);
            tensor<fp16, [1, 640, 1, 1]> var_7518_to_fp16 = const()[name = tensor<string, []>("op_7518_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(775952576)))];
            tensor<fp16, [2, 640, 1, 1024]> var_7519_cast = add(x = out_77_cast, y = var_7518_to_fp16);
            tensor<fp16, [1, 640, 1, 1]> var_7521_to_fp16 = const()[name = tensor<string, []>("op_7521_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(775953920)))];
            tensor<fp16, [2, 640, 1, 1024]> input_439_cast = mul(x = var_7519_cast, y = var_7521_to_fp16);
            tensor<int32, [2]> var_7529 = const()[name = tensor<string, []>("op_7529"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7531 = const()[name = tensor<string, []>("op_7531"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_7533_pad_type_0 = const()[name = tensor<string, []>("op_7533_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_7533_pad_0 = const()[name = tensor<string, []>("op_7533_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [5120, 640, 1, 1]> up_blocks_2_attentions_2_transformer_blocks_0_ff_net_0_proj_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_2_transformer_blocks_0_ff_net_0_proj_weight_to_fp16"), val = tensor<fp16, [5120, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(775955264)))];
            tensor<fp16, [5120]> up_blocks_2_attentions_2_transformer_blocks_0_ff_net_0_proj_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_2_transformer_blocks_0_ff_net_0_proj_bias_to_fp16"), val = tensor<fp16, [5120]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(782508928)))];
            tensor<fp16, [2, 5120, 1, 1024]> var_7533_cast = conv(bias = up_blocks_2_attentions_2_transformer_blocks_0_ff_net_0_proj_bias_to_fp16, dilations = var_7531, groups = var_5930, pad = var_7533_pad_0, pad_type = var_7533_pad_type_0, strides = var_7529, weight = up_blocks_2_attentions_2_transformer_blocks_0_ff_net_0_proj_weight_to_fp16, x = input_439_cast);
            tensor<int32, [2]> var_7534_split_sizes_0 = const()[name = tensor<string, []>("op_7534_split_sizes_0"), val = tensor<int32, [2]>([2560, 2560])];
            tensor<int32, []> var_7534_axis_0 = const()[name = tensor<string, []>("op_7534_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [2, 2560, 1, 1024]> var_7534_cast_0, tensor<fp16, [2, 2560, 1, 1024]> var_7534_cast_1 = split(axis = var_7534_axis_0, split_sizes = var_7534_split_sizes_0, x = var_7533_cast);
            tensor<string, []> var_7536_mode_0 = const()[name = tensor<string, []>("op_7536_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [2, 2560, 1, 1024]> var_7536_cast = gelu(mode = var_7536_mode_0, x = var_7534_cast_1);
            tensor<fp16, [2, 2560, 1, 1024]> input_441_cast = mul(x = var_7534_cast_0, y = var_7536_cast);
            tensor<int32, [2]> var_7540 = const()[name = tensor<string, []>("op_7540"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7542 = const()[name = tensor<string, []>("op_7542"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_7544_pad_type_0 = const()[name = tensor<string, []>("op_7544_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_7544_pad_0 = const()[name = tensor<string, []>("op_7544_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 2560, 1, 1]> up_blocks_2_attentions_2_transformer_blocks_0_ff_net_2_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_2_transformer_blocks_0_ff_net_2_weight_to_fp16"), val = tensor<fp16, [640, 2560, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(782519232)))];
            tensor<fp16, [640]> up_blocks_2_attentions_2_transformer_blocks_0_ff_net_2_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_2_transformer_blocks_0_ff_net_2_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(785796096)))];
            tensor<fp16, [2, 640, 1, 1024]> var_7544_cast = conv(bias = up_blocks_2_attentions_2_transformer_blocks_0_ff_net_2_bias_to_fp16, dilations = var_7542, groups = var_5930, pad = var_7544_pad_0, pad_type = var_7544_pad_type_0, strides = var_7540, weight = up_blocks_2_attentions_2_transformer_blocks_0_ff_net_2_weight_to_fp16, x = input_441_cast);
            tensor<fp16, [2, 640, 1, 1024]> hidden_states_273_cast = add(x = var_7544_cast, y = inputs_77_cast);
            tensor<int32, [4]> var_7546 = const()[name = tensor<string, []>("op_7546"), val = tensor<int32, [4]>([2, 640, 32, 32])];
            tensor<fp16, [2, 640, 32, 32]> input_443_cast = reshape(shape = var_7546, x = hidden_states_273_cast);
            tensor<int32, [2]> var_7550 = const()[name = tensor<string, []>("op_7550"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7552 = const()[name = tensor<string, []>("op_7552"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_275_pad_type_0 = const()[name = tensor<string, []>("hidden_states_275_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_275_pad_0 = const()[name = tensor<string, []>("hidden_states_275_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_2_proj_out_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_2_proj_out_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(785797440)))];
            tensor<fp16, [640]> up_blocks_2_attentions_2_proj_out_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_2_proj_out_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(786616704)))];
            tensor<fp16, [2, 640, 32, 32]> hidden_states_275_cast = conv(bias = up_blocks_2_attentions_2_proj_out_bias_to_fp16, dilations = var_7552, groups = var_5930, pad = hidden_states_275_pad_0, pad_type = hidden_states_275_pad_type_0, strides = var_7550, weight = up_blocks_2_attentions_2_proj_out_weight_to_fp16, x = input_443_cast);
            tensor<fp16, [2, 640, 32, 32]> input_445_cast = add(x = hidden_states_275_cast, y = hidden_states_263_cast);
            tensor<fp32, []> input_447_scale_factor_height_0 = const()[name = tensor<string, []>("input_447_scale_factor_height_0"), val = tensor<fp32, []>(0x1p+1)];
            tensor<fp32, []> input_447_scale_factor_width_0 = const()[name = tensor<string, []>("input_447_scale_factor_width_0"), val = tensor<fp32, []>(0x1p+1)];
            tensor<fp16, [2, 640, 64, 64]> input_447_cast = upsample_nearest_neighbor(scale_factor_height = input_447_scale_factor_height_0, scale_factor_width = input_447_scale_factor_width_0, x = input_445_cast);
            tensor<int32, [2]> var_7561 = const()[name = tensor<string, []>("op_7561"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7563 = const()[name = tensor<string, []>("op_7563"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_277_pad_type_0 = const()[name = tensor<string, []>("hidden_states_277_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_277_pad_0 = const()[name = tensor<string, []>("hidden_states_277_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [640, 640, 3, 3]> up_blocks_2_upsamplers_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_upsamplers_0_conv_weight_to_fp16"), val = tensor<fp16, [640, 640, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(786618048)))];
            tensor<fp16, [640]> up_blocks_2_upsamplers_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_upsamplers_0_conv_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(793990912)))];
            tensor<fp16, [2, 640, 64, 64]> hidden_states_277_cast = conv(bias = up_blocks_2_upsamplers_0_conv_bias_to_fp16, dilations = var_7563, groups = var_5930, pad = hidden_states_277_pad_0, pad_type = hidden_states_277_pad_type_0, strides = var_7561, weight = up_blocks_2_upsamplers_0_conv_weight_to_fp16, x = input_447_cast);
            tensor<bool, []> var_7582 = const()[name = tensor<string, []>("op_7582"), val = tensor<bool, []>(true)];
            tensor<int32, []> var_7587 = const()[name = tensor<string, []>("op_7587"), val = tensor<int32, []>(1)];
            tensor<bool, []> input_449_interleave_0 = const()[name = tensor<string, []>("input_449_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 320, 64, 64]> cast_10 = cast(dtype = cast_3_dtype_0, x = input_61_cast);
            tensor<fp16, [2, 960, 64, 64]> input_449_cast = concat(axis = var_7587, interleave = input_449_interleave_0, values = (hidden_states_277_cast, cast_10));
            tensor<int32, [5]> reshape_204_shape_0 = const()[name = tensor<string, []>("reshape_204_shape_0"), val = tensor<int32, [5]>([2, 32, 30, 64, 64])];
            tensor<fp16, [2, 32, 30, 64, 64]> reshape_204_cast = reshape(shape = reshape_204_shape_0, x = input_449_cast);
            tensor<int32, [3]> reduce_mean_153_axes_0 = const()[name = tensor<string, []>("reduce_mean_153_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_153_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_153_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_153_cast = reduce_mean(axes = reduce_mean_153_axes_0, keep_dims = reduce_mean_153_keep_dims_0, x = reshape_204_cast);
            tensor<fp16, [2, 32, 30, 64, 64]> sub_102_cast = sub(x = reshape_204_cast, y = reduce_mean_153_cast);
            tensor<fp16, [2, 32, 30, 64, 64]> square_51_cast = square(x = sub_102_cast);
            tensor<int32, [3]> reduce_mean_155_axes_0 = const()[name = tensor<string, []>("reduce_mean_155_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_155_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_155_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_155_cast = reduce_mean(axes = reduce_mean_155_axes_0, keep_dims = reduce_mean_155_keep_dims_0, x = square_51_cast);
            tensor<fp16, []> add_102_y_0_to_fp16 = const()[name = tensor<string, []>("add_102_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_102_cast = add(x = reduce_mean_155_cast, y = add_102_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_51_cast = sqrt(x = add_102_cast);
            tensor<fp16, [2, 32, 30, 64, 64]> real_div_51_cast = real_div(x = sub_102_cast, y = sqrt_51_cast);
            tensor<int32, [4]> reshape_205_shape_0 = const()[name = tensor<string, []>("reshape_205_shape_0"), val = tensor<int32, [4]>([2, 960, 64, 64])];
            tensor<fp16, [2, 960, 64, 64]> reshape_205_cast = reshape(shape = reshape_205_shape_0, x = real_div_51_cast);
            tensor<fp16, [960]> add_103_mean_0_to_fp16 = const()[name = tensor<string, []>("add_103_mean_0_to_fp16"), val = tensor<fp16, [960]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(793992256)))];
            tensor<fp16, [960]> add_103_variance_0_to_fp16 = const()[name = tensor<string, []>("add_103_variance_0_to_fp16"), val = tensor<fp16, [960]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(793994240)))];
            tensor<fp16, [960]> add_103_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_103_gamma_0_to_fp16"), val = tensor<fp16, [960]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(793996224)))];
            tensor<fp16, [960]> add_103_beta_0_to_fp16 = const()[name = tensor<string, []>("add_103_beta_0_to_fp16"), val = tensor<fp16, [960]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(793998208)))];
            tensor<fp16, []> add_103_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_103_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 960, 64, 64]> add_103_cast = batch_norm(beta = add_103_beta_0_to_fp16, epsilon = add_103_epsilon_0_to_fp16, gamma = add_103_gamma_0_to_fp16, mean = add_103_mean_0_to_fp16, variance = add_103_variance_0_to_fp16, x = reshape_205_cast);
            tensor<fp16, [2, 960, 64, 64]> input_453_cast = silu(x = add_103_cast);
            tensor<int32, [2]> var_7614 = const()[name = tensor<string, []>("op_7614"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7616 = const()[name = tensor<string, []>("op_7616"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_279_pad_type_0 = const()[name = tensor<string, []>("hidden_states_279_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_279_pad_0 = const()[name = tensor<string, []>("hidden_states_279_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [320, 960, 3, 3]> up_blocks_3_resnets_0_conv1_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_0_conv1_weight_to_fp16"), val = tensor<fp16, [320, 960, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(794000192)))];
            tensor<fp16, [320]> up_blocks_3_resnets_0_conv1_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_0_conv1_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(799529856)))];
            tensor<fp16, [2, 320, 64, 64]> hidden_states_279_cast = conv(bias = up_blocks_3_resnets_0_conv1_bias_to_fp16, dilations = var_7616, groups = var_7587, pad = hidden_states_279_pad_0, pad_type = hidden_states_279_pad_type_0, strides = var_7614, weight = up_blocks_3_resnets_0_conv1_weight_to_fp16, x = input_453_cast);
            tensor<int32, [2]> var_7622 = const()[name = tensor<string, []>("op_7622"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7624 = const()[name = tensor<string, []>("op_7624"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> temb_39_pad_type_0 = const()[name = tensor<string, []>("temb_39_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> temb_39_pad_0 = const()[name = tensor<string, []>("temb_39_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 1280, 1, 1]> up_blocks_3_resnets_0_time_emb_proj_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_0_time_emb_proj_weight_to_fp16"), val = tensor<fp16, [320, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(799530560)))];
            tensor<fp16, [320]> up_blocks_3_resnets_0_time_emb_proj_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_0_time_emb_proj_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(800349824)))];
            tensor<fp16, [2, 320, 1, 1]> temb_39_cast = conv(bias = up_blocks_3_resnets_0_time_emb_proj_bias_to_fp16, dilations = var_7624, groups = var_7587, pad = temb_39_pad_0, pad_type = temb_39_pad_type_0, strides = var_7622, weight = up_blocks_3_resnets_0_time_emb_proj_weight_to_fp16, x = cast_12);
            tensor<fp16, [2, 320, 64, 64]> input_457_cast = add(x = hidden_states_279_cast, y = temb_39_cast);
            tensor<int32, [5]> reshape_208_shape_0 = const()[name = tensor<string, []>("reshape_208_shape_0"), val = tensor<int32, [5]>([2, 32, 10, 64, 64])];
            tensor<fp16, [2, 32, 10, 64, 64]> reshape_208_cast = reshape(shape = reshape_208_shape_0, x = input_457_cast);
            tensor<int32, [3]> reduce_mean_156_axes_0 = const()[name = tensor<string, []>("reduce_mean_156_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_156_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_156_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_156_cast = reduce_mean(axes = reduce_mean_156_axes_0, keep_dims = reduce_mean_156_keep_dims_0, x = reshape_208_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> sub_104_cast = sub(x = reshape_208_cast, y = reduce_mean_156_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> square_52_cast = square(x = sub_104_cast);
            tensor<int32, [3]> reduce_mean_158_axes_0 = const()[name = tensor<string, []>("reduce_mean_158_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_158_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_158_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_158_cast = reduce_mean(axes = reduce_mean_158_axes_0, keep_dims = reduce_mean_158_keep_dims_0, x = square_52_cast);
            tensor<fp16, []> add_104_y_0_to_fp16 = const()[name = tensor<string, []>("add_104_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_104_cast = add(x = reduce_mean_158_cast, y = add_104_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_52_cast = sqrt(x = add_104_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> real_div_52_cast = real_div(x = sub_104_cast, y = sqrt_52_cast);
            tensor<int32, [4]> reshape_209_shape_0 = const()[name = tensor<string, []>("reshape_209_shape_0"), val = tensor<int32, [4]>([2, 320, 64, 64])];
            tensor<fp16, [2, 320, 64, 64]> reshape_209_cast = reshape(shape = reshape_209_shape_0, x = real_div_52_cast);
            tensor<fp16, [320]> add_105_mean_0_to_fp16 = const()[name = tensor<string, []>("add_105_mean_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(800350528)))];
            tensor<fp16, [320]> add_105_variance_0_to_fp16 = const()[name = tensor<string, []>("add_105_variance_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(800351232)))];
            tensor<fp16, [320]> add_105_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_105_gamma_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(800351936)))];
            tensor<fp16, [320]> add_105_beta_0_to_fp16 = const()[name = tensor<string, []>("add_105_beta_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(800352640)))];
            tensor<fp16, []> add_105_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_105_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 320, 64, 64]> add_105_cast = batch_norm(beta = add_105_beta_0_to_fp16, epsilon = add_105_epsilon_0_to_fp16, gamma = add_105_gamma_0_to_fp16, mean = add_105_mean_0_to_fp16, variance = add_105_variance_0_to_fp16, x = reshape_209_cast);
            tensor<fp16, [2, 320, 64, 64]> input_461_cast = silu(x = add_105_cast);
            tensor<int32, [2]> var_7634 = const()[name = tensor<string, []>("op_7634"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7636 = const()[name = tensor<string, []>("op_7636"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_281_pad_type_0 = const()[name = tensor<string, []>("hidden_states_281_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_281_pad_0 = const()[name = tensor<string, []>("hidden_states_281_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [320, 320, 3, 3]> up_blocks_3_resnets_0_conv2_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_0_conv2_weight_to_fp16"), val = tensor<fp16, [320, 320, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(800353344)))];
            tensor<fp16, [320]> up_blocks_3_resnets_0_conv2_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_0_conv2_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(802196608)))];
            tensor<fp16, [2, 320, 64, 64]> hidden_states_281_cast = conv(bias = up_blocks_3_resnets_0_conv2_bias_to_fp16, dilations = var_7636, groups = var_7587, pad = hidden_states_281_pad_0, pad_type = hidden_states_281_pad_type_0, strides = var_7634, weight = up_blocks_3_resnets_0_conv2_weight_to_fp16, x = input_461_cast);
            tensor<int32, [2]> var_7641 = const()[name = tensor<string, []>("op_7641"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7643 = const()[name = tensor<string, []>("op_7643"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_23_pad_type_0 = const()[name = tensor<string, []>("x_23_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_23_pad_0 = const()[name = tensor<string, []>("x_23_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 960, 1, 1]> up_blocks_3_resnets_0_conv_shortcut_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_0_conv_shortcut_weight_to_fp16"), val = tensor<fp16, [320, 960, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(802197312)))];
            tensor<fp16, [320]> up_blocks_3_resnets_0_conv_shortcut_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_0_conv_shortcut_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(802811776)))];
            tensor<fp16, [2, 320, 64, 64]> x_23_cast = conv(bias = up_blocks_3_resnets_0_conv_shortcut_bias_to_fp16, dilations = var_7643, groups = var_7587, pad = x_23_pad_0, pad_type = x_23_pad_type_0, strides = var_7641, weight = up_blocks_3_resnets_0_conv_shortcut_weight_to_fp16, x = input_449_cast);
            tensor<fp16, [2, 320, 64, 64]> hidden_states_283_cast = add(x = x_23_cast, y = hidden_states_281_cast);
            tensor<int32, [5]> reshape_212_shape_0 = const()[name = tensor<string, []>("reshape_212_shape_0"), val = tensor<int32, [5]>([2, 32, 10, 64, 64])];
            tensor<fp16, [2, 32, 10, 64, 64]> reshape_212_cast = reshape(shape = reshape_212_shape_0, x = hidden_states_283_cast);
            tensor<int32, [3]> reduce_mean_159_axes_0 = const()[name = tensor<string, []>("reduce_mean_159_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_159_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_159_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_159_cast = reduce_mean(axes = reduce_mean_159_axes_0, keep_dims = reduce_mean_159_keep_dims_0, x = reshape_212_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> sub_106_cast = sub(x = reshape_212_cast, y = reduce_mean_159_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> square_53_cast = square(x = sub_106_cast);
            tensor<int32, [3]> reduce_mean_161_axes_0 = const()[name = tensor<string, []>("reduce_mean_161_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_161_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_161_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_161_cast = reduce_mean(axes = reduce_mean_161_axes_0, keep_dims = reduce_mean_161_keep_dims_0, x = square_53_cast);
            tensor<fp16, []> add_106_y_0_to_fp16 = const()[name = tensor<string, []>("add_106_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_106_cast = add(x = reduce_mean_161_cast, y = add_106_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_53_cast = sqrt(x = add_106_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> real_div_53_cast = real_div(x = sub_106_cast, y = sqrt_53_cast);
            tensor<int32, [4]> reshape_213_shape_0 = const()[name = tensor<string, []>("reshape_213_shape_0"), val = tensor<int32, [4]>([2, 320, 64, 64])];
            tensor<fp16, [2, 320, 64, 64]> reshape_213_cast = reshape(shape = reshape_213_shape_0, x = real_div_53_cast);
            tensor<fp16, [320]> add_107_mean_0_to_fp16 = const()[name = tensor<string, []>("add_107_mean_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(802812480)))];
            tensor<fp16, [320]> add_107_variance_0_to_fp16 = const()[name = tensor<string, []>("add_107_variance_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(802813184)))];
            tensor<fp16, [320]> add_107_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_107_gamma_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(802813888)))];
            tensor<fp16, [320]> add_107_beta_0_to_fp16 = const()[name = tensor<string, []>("add_107_beta_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(802814592)))];
            tensor<fp16, []> add_107_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_107_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 320, 64, 64]> add_107_cast = batch_norm(beta = add_107_beta_0_to_fp16, epsilon = add_107_epsilon_0_to_fp16, gamma = add_107_gamma_0_to_fp16, mean = add_107_mean_0_to_fp16, variance = add_107_variance_0_to_fp16, x = reshape_213_cast);
            tensor<int32, [2]> var_7663 = const()[name = tensor<string, []>("op_7663"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7665 = const()[name = tensor<string, []>("op_7665"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_285_pad_type_0 = const()[name = tensor<string, []>("hidden_states_285_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_285_pad_0 = const()[name = tensor<string, []>("hidden_states_285_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_0_proj_in_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_0_proj_in_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(802815296)))];
            tensor<fp16, [320]> up_blocks_3_attentions_0_proj_in_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_0_proj_in_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(803020160)))];
            tensor<fp16, [2, 320, 64, 64]> hidden_states_285_cast = conv(bias = up_blocks_3_attentions_0_proj_in_bias_to_fp16, dilations = var_7665, groups = var_7587, pad = hidden_states_285_pad_0, pad_type = hidden_states_285_pad_type_0, strides = var_7663, weight = up_blocks_3_attentions_0_proj_in_weight_to_fp16, x = add_107_cast);
            tensor<int32, [4]> var_7670 = const()[name = tensor<string, []>("op_7670"), val = tensor<int32, [4]>([2, 320, 1, 4096])];
            tensor<fp16, [2, 320, 1, 4096]> inputs_79_cast = reshape(shape = var_7670, x = hidden_states_285_cast);
            tensor<int32, [1]> var_7680 = const()[name = tensor<string, []>("op_7680"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> channels_mean_79_cast = reduce_mean(axes = var_7680, keep_dims = var_7582, x = inputs_79_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_79_cast = sub(x = inputs_79_cast, y = channels_mean_79_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_sq_79_cast = mul(x = zero_mean_79_cast, y = zero_mean_79_cast);
            tensor<int32, [1]> var_7684 = const()[name = tensor<string, []>("op_7684"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> var_7685_cast = reduce_mean(axes = var_7684, keep_dims = var_7582, x = zero_mean_sq_79_cast);
            tensor<fp16, []> var_7686_to_fp16 = const()[name = tensor<string, []>("op_7686_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 4096]> var_7687_cast = add(x = var_7685_cast, y = var_7686_to_fp16);
            tensor<fp16, []> denom_79_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_79_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 4096]> denom_79_cast = rsqrt(epsilon = denom_79_epsilon_0_to_fp16, x = var_7687_cast);
            tensor<fp16, [2, 320, 1, 4096]> out_79_cast = mul(x = zero_mean_79_cast, y = denom_79_cast);
            tensor<fp16, [1, 320, 1, 1]> var_7691_to_fp16 = const()[name = tensor<string, []>("op_7691_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(803020864)))];
            tensor<fp16, [2, 320, 1, 4096]> var_7692_cast = add(x = out_79_cast, y = var_7691_to_fp16);
            tensor<fp16, [1, 320, 1, 1]> var_7694_to_fp16 = const()[name = tensor<string, []>("op_7694_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(803021568)))];
            tensor<fp16, [2, 320, 1, 4096]> hidden_states_287_cast = mul(x = var_7692_cast, y = var_7694_to_fp16);
            tensor<int32, [2]> var_7701 = const()[name = tensor<string, []>("op_7701"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7703 = const()[name = tensor<string, []>("op_7703"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_53_pad_type_0 = const()[name = tensor<string, []>("q_53_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_53_pad_0 = const()[name = tensor<string, []>("q_53_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_0_transformer_blocks_0_attn1_to_q_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_0_transformer_blocks_0_attn1_to_q_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(803022272)))];
            tensor<fp16, [2, 320, 1, 4096]> q_53_cast = conv(dilations = var_7703, groups = var_7587, pad = q_53_pad_0, pad_type = q_53_pad_type_0, strides = var_7701, weight = up_blocks_3_attentions_0_transformer_blocks_0_attn1_to_q_weight_to_fp16, x = hidden_states_287_cast);
            tensor<int32, [2]> var_7707 = const()[name = tensor<string, []>("op_7707"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7709 = const()[name = tensor<string, []>("op_7709"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_105_pad_type_0 = const()[name = tensor<string, []>("k_105_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_105_pad_0 = const()[name = tensor<string, []>("k_105_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_0_transformer_blocks_0_attn1_to_k_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_0_transformer_blocks_0_attn1_to_k_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(803227136)))];
            tensor<fp16, [2, 320, 1, 4096]> k_105_cast = conv(dilations = var_7709, groups = var_7587, pad = k_105_pad_0, pad_type = k_105_pad_type_0, strides = var_7707, weight = up_blocks_3_attentions_0_transformer_blocks_0_attn1_to_k_weight_to_fp16, x = hidden_states_287_cast);
            tensor<int32, [2]> var_7713 = const()[name = tensor<string, []>("op_7713"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7715 = const()[name = tensor<string, []>("op_7715"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_53_pad_type_0 = const()[name = tensor<string, []>("v_53_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_53_pad_0 = const()[name = tensor<string, []>("v_53_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_0_transformer_blocks_0_attn1_to_v_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_0_transformer_blocks_0_attn1_to_v_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(803432000)))];
            tensor<fp16, [2, 320, 1, 4096]> v_53_cast = conv(dilations = var_7715, groups = var_7587, pad = v_53_pad_0, pad_type = v_53_pad_type_0, strides = var_7713, weight = up_blocks_3_attentions_0_transformer_blocks_0_attn1_to_v_weight_to_fp16, x = hidden_states_287_cast);
            tensor<int32, [4]> var_7719_begin_0 = const()[name = tensor<string, []>("op_7719_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_7719_end_0 = const()[name = tensor<string, []>("op_7719_end_0"), val = tensor<int32, [4]>([2, 40, 1, 4096])];
            tensor<bool, [4]> var_7719_end_mask_0 = const()[name = tensor<string, []>("op_7719_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_7719_cast = slice_by_index(begin = var_7719_begin_0, end = var_7719_end_0, end_mask = var_7719_end_mask_0, x = q_53_cast);
            tensor<int32, [4]> var_7723_begin_0 = const()[name = tensor<string, []>("op_7723_begin_0"), val = tensor<int32, [4]>([0, 40, 0, 0])];
            tensor<int32, [4]> var_7723_end_0 = const()[name = tensor<string, []>("op_7723_end_0"), val = tensor<int32, [4]>([2, 80, 1, 4096])];
            tensor<bool, [4]> var_7723_end_mask_0 = const()[name = tensor<string, []>("op_7723_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_7723_cast = slice_by_index(begin = var_7723_begin_0, end = var_7723_end_0, end_mask = var_7723_end_mask_0, x = q_53_cast);
            tensor<int32, [4]> var_7727_begin_0 = const()[name = tensor<string, []>("op_7727_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_7727_end_0 = const()[name = tensor<string, []>("op_7727_end_0"), val = tensor<int32, [4]>([2, 120, 1, 4096])];
            tensor<bool, [4]> var_7727_end_mask_0 = const()[name = tensor<string, []>("op_7727_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_7727_cast = slice_by_index(begin = var_7727_begin_0, end = var_7727_end_0, end_mask = var_7727_end_mask_0, x = q_53_cast);
            tensor<int32, [4]> var_7731_begin_0 = const()[name = tensor<string, []>("op_7731_begin_0"), val = tensor<int32, [4]>([0, 120, 0, 0])];
            tensor<int32, [4]> var_7731_end_0 = const()[name = tensor<string, []>("op_7731_end_0"), val = tensor<int32, [4]>([2, 160, 1, 4096])];
            tensor<bool, [4]> var_7731_end_mask_0 = const()[name = tensor<string, []>("op_7731_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_7731_cast = slice_by_index(begin = var_7731_begin_0, end = var_7731_end_0, end_mask = var_7731_end_mask_0, x = q_53_cast);
            tensor<int32, [4]> var_7735_begin_0 = const()[name = tensor<string, []>("op_7735_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_7735_end_0 = const()[name = tensor<string, []>("op_7735_end_0"), val = tensor<int32, [4]>([2, 200, 1, 4096])];
            tensor<bool, [4]> var_7735_end_mask_0 = const()[name = tensor<string, []>("op_7735_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_7735_cast = slice_by_index(begin = var_7735_begin_0, end = var_7735_end_0, end_mask = var_7735_end_mask_0, x = q_53_cast);
            tensor<int32, [4]> var_7739_begin_0 = const()[name = tensor<string, []>("op_7739_begin_0"), val = tensor<int32, [4]>([0, 200, 0, 0])];
            tensor<int32, [4]> var_7739_end_0 = const()[name = tensor<string, []>("op_7739_end_0"), val = tensor<int32, [4]>([2, 240, 1, 4096])];
            tensor<bool, [4]> var_7739_end_mask_0 = const()[name = tensor<string, []>("op_7739_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_7739_cast = slice_by_index(begin = var_7739_begin_0, end = var_7739_end_0, end_mask = var_7739_end_mask_0, x = q_53_cast);
            tensor<int32, [4]> var_7743_begin_0 = const()[name = tensor<string, []>("op_7743_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_7743_end_0 = const()[name = tensor<string, []>("op_7743_end_0"), val = tensor<int32, [4]>([2, 280, 1, 4096])];
            tensor<bool, [4]> var_7743_end_mask_0 = const()[name = tensor<string, []>("op_7743_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_7743_cast = slice_by_index(begin = var_7743_begin_0, end = var_7743_end_0, end_mask = var_7743_end_mask_0, x = q_53_cast);
            tensor<int32, [4]> var_7747_begin_0 = const()[name = tensor<string, []>("op_7747_begin_0"), val = tensor<int32, [4]>([0, 280, 0, 0])];
            tensor<int32, [4]> var_7747_end_0 = const()[name = tensor<string, []>("op_7747_end_0"), val = tensor<int32, [4]>([2, 320, 1, 4096])];
            tensor<bool, [4]> var_7747_end_mask_0 = const()[name = tensor<string, []>("op_7747_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_7747_cast = slice_by_index(begin = var_7747_begin_0, end = var_7747_end_0, end_mask = var_7747_end_mask_0, x = q_53_cast);
            tensor<int32, [4]> k_107_perm_0 = const()[name = tensor<string, []>("k_107_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_7754_begin_0 = const()[name = tensor<string, []>("op_7754_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_7754_end_0 = const()[name = tensor<string, []>("op_7754_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 40])];
            tensor<bool, [4]> var_7754_end_mask_0 = const()[name = tensor<string, []>("op_7754_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 320]> transpose_5 = transpose(perm = k_107_perm_0, x = k_105_cast);
            tensor<fp16, [2, 4096, 1, 40]> var_7754_cast = slice_by_index(begin = var_7754_begin_0, end = var_7754_end_0, end_mask = var_7754_end_mask_0, x = transpose_5);
            tensor<int32, [4]> var_7758_begin_0 = const()[name = tensor<string, []>("op_7758_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 40])];
            tensor<int32, [4]> var_7758_end_0 = const()[name = tensor<string, []>("op_7758_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 80])];
            tensor<bool, [4]> var_7758_end_mask_0 = const()[name = tensor<string, []>("op_7758_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_7758_cast = slice_by_index(begin = var_7758_begin_0, end = var_7758_end_0, end_mask = var_7758_end_mask_0, x = transpose_5);
            tensor<int32, [4]> var_7762_begin_0 = const()[name = tensor<string, []>("op_7762_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 80])];
            tensor<int32, [4]> var_7762_end_0 = const()[name = tensor<string, []>("op_7762_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 120])];
            tensor<bool, [4]> var_7762_end_mask_0 = const()[name = tensor<string, []>("op_7762_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_7762_cast = slice_by_index(begin = var_7762_begin_0, end = var_7762_end_0, end_mask = var_7762_end_mask_0, x = transpose_5);
            tensor<int32, [4]> var_7766_begin_0 = const()[name = tensor<string, []>("op_7766_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 120])];
            tensor<int32, [4]> var_7766_end_0 = const()[name = tensor<string, []>("op_7766_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 160])];
            tensor<bool, [4]> var_7766_end_mask_0 = const()[name = tensor<string, []>("op_7766_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_7766_cast = slice_by_index(begin = var_7766_begin_0, end = var_7766_end_0, end_mask = var_7766_end_mask_0, x = transpose_5);
            tensor<int32, [4]> var_7770_begin_0 = const()[name = tensor<string, []>("op_7770_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 160])];
            tensor<int32, [4]> var_7770_end_0 = const()[name = tensor<string, []>("op_7770_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 200])];
            tensor<bool, [4]> var_7770_end_mask_0 = const()[name = tensor<string, []>("op_7770_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_7770_cast = slice_by_index(begin = var_7770_begin_0, end = var_7770_end_0, end_mask = var_7770_end_mask_0, x = transpose_5);
            tensor<int32, [4]> var_7774_begin_0 = const()[name = tensor<string, []>("op_7774_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 200])];
            tensor<int32, [4]> var_7774_end_0 = const()[name = tensor<string, []>("op_7774_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 240])];
            tensor<bool, [4]> var_7774_end_mask_0 = const()[name = tensor<string, []>("op_7774_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_7774_cast = slice_by_index(begin = var_7774_begin_0, end = var_7774_end_0, end_mask = var_7774_end_mask_0, x = transpose_5);
            tensor<int32, [4]> var_7778_begin_0 = const()[name = tensor<string, []>("op_7778_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 240])];
            tensor<int32, [4]> var_7778_end_0 = const()[name = tensor<string, []>("op_7778_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 280])];
            tensor<bool, [4]> var_7778_end_mask_0 = const()[name = tensor<string, []>("op_7778_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_7778_cast = slice_by_index(begin = var_7778_begin_0, end = var_7778_end_0, end_mask = var_7778_end_mask_0, x = transpose_5);
            tensor<int32, [4]> var_7782_begin_0 = const()[name = tensor<string, []>("op_7782_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 280])];
            tensor<int32, [4]> var_7782_end_0 = const()[name = tensor<string, []>("op_7782_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 320])];
            tensor<bool, [4]> var_7782_end_mask_0 = const()[name = tensor<string, []>("op_7782_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_7782_cast = slice_by_index(begin = var_7782_begin_0, end = var_7782_end_0, end_mask = var_7782_end_mask_0, x = transpose_5);
            tensor<int32, [4]> var_7784_begin_0 = const()[name = tensor<string, []>("op_7784_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_7784_end_0 = const()[name = tensor<string, []>("op_7784_end_0"), val = tensor<int32, [4]>([2, 40, 1, 4096])];
            tensor<bool, [4]> var_7784_end_mask_0 = const()[name = tensor<string, []>("op_7784_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_7784_cast = slice_by_index(begin = var_7784_begin_0, end = var_7784_end_0, end_mask = var_7784_end_mask_0, x = v_53_cast);
            tensor<int32, [4]> var_7788_begin_0 = const()[name = tensor<string, []>("op_7788_begin_0"), val = tensor<int32, [4]>([0, 40, 0, 0])];
            tensor<int32, [4]> var_7788_end_0 = const()[name = tensor<string, []>("op_7788_end_0"), val = tensor<int32, [4]>([2, 80, 1, 4096])];
            tensor<bool, [4]> var_7788_end_mask_0 = const()[name = tensor<string, []>("op_7788_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_7788_cast = slice_by_index(begin = var_7788_begin_0, end = var_7788_end_0, end_mask = var_7788_end_mask_0, x = v_53_cast);
            tensor<int32, [4]> var_7792_begin_0 = const()[name = tensor<string, []>("op_7792_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_7792_end_0 = const()[name = tensor<string, []>("op_7792_end_0"), val = tensor<int32, [4]>([2, 120, 1, 4096])];
            tensor<bool, [4]> var_7792_end_mask_0 = const()[name = tensor<string, []>("op_7792_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_7792_cast = slice_by_index(begin = var_7792_begin_0, end = var_7792_end_0, end_mask = var_7792_end_mask_0, x = v_53_cast);
            tensor<int32, [4]> var_7796_begin_0 = const()[name = tensor<string, []>("op_7796_begin_0"), val = tensor<int32, [4]>([0, 120, 0, 0])];
            tensor<int32, [4]> var_7796_end_0 = const()[name = tensor<string, []>("op_7796_end_0"), val = tensor<int32, [4]>([2, 160, 1, 4096])];
            tensor<bool, [4]> var_7796_end_mask_0 = const()[name = tensor<string, []>("op_7796_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_7796_cast = slice_by_index(begin = var_7796_begin_0, end = var_7796_end_0, end_mask = var_7796_end_mask_0, x = v_53_cast);
            tensor<int32, [4]> var_7800_begin_0 = const()[name = tensor<string, []>("op_7800_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_7800_end_0 = const()[name = tensor<string, []>("op_7800_end_0"), val = tensor<int32, [4]>([2, 200, 1, 4096])];
            tensor<bool, [4]> var_7800_end_mask_0 = const()[name = tensor<string, []>("op_7800_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_7800_cast = slice_by_index(begin = var_7800_begin_0, end = var_7800_end_0, end_mask = var_7800_end_mask_0, x = v_53_cast);
            tensor<int32, [4]> var_7804_begin_0 = const()[name = tensor<string, []>("op_7804_begin_0"), val = tensor<int32, [4]>([0, 200, 0, 0])];
            tensor<int32, [4]> var_7804_end_0 = const()[name = tensor<string, []>("op_7804_end_0"), val = tensor<int32, [4]>([2, 240, 1, 4096])];
            tensor<bool, [4]> var_7804_end_mask_0 = const()[name = tensor<string, []>("op_7804_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_7804_cast = slice_by_index(begin = var_7804_begin_0, end = var_7804_end_0, end_mask = var_7804_end_mask_0, x = v_53_cast);
            tensor<int32, [4]> var_7808_begin_0 = const()[name = tensor<string, []>("op_7808_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_7808_end_0 = const()[name = tensor<string, []>("op_7808_end_0"), val = tensor<int32, [4]>([2, 280, 1, 4096])];
            tensor<bool, [4]> var_7808_end_mask_0 = const()[name = tensor<string, []>("op_7808_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_7808_cast = slice_by_index(begin = var_7808_begin_0, end = var_7808_end_0, end_mask = var_7808_end_mask_0, x = v_53_cast);
            tensor<int32, [4]> var_7812_begin_0 = const()[name = tensor<string, []>("op_7812_begin_0"), val = tensor<int32, [4]>([0, 280, 0, 0])];
            tensor<int32, [4]> var_7812_end_0 = const()[name = tensor<string, []>("op_7812_end_0"), val = tensor<int32, [4]>([2, 320, 1, 4096])];
            tensor<bool, [4]> var_7812_end_mask_0 = const()[name = tensor<string, []>("op_7812_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_7812_cast = slice_by_index(begin = var_7812_begin_0, end = var_7812_end_0, end_mask = var_7812_end_mask_0, x = v_53_cast);
            tensor<string, []> var_7816_equation_0 = const()[name = tensor<string, []>("op_7816_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_7816_cast = einsum(equation = var_7816_equation_0, values = (var_7754_cast, var_7719_cast));
            tensor<fp16, []> var_7817_to_fp16 = const()[name = tensor<string, []>("op_7817_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_417_cast = mul(x = var_7816_cast, y = var_7817_to_fp16);
            tensor<string, []> var_7820_equation_0 = const()[name = tensor<string, []>("op_7820_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_7820_cast = einsum(equation = var_7820_equation_0, values = (var_7758_cast, var_7723_cast));
            tensor<fp16, []> var_7821_to_fp16 = const()[name = tensor<string, []>("op_7821_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_419_cast = mul(x = var_7820_cast, y = var_7821_to_fp16);
            tensor<string, []> var_7824_equation_0 = const()[name = tensor<string, []>("op_7824_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_7824_cast = einsum(equation = var_7824_equation_0, values = (var_7762_cast, var_7727_cast));
            tensor<fp16, []> var_7825_to_fp16 = const()[name = tensor<string, []>("op_7825_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_421_cast = mul(x = var_7824_cast, y = var_7825_to_fp16);
            tensor<string, []> var_7828_equation_0 = const()[name = tensor<string, []>("op_7828_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_7828_cast = einsum(equation = var_7828_equation_0, values = (var_7766_cast, var_7731_cast));
            tensor<fp16, []> var_7829_to_fp16 = const()[name = tensor<string, []>("op_7829_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_423_cast = mul(x = var_7828_cast, y = var_7829_to_fp16);
            tensor<string, []> var_7832_equation_0 = const()[name = tensor<string, []>("op_7832_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_7832_cast = einsum(equation = var_7832_equation_0, values = (var_7770_cast, var_7735_cast));
            tensor<fp16, []> var_7833_to_fp16 = const()[name = tensor<string, []>("op_7833_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_425_cast = mul(x = var_7832_cast, y = var_7833_to_fp16);
            tensor<string, []> var_7836_equation_0 = const()[name = tensor<string, []>("op_7836_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_7836_cast = einsum(equation = var_7836_equation_0, values = (var_7774_cast, var_7739_cast));
            tensor<fp16, []> var_7837_to_fp16 = const()[name = tensor<string, []>("op_7837_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_427_cast = mul(x = var_7836_cast, y = var_7837_to_fp16);
            tensor<string, []> var_7840_equation_0 = const()[name = tensor<string, []>("op_7840_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_7840_cast = einsum(equation = var_7840_equation_0, values = (var_7778_cast, var_7743_cast));
            tensor<fp16, []> var_7841_to_fp16 = const()[name = tensor<string, []>("op_7841_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_429_cast = mul(x = var_7840_cast, y = var_7841_to_fp16);
            tensor<string, []> var_7844_equation_0 = const()[name = tensor<string, []>("op_7844_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_7844_cast = einsum(equation = var_7844_equation_0, values = (var_7782_cast, var_7747_cast));
            tensor<fp16, []> var_7845_to_fp16 = const()[name = tensor<string, []>("op_7845_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_431_cast = mul(x = var_7844_cast, y = var_7845_to_fp16);
            tensor<fp16, [2, 4096, 1, 4096]> var_7847_cast = softmax(axis = var_7587, x = aw_417_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_7848_cast = softmax(axis = var_7587, x = aw_419_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_7849_cast = softmax(axis = var_7587, x = aw_421_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_7850_cast = softmax(axis = var_7587, x = aw_423_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_7851_cast = softmax(axis = var_7587, x = aw_425_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_7852_cast = softmax(axis = var_7587, x = aw_427_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_7853_cast = softmax(axis = var_7587, x = aw_429_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_7854_cast = softmax(axis = var_7587, x = aw_431_cast);
            tensor<string, []> var_7856_equation_0 = const()[name = tensor<string, []>("op_7856_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_7856_cast = einsum(equation = var_7856_equation_0, values = (var_7784_cast, var_7847_cast));
            tensor<string, []> var_7858_equation_0 = const()[name = tensor<string, []>("op_7858_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_7858_cast = einsum(equation = var_7858_equation_0, values = (var_7788_cast, var_7848_cast));
            tensor<string, []> var_7860_equation_0 = const()[name = tensor<string, []>("op_7860_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_7860_cast = einsum(equation = var_7860_equation_0, values = (var_7792_cast, var_7849_cast));
            tensor<string, []> var_7862_equation_0 = const()[name = tensor<string, []>("op_7862_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_7862_cast = einsum(equation = var_7862_equation_0, values = (var_7796_cast, var_7850_cast));
            tensor<string, []> var_7864_equation_0 = const()[name = tensor<string, []>("op_7864_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_7864_cast = einsum(equation = var_7864_equation_0, values = (var_7800_cast, var_7851_cast));
            tensor<string, []> var_7866_equation_0 = const()[name = tensor<string, []>("op_7866_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_7866_cast = einsum(equation = var_7866_equation_0, values = (var_7804_cast, var_7852_cast));
            tensor<string, []> var_7868_equation_0 = const()[name = tensor<string, []>("op_7868_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_7868_cast = einsum(equation = var_7868_equation_0, values = (var_7808_cast, var_7853_cast));
            tensor<string, []> var_7870_equation_0 = const()[name = tensor<string, []>("op_7870_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_7870_cast = einsum(equation = var_7870_equation_0, values = (var_7812_cast, var_7854_cast));
            tensor<bool, []> input_465_interleave_0 = const()[name = tensor<string, []>("input_465_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 320, 1, 4096]> input_465_cast = concat(axis = var_7587, interleave = input_465_interleave_0, values = (var_7856_cast, var_7858_cast, var_7860_cast, var_7862_cast, var_7864_cast, var_7866_cast, var_7868_cast, var_7870_cast));
            tensor<int32, [2]> var_7876 = const()[name = tensor<string, []>("op_7876"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7878 = const()[name = tensor<string, []>("op_7878"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_7880_pad_type_0 = const()[name = tensor<string, []>("op_7880_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_7880_pad_0 = const()[name = tensor<string, []>("op_7880_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_0_transformer_blocks_0_attn1_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_0_transformer_blocks_0_attn1_to_out_0_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(803636864)))];
            tensor<fp16, [320]> up_blocks_3_attentions_0_transformer_blocks_0_attn1_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_0_transformer_blocks_0_attn1_to_out_0_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(803841728)))];
            tensor<fp16, [2, 320, 1, 4096]> var_7880_cast = conv(bias = up_blocks_3_attentions_0_transformer_blocks_0_attn1_to_out_0_bias_to_fp16, dilations = var_7878, groups = var_7587, pad = var_7880_pad_0, pad_type = var_7880_pad_type_0, strides = var_7876, weight = up_blocks_3_attentions_0_transformer_blocks_0_attn1_to_out_0_weight_to_fp16, x = input_465_cast);
            tensor<fp16, [2, 320, 1, 4096]> inputs_81_cast = add(x = var_7880_cast, y = inputs_79_cast);
            tensor<int32, [1]> var_7884 = const()[name = tensor<string, []>("op_7884"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> channels_mean_81_cast = reduce_mean(axes = var_7884, keep_dims = var_7582, x = inputs_81_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_81_cast = sub(x = inputs_81_cast, y = channels_mean_81_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_sq_81_cast = mul(x = zero_mean_81_cast, y = zero_mean_81_cast);
            tensor<int32, [1]> var_7888 = const()[name = tensor<string, []>("op_7888"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> var_7889_cast = reduce_mean(axes = var_7888, keep_dims = var_7582, x = zero_mean_sq_81_cast);
            tensor<fp16, []> var_7890_to_fp16 = const()[name = tensor<string, []>("op_7890_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 4096]> var_7891_cast = add(x = var_7889_cast, y = var_7890_to_fp16);
            tensor<fp16, []> denom_81_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_81_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 4096]> denom_81_cast = rsqrt(epsilon = denom_81_epsilon_0_to_fp16, x = var_7891_cast);
            tensor<fp16, [2, 320, 1, 4096]> out_81_cast = mul(x = zero_mean_81_cast, y = denom_81_cast);
            tensor<fp16, [1, 320, 1, 1]> var_7895_to_fp16 = const()[name = tensor<string, []>("op_7895_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(803842432)))];
            tensor<fp16, [2, 320, 1, 4096]> var_7896_cast = add(x = out_81_cast, y = var_7895_to_fp16);
            tensor<fp16, [1, 320, 1, 1]> var_7898_to_fp16 = const()[name = tensor<string, []>("op_7898_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(803843136)))];
            tensor<fp16, [2, 320, 1, 4096]> hidden_states_289_cast = mul(x = var_7896_cast, y = var_7898_to_fp16);
            tensor<int32, [2]> var_7905 = const()[name = tensor<string, []>("op_7905"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7907 = const()[name = tensor<string, []>("op_7907"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_55_pad_type_0 = const()[name = tensor<string, []>("q_55_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_55_pad_0 = const()[name = tensor<string, []>("q_55_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_0_transformer_blocks_0_attn2_to_q_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_0_transformer_blocks_0_attn2_to_q_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(803843840)))];
            tensor<fp16, [2, 320, 1, 4096]> q_55_cast = conv(dilations = var_7907, groups = var_7587, pad = q_55_pad_0, pad_type = q_55_pad_type_0, strides = var_7905, weight = up_blocks_3_attentions_0_transformer_blocks_0_attn2_to_q_weight_to_fp16, x = hidden_states_289_cast);
            tensor<int32, [2]> var_7911 = const()[name = tensor<string, []>("op_7911"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7913 = const()[name = tensor<string, []>("op_7913"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_109_pad_type_0 = const()[name = tensor<string, []>("k_109_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_109_pad_0 = const()[name = tensor<string, []>("k_109_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 768, 1, 1]> up_blocks_3_attentions_0_transformer_blocks_0_attn2_to_k_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_0_transformer_blocks_0_attn2_to_k_weight_to_fp16"), val = tensor<fp16, [320, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(804048704)))];
            tensor<fp16, [2, 320, 1, 77]> k_109_cast = conv(dilations = var_7913, groups = var_7587, pad = k_109_pad_0, pad_type = k_109_pad_type_0, strides = var_7911, weight = up_blocks_3_attentions_0_transformer_blocks_0_attn2_to_k_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [2]> var_7917 = const()[name = tensor<string, []>("op_7917"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7919 = const()[name = tensor<string, []>("op_7919"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_55_pad_type_0 = const()[name = tensor<string, []>("v_55_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_55_pad_0 = const()[name = tensor<string, []>("v_55_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 768, 1, 1]> up_blocks_3_attentions_0_transformer_blocks_0_attn2_to_v_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_0_transformer_blocks_0_attn2_to_v_weight_to_fp16"), val = tensor<fp16, [320, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(804540288)))];
            tensor<fp16, [2, 320, 1, 77]> v_55_cast = conv(dilations = var_7919, groups = var_7587, pad = v_55_pad_0, pad_type = v_55_pad_type_0, strides = var_7917, weight = up_blocks_3_attentions_0_transformer_blocks_0_attn2_to_v_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [4]> var_7923_begin_0 = const()[name = tensor<string, []>("op_7923_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_7923_end_0 = const()[name = tensor<string, []>("op_7923_end_0"), val = tensor<int32, [4]>([2, 40, 1, 4096])];
            tensor<bool, [4]> var_7923_end_mask_0 = const()[name = tensor<string, []>("op_7923_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_7923_cast = slice_by_index(begin = var_7923_begin_0, end = var_7923_end_0, end_mask = var_7923_end_mask_0, x = q_55_cast);
            tensor<int32, [4]> var_7927_begin_0 = const()[name = tensor<string, []>("op_7927_begin_0"), val = tensor<int32, [4]>([0, 40, 0, 0])];
            tensor<int32, [4]> var_7927_end_0 = const()[name = tensor<string, []>("op_7927_end_0"), val = tensor<int32, [4]>([2, 80, 1, 4096])];
            tensor<bool, [4]> var_7927_end_mask_0 = const()[name = tensor<string, []>("op_7927_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_7927_cast = slice_by_index(begin = var_7927_begin_0, end = var_7927_end_0, end_mask = var_7927_end_mask_0, x = q_55_cast);
            tensor<int32, [4]> var_7931_begin_0 = const()[name = tensor<string, []>("op_7931_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_7931_end_0 = const()[name = tensor<string, []>("op_7931_end_0"), val = tensor<int32, [4]>([2, 120, 1, 4096])];
            tensor<bool, [4]> var_7931_end_mask_0 = const()[name = tensor<string, []>("op_7931_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_7931_cast = slice_by_index(begin = var_7931_begin_0, end = var_7931_end_0, end_mask = var_7931_end_mask_0, x = q_55_cast);
            tensor<int32, [4]> var_7935_begin_0 = const()[name = tensor<string, []>("op_7935_begin_0"), val = tensor<int32, [4]>([0, 120, 0, 0])];
            tensor<int32, [4]> var_7935_end_0 = const()[name = tensor<string, []>("op_7935_end_0"), val = tensor<int32, [4]>([2, 160, 1, 4096])];
            tensor<bool, [4]> var_7935_end_mask_0 = const()[name = tensor<string, []>("op_7935_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_7935_cast = slice_by_index(begin = var_7935_begin_0, end = var_7935_end_0, end_mask = var_7935_end_mask_0, x = q_55_cast);
            tensor<int32, [4]> var_7939_begin_0 = const()[name = tensor<string, []>("op_7939_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_7939_end_0 = const()[name = tensor<string, []>("op_7939_end_0"), val = tensor<int32, [4]>([2, 200, 1, 4096])];
            tensor<bool, [4]> var_7939_end_mask_0 = const()[name = tensor<string, []>("op_7939_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_7939_cast = slice_by_index(begin = var_7939_begin_0, end = var_7939_end_0, end_mask = var_7939_end_mask_0, x = q_55_cast);
            tensor<int32, [4]> var_7943_begin_0 = const()[name = tensor<string, []>("op_7943_begin_0"), val = tensor<int32, [4]>([0, 200, 0, 0])];
            tensor<int32, [4]> var_7943_end_0 = const()[name = tensor<string, []>("op_7943_end_0"), val = tensor<int32, [4]>([2, 240, 1, 4096])];
            tensor<bool, [4]> var_7943_end_mask_0 = const()[name = tensor<string, []>("op_7943_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_7943_cast = slice_by_index(begin = var_7943_begin_0, end = var_7943_end_0, end_mask = var_7943_end_mask_0, x = q_55_cast);
            tensor<int32, [4]> var_7947_begin_0 = const()[name = tensor<string, []>("op_7947_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_7947_end_0 = const()[name = tensor<string, []>("op_7947_end_0"), val = tensor<int32, [4]>([2, 280, 1, 4096])];
            tensor<bool, [4]> var_7947_end_mask_0 = const()[name = tensor<string, []>("op_7947_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_7947_cast = slice_by_index(begin = var_7947_begin_0, end = var_7947_end_0, end_mask = var_7947_end_mask_0, x = q_55_cast);
            tensor<int32, [4]> var_7951_begin_0 = const()[name = tensor<string, []>("op_7951_begin_0"), val = tensor<int32, [4]>([0, 280, 0, 0])];
            tensor<int32, [4]> var_7951_end_0 = const()[name = tensor<string, []>("op_7951_end_0"), val = tensor<int32, [4]>([2, 320, 1, 4096])];
            tensor<bool, [4]> var_7951_end_mask_0 = const()[name = tensor<string, []>("op_7951_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_7951_cast = slice_by_index(begin = var_7951_begin_0, end = var_7951_end_0, end_mask = var_7951_end_mask_0, x = q_55_cast);
            tensor<int32, [4]> k_111_perm_0 = const()[name = tensor<string, []>("k_111_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_7958_begin_0 = const()[name = tensor<string, []>("op_7958_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_7958_end_0 = const()[name = tensor<string, []>("op_7958_end_0"), val = tensor<int32, [4]>([2, 77, 1, 40])];
            tensor<bool, [4]> var_7958_end_mask_0 = const()[name = tensor<string, []>("op_7958_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 320]> transpose_4 = transpose(perm = k_111_perm_0, x = k_109_cast);
            tensor<fp16, [2, 77, 1, 40]> var_7958_cast = slice_by_index(begin = var_7958_begin_0, end = var_7958_end_0, end_mask = var_7958_end_mask_0, x = transpose_4);
            tensor<int32, [4]> var_7962_begin_0 = const()[name = tensor<string, []>("op_7962_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 40])];
            tensor<int32, [4]> var_7962_end_0 = const()[name = tensor<string, []>("op_7962_end_0"), val = tensor<int32, [4]>([2, 77, 1, 80])];
            tensor<bool, [4]> var_7962_end_mask_0 = const()[name = tensor<string, []>("op_7962_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_7962_cast = slice_by_index(begin = var_7962_begin_0, end = var_7962_end_0, end_mask = var_7962_end_mask_0, x = transpose_4);
            tensor<int32, [4]> var_7966_begin_0 = const()[name = tensor<string, []>("op_7966_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 80])];
            tensor<int32, [4]> var_7966_end_0 = const()[name = tensor<string, []>("op_7966_end_0"), val = tensor<int32, [4]>([2, 77, 1, 120])];
            tensor<bool, [4]> var_7966_end_mask_0 = const()[name = tensor<string, []>("op_7966_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_7966_cast = slice_by_index(begin = var_7966_begin_0, end = var_7966_end_0, end_mask = var_7966_end_mask_0, x = transpose_4);
            tensor<int32, [4]> var_7970_begin_0 = const()[name = tensor<string, []>("op_7970_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 120])];
            tensor<int32, [4]> var_7970_end_0 = const()[name = tensor<string, []>("op_7970_end_0"), val = tensor<int32, [4]>([2, 77, 1, 160])];
            tensor<bool, [4]> var_7970_end_mask_0 = const()[name = tensor<string, []>("op_7970_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_7970_cast = slice_by_index(begin = var_7970_begin_0, end = var_7970_end_0, end_mask = var_7970_end_mask_0, x = transpose_4);
            tensor<int32, [4]> var_7974_begin_0 = const()[name = tensor<string, []>("op_7974_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 160])];
            tensor<int32, [4]> var_7974_end_0 = const()[name = tensor<string, []>("op_7974_end_0"), val = tensor<int32, [4]>([2, 77, 1, 200])];
            tensor<bool, [4]> var_7974_end_mask_0 = const()[name = tensor<string, []>("op_7974_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_7974_cast = slice_by_index(begin = var_7974_begin_0, end = var_7974_end_0, end_mask = var_7974_end_mask_0, x = transpose_4);
            tensor<int32, [4]> var_7978_begin_0 = const()[name = tensor<string, []>("op_7978_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 200])];
            tensor<int32, [4]> var_7978_end_0 = const()[name = tensor<string, []>("op_7978_end_0"), val = tensor<int32, [4]>([2, 77, 1, 240])];
            tensor<bool, [4]> var_7978_end_mask_0 = const()[name = tensor<string, []>("op_7978_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_7978_cast = slice_by_index(begin = var_7978_begin_0, end = var_7978_end_0, end_mask = var_7978_end_mask_0, x = transpose_4);
            tensor<int32, [4]> var_7982_begin_0 = const()[name = tensor<string, []>("op_7982_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 240])];
            tensor<int32, [4]> var_7982_end_0 = const()[name = tensor<string, []>("op_7982_end_0"), val = tensor<int32, [4]>([2, 77, 1, 280])];
            tensor<bool, [4]> var_7982_end_mask_0 = const()[name = tensor<string, []>("op_7982_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_7982_cast = slice_by_index(begin = var_7982_begin_0, end = var_7982_end_0, end_mask = var_7982_end_mask_0, x = transpose_4);
            tensor<int32, [4]> var_7986_begin_0 = const()[name = tensor<string, []>("op_7986_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 280])];
            tensor<int32, [4]> var_7986_end_0 = const()[name = tensor<string, []>("op_7986_end_0"), val = tensor<int32, [4]>([2, 77, 1, 320])];
            tensor<bool, [4]> var_7986_end_mask_0 = const()[name = tensor<string, []>("op_7986_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_7986_cast = slice_by_index(begin = var_7986_begin_0, end = var_7986_end_0, end_mask = var_7986_end_mask_0, x = transpose_4);
            tensor<int32, [4]> var_7988_begin_0 = const()[name = tensor<string, []>("op_7988_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_7988_end_0 = const()[name = tensor<string, []>("op_7988_end_0"), val = tensor<int32, [4]>([2, 40, 1, 77])];
            tensor<bool, [4]> var_7988_end_mask_0 = const()[name = tensor<string, []>("op_7988_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_7988_cast = slice_by_index(begin = var_7988_begin_0, end = var_7988_end_0, end_mask = var_7988_end_mask_0, x = v_55_cast);
            tensor<int32, [4]> var_7992_begin_0 = const()[name = tensor<string, []>("op_7992_begin_0"), val = tensor<int32, [4]>([0, 40, 0, 0])];
            tensor<int32, [4]> var_7992_end_0 = const()[name = tensor<string, []>("op_7992_end_0"), val = tensor<int32, [4]>([2, 80, 1, 77])];
            tensor<bool, [4]> var_7992_end_mask_0 = const()[name = tensor<string, []>("op_7992_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_7992_cast = slice_by_index(begin = var_7992_begin_0, end = var_7992_end_0, end_mask = var_7992_end_mask_0, x = v_55_cast);
            tensor<int32, [4]> var_7996_begin_0 = const()[name = tensor<string, []>("op_7996_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_7996_end_0 = const()[name = tensor<string, []>("op_7996_end_0"), val = tensor<int32, [4]>([2, 120, 1, 77])];
            tensor<bool, [4]> var_7996_end_mask_0 = const()[name = tensor<string, []>("op_7996_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_7996_cast = slice_by_index(begin = var_7996_begin_0, end = var_7996_end_0, end_mask = var_7996_end_mask_0, x = v_55_cast);
            tensor<int32, [4]> var_8000_begin_0 = const()[name = tensor<string, []>("op_8000_begin_0"), val = tensor<int32, [4]>([0, 120, 0, 0])];
            tensor<int32, [4]> var_8000_end_0 = const()[name = tensor<string, []>("op_8000_end_0"), val = tensor<int32, [4]>([2, 160, 1, 77])];
            tensor<bool, [4]> var_8000_end_mask_0 = const()[name = tensor<string, []>("op_8000_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_8000_cast = slice_by_index(begin = var_8000_begin_0, end = var_8000_end_0, end_mask = var_8000_end_mask_0, x = v_55_cast);
            tensor<int32, [4]> var_8004_begin_0 = const()[name = tensor<string, []>("op_8004_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_8004_end_0 = const()[name = tensor<string, []>("op_8004_end_0"), val = tensor<int32, [4]>([2, 200, 1, 77])];
            tensor<bool, [4]> var_8004_end_mask_0 = const()[name = tensor<string, []>("op_8004_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_8004_cast = slice_by_index(begin = var_8004_begin_0, end = var_8004_end_0, end_mask = var_8004_end_mask_0, x = v_55_cast);
            tensor<int32, [4]> var_8008_begin_0 = const()[name = tensor<string, []>("op_8008_begin_0"), val = tensor<int32, [4]>([0, 200, 0, 0])];
            tensor<int32, [4]> var_8008_end_0 = const()[name = tensor<string, []>("op_8008_end_0"), val = tensor<int32, [4]>([2, 240, 1, 77])];
            tensor<bool, [4]> var_8008_end_mask_0 = const()[name = tensor<string, []>("op_8008_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_8008_cast = slice_by_index(begin = var_8008_begin_0, end = var_8008_end_0, end_mask = var_8008_end_mask_0, x = v_55_cast);
            tensor<int32, [4]> var_8012_begin_0 = const()[name = tensor<string, []>("op_8012_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_8012_end_0 = const()[name = tensor<string, []>("op_8012_end_0"), val = tensor<int32, [4]>([2, 280, 1, 77])];
            tensor<bool, [4]> var_8012_end_mask_0 = const()[name = tensor<string, []>("op_8012_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_8012_cast = slice_by_index(begin = var_8012_begin_0, end = var_8012_end_0, end_mask = var_8012_end_mask_0, x = v_55_cast);
            tensor<int32, [4]> var_8016_begin_0 = const()[name = tensor<string, []>("op_8016_begin_0"), val = tensor<int32, [4]>([0, 280, 0, 0])];
            tensor<int32, [4]> var_8016_end_0 = const()[name = tensor<string, []>("op_8016_end_0"), val = tensor<int32, [4]>([2, 320, 1, 77])];
            tensor<bool, [4]> var_8016_end_mask_0 = const()[name = tensor<string, []>("op_8016_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_8016_cast = slice_by_index(begin = var_8016_begin_0, end = var_8016_end_0, end_mask = var_8016_end_mask_0, x = v_55_cast);
            tensor<string, []> var_8020_equation_0 = const()[name = tensor<string, []>("op_8020_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_8020_cast = einsum(equation = var_8020_equation_0, values = (var_7958_cast, var_7923_cast));
            tensor<fp16, []> var_8021_to_fp16 = const()[name = tensor<string, []>("op_8021_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_433_cast = mul(x = var_8020_cast, y = var_8021_to_fp16);
            tensor<string, []> var_8024_equation_0 = const()[name = tensor<string, []>("op_8024_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_8024_cast = einsum(equation = var_8024_equation_0, values = (var_7962_cast, var_7927_cast));
            tensor<fp16, []> var_8025_to_fp16 = const()[name = tensor<string, []>("op_8025_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_435_cast = mul(x = var_8024_cast, y = var_8025_to_fp16);
            tensor<string, []> var_8028_equation_0 = const()[name = tensor<string, []>("op_8028_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_8028_cast = einsum(equation = var_8028_equation_0, values = (var_7966_cast, var_7931_cast));
            tensor<fp16, []> var_8029_to_fp16 = const()[name = tensor<string, []>("op_8029_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_437_cast = mul(x = var_8028_cast, y = var_8029_to_fp16);
            tensor<string, []> var_8032_equation_0 = const()[name = tensor<string, []>("op_8032_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_8032_cast = einsum(equation = var_8032_equation_0, values = (var_7970_cast, var_7935_cast));
            tensor<fp16, []> var_8033_to_fp16 = const()[name = tensor<string, []>("op_8033_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_439_cast = mul(x = var_8032_cast, y = var_8033_to_fp16);
            tensor<string, []> var_8036_equation_0 = const()[name = tensor<string, []>("op_8036_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_8036_cast = einsum(equation = var_8036_equation_0, values = (var_7974_cast, var_7939_cast));
            tensor<fp16, []> var_8037_to_fp16 = const()[name = tensor<string, []>("op_8037_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_441_cast = mul(x = var_8036_cast, y = var_8037_to_fp16);
            tensor<string, []> var_8040_equation_0 = const()[name = tensor<string, []>("op_8040_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_8040_cast = einsum(equation = var_8040_equation_0, values = (var_7978_cast, var_7943_cast));
            tensor<fp16, []> var_8041_to_fp16 = const()[name = tensor<string, []>("op_8041_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_443_cast = mul(x = var_8040_cast, y = var_8041_to_fp16);
            tensor<string, []> var_8044_equation_0 = const()[name = tensor<string, []>("op_8044_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_8044_cast = einsum(equation = var_8044_equation_0, values = (var_7982_cast, var_7947_cast));
            tensor<fp16, []> var_8045_to_fp16 = const()[name = tensor<string, []>("op_8045_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_445_cast = mul(x = var_8044_cast, y = var_8045_to_fp16);
            tensor<string, []> var_8048_equation_0 = const()[name = tensor<string, []>("op_8048_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_8048_cast = einsum(equation = var_8048_equation_0, values = (var_7986_cast, var_7951_cast));
            tensor<fp16, []> var_8049_to_fp16 = const()[name = tensor<string, []>("op_8049_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_447_cast = mul(x = var_8048_cast, y = var_8049_to_fp16);
            tensor<fp16, [2, 77, 1, 4096]> var_8051_cast = softmax(axis = var_7587, x = aw_433_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_8052_cast = softmax(axis = var_7587, x = aw_435_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_8053_cast = softmax(axis = var_7587, x = aw_437_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_8054_cast = softmax(axis = var_7587, x = aw_439_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_8055_cast = softmax(axis = var_7587, x = aw_441_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_8056_cast = softmax(axis = var_7587, x = aw_443_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_8057_cast = softmax(axis = var_7587, x = aw_445_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_8058_cast = softmax(axis = var_7587, x = aw_447_cast);
            tensor<string, []> var_8060_equation_0 = const()[name = tensor<string, []>("op_8060_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_8060_cast = einsum(equation = var_8060_equation_0, values = (var_7988_cast, var_8051_cast));
            tensor<string, []> var_8062_equation_0 = const()[name = tensor<string, []>("op_8062_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_8062_cast = einsum(equation = var_8062_equation_0, values = (var_7992_cast, var_8052_cast));
            tensor<string, []> var_8064_equation_0 = const()[name = tensor<string, []>("op_8064_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_8064_cast = einsum(equation = var_8064_equation_0, values = (var_7996_cast, var_8053_cast));
            tensor<string, []> var_8066_equation_0 = const()[name = tensor<string, []>("op_8066_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_8066_cast = einsum(equation = var_8066_equation_0, values = (var_8000_cast, var_8054_cast));
            tensor<string, []> var_8068_equation_0 = const()[name = tensor<string, []>("op_8068_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_8068_cast = einsum(equation = var_8068_equation_0, values = (var_8004_cast, var_8055_cast));
            tensor<string, []> var_8070_equation_0 = const()[name = tensor<string, []>("op_8070_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_8070_cast = einsum(equation = var_8070_equation_0, values = (var_8008_cast, var_8056_cast));
            tensor<string, []> var_8072_equation_0 = const()[name = tensor<string, []>("op_8072_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_8072_cast = einsum(equation = var_8072_equation_0, values = (var_8012_cast, var_8057_cast));
            tensor<string, []> var_8074_equation_0 = const()[name = tensor<string, []>("op_8074_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_8074_cast = einsum(equation = var_8074_equation_0, values = (var_8016_cast, var_8058_cast));
            tensor<bool, []> input_467_interleave_0 = const()[name = tensor<string, []>("input_467_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 320, 1, 4096]> input_467_cast = concat(axis = var_7587, interleave = input_467_interleave_0, values = (var_8060_cast, var_8062_cast, var_8064_cast, var_8066_cast, var_8068_cast, var_8070_cast, var_8072_cast, var_8074_cast));
            tensor<int32, [2]> var_8080 = const()[name = tensor<string, []>("op_8080"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8082 = const()[name = tensor<string, []>("op_8082"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_8084_pad_type_0 = const()[name = tensor<string, []>("op_8084_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_8084_pad_0 = const()[name = tensor<string, []>("op_8084_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_0_transformer_blocks_0_attn2_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_0_transformer_blocks_0_attn2_to_out_0_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(805031872)))];
            tensor<fp16, [320]> up_blocks_3_attentions_0_transformer_blocks_0_attn2_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_0_transformer_blocks_0_attn2_to_out_0_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(805236736)))];
            tensor<fp16, [2, 320, 1, 4096]> var_8084_cast = conv(bias = up_blocks_3_attentions_0_transformer_blocks_0_attn2_to_out_0_bias_to_fp16, dilations = var_8082, groups = var_7587, pad = var_8084_pad_0, pad_type = var_8084_pad_type_0, strides = var_8080, weight = up_blocks_3_attentions_0_transformer_blocks_0_attn2_to_out_0_weight_to_fp16, x = input_467_cast);
            tensor<fp16, [2, 320, 1, 4096]> inputs_83_cast = add(x = var_8084_cast, y = inputs_81_cast);
            tensor<int32, [1]> var_8088 = const()[name = tensor<string, []>("op_8088"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> channels_mean_83_cast = reduce_mean(axes = var_8088, keep_dims = var_7582, x = inputs_83_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_83_cast = sub(x = inputs_83_cast, y = channels_mean_83_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_sq_83_cast = mul(x = zero_mean_83_cast, y = zero_mean_83_cast);
            tensor<int32, [1]> var_8092 = const()[name = tensor<string, []>("op_8092"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> var_8093_cast = reduce_mean(axes = var_8092, keep_dims = var_7582, x = zero_mean_sq_83_cast);
            tensor<fp16, []> var_8094_to_fp16 = const()[name = tensor<string, []>("op_8094_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 4096]> var_8095_cast = add(x = var_8093_cast, y = var_8094_to_fp16);
            tensor<fp16, []> denom_83_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_83_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 4096]> denom_83_cast = rsqrt(epsilon = denom_83_epsilon_0_to_fp16, x = var_8095_cast);
            tensor<fp16, [2, 320, 1, 4096]> out_83_cast = mul(x = zero_mean_83_cast, y = denom_83_cast);
            tensor<fp16, [1, 320, 1, 1]> var_8099_to_fp16 = const()[name = tensor<string, []>("op_8099_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(805237440)))];
            tensor<fp16, [2, 320, 1, 4096]> var_8100_cast = add(x = out_83_cast, y = var_8099_to_fp16);
            tensor<fp16, [1, 320, 1, 1]> var_8102_to_fp16 = const()[name = tensor<string, []>("op_8102_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(805238144)))];
            tensor<fp16, [2, 320, 1, 4096]> input_469_cast = mul(x = var_8100_cast, y = var_8102_to_fp16);
            tensor<int32, [2]> var_8110 = const()[name = tensor<string, []>("op_8110"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8112 = const()[name = tensor<string, []>("op_8112"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_8114_pad_type_0 = const()[name = tensor<string, []>("op_8114_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_8114_pad_0 = const()[name = tensor<string, []>("op_8114_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [2560, 320, 1, 1]> up_blocks_3_attentions_0_transformer_blocks_0_ff_net_0_proj_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_0_transformer_blocks_0_ff_net_0_proj_weight_to_fp16"), val = tensor<fp16, [2560, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(805238848)))];
            tensor<fp16, [2560]> up_blocks_3_attentions_0_transformer_blocks_0_ff_net_0_proj_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_0_transformer_blocks_0_ff_net_0_proj_bias_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(806877312)))];
            tensor<fp16, [2, 2560, 1, 4096]> var_8114_cast = conv(bias = up_blocks_3_attentions_0_transformer_blocks_0_ff_net_0_proj_bias_to_fp16, dilations = var_8112, groups = var_7587, pad = var_8114_pad_0, pad_type = var_8114_pad_type_0, strides = var_8110, weight = up_blocks_3_attentions_0_transformer_blocks_0_ff_net_0_proj_weight_to_fp16, x = input_469_cast);
            tensor<int32, [2]> var_8115_split_sizes_0 = const()[name = tensor<string, []>("op_8115_split_sizes_0"), val = tensor<int32, [2]>([1280, 1280])];
            tensor<int32, []> var_8115_axis_0 = const()[name = tensor<string, []>("op_8115_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [2, 1280, 1, 4096]> var_8115_cast_0, tensor<fp16, [2, 1280, 1, 4096]> var_8115_cast_1 = split(axis = var_8115_axis_0, split_sizes = var_8115_split_sizes_0, x = var_8114_cast);
            tensor<string, []> var_8117_mode_0 = const()[name = tensor<string, []>("op_8117_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [2, 1280, 1, 4096]> var_8117_cast = gelu(mode = var_8117_mode_0, x = var_8115_cast_1);
            tensor<fp16, [2, 1280, 1, 4096]> input_471_cast = mul(x = var_8115_cast_0, y = var_8117_cast);
            tensor<int32, [2]> var_8121 = const()[name = tensor<string, []>("op_8121"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8123 = const()[name = tensor<string, []>("op_8123"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_8125_pad_type_0 = const()[name = tensor<string, []>("op_8125_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_8125_pad_0 = const()[name = tensor<string, []>("op_8125_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 1280, 1, 1]> up_blocks_3_attentions_0_transformer_blocks_0_ff_net_2_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_0_transformer_blocks_0_ff_net_2_weight_to_fp16"), val = tensor<fp16, [320, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(806882496)))];
            tensor<fp16, [320]> up_blocks_3_attentions_0_transformer_blocks_0_ff_net_2_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_0_transformer_blocks_0_ff_net_2_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(807701760)))];
            tensor<fp16, [2, 320, 1, 4096]> var_8125_cast = conv(bias = up_blocks_3_attentions_0_transformer_blocks_0_ff_net_2_bias_to_fp16, dilations = var_8123, groups = var_7587, pad = var_8125_pad_0, pad_type = var_8125_pad_type_0, strides = var_8121, weight = up_blocks_3_attentions_0_transformer_blocks_0_ff_net_2_weight_to_fp16, x = input_471_cast);
            tensor<fp16, [2, 320, 1, 4096]> hidden_states_293_cast = add(x = var_8125_cast, y = inputs_83_cast);
            tensor<int32, [4]> var_8127 = const()[name = tensor<string, []>("op_8127"), val = tensor<int32, [4]>([2, 320, 64, 64])];
            tensor<fp16, [2, 320, 64, 64]> input_473_cast = reshape(shape = var_8127, x = hidden_states_293_cast);
            tensor<int32, [2]> var_8131 = const()[name = tensor<string, []>("op_8131"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8133 = const()[name = tensor<string, []>("op_8133"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_295_pad_type_0 = const()[name = tensor<string, []>("hidden_states_295_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_295_pad_0 = const()[name = tensor<string, []>("hidden_states_295_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_0_proj_out_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_0_proj_out_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(807702464)))];
            tensor<fp16, [320]> up_blocks_3_attentions_0_proj_out_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_0_proj_out_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(807907328)))];
            tensor<fp16, [2, 320, 64, 64]> hidden_states_295_cast = conv(bias = up_blocks_3_attentions_0_proj_out_bias_to_fp16, dilations = var_8133, groups = var_7587, pad = hidden_states_295_pad_0, pad_type = hidden_states_295_pad_type_0, strides = var_8131, weight = up_blocks_3_attentions_0_proj_out_weight_to_fp16, x = input_473_cast);
            tensor<fp16, [2, 320, 64, 64]> hidden_states_297_cast = add(x = hidden_states_295_cast, y = hidden_states_283_cast);
            tensor<bool, []> input_475_interleave_0 = const()[name = tensor<string, []>("input_475_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 320, 64, 64]> cast_11 = cast(dtype = cast_12_dtype_0, x = input_35_cast);
            tensor<fp16, [2, 640, 64, 64]> input_475_cast = concat(axis = var_7587, interleave = input_475_interleave_0, values = (hidden_states_297_cast, cast_11));
            tensor<int32, [5]> reshape_216_shape_0 = const()[name = tensor<string, []>("reshape_216_shape_0"), val = tensor<int32, [5]>([2, 32, 20, 64, 64])];
            tensor<fp16, [2, 32, 20, 64, 64]> reshape_216_cast = reshape(shape = reshape_216_shape_0, x = input_475_cast);
            tensor<int32, [3]> reduce_mean_162_axes_0 = const()[name = tensor<string, []>("reduce_mean_162_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_162_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_162_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_162_cast = reduce_mean(axes = reduce_mean_162_axes_0, keep_dims = reduce_mean_162_keep_dims_0, x = reshape_216_cast);
            tensor<fp16, [2, 32, 20, 64, 64]> sub_108_cast = sub(x = reshape_216_cast, y = reduce_mean_162_cast);
            tensor<fp16, [2, 32, 20, 64, 64]> square_54_cast = square(x = sub_108_cast);
            tensor<int32, [3]> reduce_mean_164_axes_0 = const()[name = tensor<string, []>("reduce_mean_164_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_164_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_164_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_164_cast = reduce_mean(axes = reduce_mean_164_axes_0, keep_dims = reduce_mean_164_keep_dims_0, x = square_54_cast);
            tensor<fp16, []> add_108_y_0_to_fp16 = const()[name = tensor<string, []>("add_108_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_108_cast = add(x = reduce_mean_164_cast, y = add_108_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_54_cast = sqrt(x = add_108_cast);
            tensor<fp16, [2, 32, 20, 64, 64]> real_div_54_cast = real_div(x = sub_108_cast, y = sqrt_54_cast);
            tensor<int32, [4]> reshape_217_shape_0 = const()[name = tensor<string, []>("reshape_217_shape_0"), val = tensor<int32, [4]>([2, 640, 64, 64])];
            tensor<fp16, [2, 640, 64, 64]> reshape_217_cast = reshape(shape = reshape_217_shape_0, x = real_div_54_cast);
            tensor<fp16, [640]> add_109_mean_0_to_fp16 = const()[name = tensor<string, []>("add_109_mean_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(807908032)))];
            tensor<fp16, [640]> add_109_variance_0_to_fp16 = const()[name = tensor<string, []>("add_109_variance_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(807909376)))];
            tensor<fp16, [640]> add_109_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_109_gamma_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(807910720)))];
            tensor<fp16, [640]> add_109_beta_0_to_fp16 = const()[name = tensor<string, []>("add_109_beta_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(807912064)))];
            tensor<fp16, []> add_109_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_109_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 640, 64, 64]> add_109_cast = batch_norm(beta = add_109_beta_0_to_fp16, epsilon = add_109_epsilon_0_to_fp16, gamma = add_109_gamma_0_to_fp16, mean = add_109_mean_0_to_fp16, variance = add_109_variance_0_to_fp16, x = reshape_217_cast);
            tensor<fp16, [2, 640, 64, 64]> input_479_cast = silu(x = add_109_cast);
            tensor<int32, [2]> var_8151 = const()[name = tensor<string, []>("op_8151"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8153 = const()[name = tensor<string, []>("op_8153"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_299_pad_type_0 = const()[name = tensor<string, []>("hidden_states_299_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_299_pad_0 = const()[name = tensor<string, []>("hidden_states_299_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [320, 640, 3, 3]> up_blocks_3_resnets_1_conv1_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_1_conv1_weight_to_fp16"), val = tensor<fp16, [320, 640, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(807913408)))];
            tensor<fp16, [320]> up_blocks_3_resnets_1_conv1_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_1_conv1_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(811599872)))];
            tensor<fp16, [2, 320, 64, 64]> hidden_states_299_cast = conv(bias = up_blocks_3_resnets_1_conv1_bias_to_fp16, dilations = var_8153, groups = var_7587, pad = hidden_states_299_pad_0, pad_type = hidden_states_299_pad_type_0, strides = var_8151, weight = up_blocks_3_resnets_1_conv1_weight_to_fp16, x = input_479_cast);
            tensor<int32, [2]> var_8159 = const()[name = tensor<string, []>("op_8159"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8161 = const()[name = tensor<string, []>("op_8161"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> temb_41_pad_type_0 = const()[name = tensor<string, []>("temb_41_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> temb_41_pad_0 = const()[name = tensor<string, []>("temb_41_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 1280, 1, 1]> up_blocks_3_resnets_1_time_emb_proj_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_1_time_emb_proj_weight_to_fp16"), val = tensor<fp16, [320, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(811600576)))];
            tensor<fp16, [320]> up_blocks_3_resnets_1_time_emb_proj_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_1_time_emb_proj_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(812419840)))];
            tensor<fp16, [2, 320, 1, 1]> temb_41_cast = conv(bias = up_blocks_3_resnets_1_time_emb_proj_bias_to_fp16, dilations = var_8161, groups = var_7587, pad = temb_41_pad_0, pad_type = temb_41_pad_type_0, strides = var_8159, weight = up_blocks_3_resnets_1_time_emb_proj_weight_to_fp16, x = cast_12);
            tensor<fp16, [2, 320, 64, 64]> input_483_cast = add(x = hidden_states_299_cast, y = temb_41_cast);
            tensor<int32, [5]> reshape_220_shape_0 = const()[name = tensor<string, []>("reshape_220_shape_0"), val = tensor<int32, [5]>([2, 32, 10, 64, 64])];
            tensor<fp16, [2, 32, 10, 64, 64]> reshape_220_cast = reshape(shape = reshape_220_shape_0, x = input_483_cast);
            tensor<int32, [3]> reduce_mean_165_axes_0 = const()[name = tensor<string, []>("reduce_mean_165_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_165_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_165_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_165_cast = reduce_mean(axes = reduce_mean_165_axes_0, keep_dims = reduce_mean_165_keep_dims_0, x = reshape_220_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> sub_110_cast = sub(x = reshape_220_cast, y = reduce_mean_165_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> square_55_cast = square(x = sub_110_cast);
            tensor<int32, [3]> reduce_mean_167_axes_0 = const()[name = tensor<string, []>("reduce_mean_167_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_167_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_167_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_167_cast = reduce_mean(axes = reduce_mean_167_axes_0, keep_dims = reduce_mean_167_keep_dims_0, x = square_55_cast);
            tensor<fp16, []> add_110_y_0_to_fp16 = const()[name = tensor<string, []>("add_110_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_110_cast = add(x = reduce_mean_167_cast, y = add_110_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_55_cast = sqrt(x = add_110_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> real_div_55_cast = real_div(x = sub_110_cast, y = sqrt_55_cast);
            tensor<int32, [4]> reshape_221_shape_0 = const()[name = tensor<string, []>("reshape_221_shape_0"), val = tensor<int32, [4]>([2, 320, 64, 64])];
            tensor<fp16, [2, 320, 64, 64]> reshape_221_cast = reshape(shape = reshape_221_shape_0, x = real_div_55_cast);
            tensor<fp16, [320]> add_111_mean_0_to_fp16 = const()[name = tensor<string, []>("add_111_mean_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(812420544)))];
            tensor<fp16, [320]> add_111_variance_0_to_fp16 = const()[name = tensor<string, []>("add_111_variance_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(812421248)))];
            tensor<fp16, [320]> add_111_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_111_gamma_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(812421952)))];
            tensor<fp16, [320]> add_111_beta_0_to_fp16 = const()[name = tensor<string, []>("add_111_beta_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(812422656)))];
            tensor<fp16, []> add_111_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_111_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 320, 64, 64]> add_111_cast = batch_norm(beta = add_111_beta_0_to_fp16, epsilon = add_111_epsilon_0_to_fp16, gamma = add_111_gamma_0_to_fp16, mean = add_111_mean_0_to_fp16, variance = add_111_variance_0_to_fp16, x = reshape_221_cast);
            tensor<fp16, [2, 320, 64, 64]> input_487_cast = silu(x = add_111_cast);
            tensor<int32, [2]> var_8171 = const()[name = tensor<string, []>("op_8171"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8173 = const()[name = tensor<string, []>("op_8173"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_301_pad_type_0 = const()[name = tensor<string, []>("hidden_states_301_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_301_pad_0 = const()[name = tensor<string, []>("hidden_states_301_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [320, 320, 3, 3]> up_blocks_3_resnets_1_conv2_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_1_conv2_weight_to_fp16"), val = tensor<fp16, [320, 320, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(812423360)))];
            tensor<fp16, [320]> up_blocks_3_resnets_1_conv2_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_1_conv2_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(814266624)))];
            tensor<fp16, [2, 320, 64, 64]> hidden_states_301_cast = conv(bias = up_blocks_3_resnets_1_conv2_bias_to_fp16, dilations = var_8173, groups = var_7587, pad = hidden_states_301_pad_0, pad_type = hidden_states_301_pad_type_0, strides = var_8171, weight = up_blocks_3_resnets_1_conv2_weight_to_fp16, x = input_487_cast);
            tensor<int32, [2]> var_8178 = const()[name = tensor<string, []>("op_8178"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8180 = const()[name = tensor<string, []>("op_8180"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_25_pad_type_0 = const()[name = tensor<string, []>("x_25_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_25_pad_0 = const()[name = tensor<string, []>("x_25_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 640, 1, 1]> up_blocks_3_resnets_1_conv_shortcut_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_1_conv_shortcut_weight_to_fp16"), val = tensor<fp16, [320, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(814267328)))];
            tensor<fp16, [320]> up_blocks_3_resnets_1_conv_shortcut_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_1_conv_shortcut_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(814676992)))];
            tensor<fp16, [2, 320, 64, 64]> x_25_cast = conv(bias = up_blocks_3_resnets_1_conv_shortcut_bias_to_fp16, dilations = var_8180, groups = var_7587, pad = x_25_pad_0, pad_type = x_25_pad_type_0, strides = var_8178, weight = up_blocks_3_resnets_1_conv_shortcut_weight_to_fp16, x = input_475_cast);
            tensor<fp16, [2, 320, 64, 64]> hidden_states_303_cast = add(x = x_25_cast, y = hidden_states_301_cast);
            tensor<int32, [5]> reshape_224_shape_0 = const()[name = tensor<string, []>("reshape_224_shape_0"), val = tensor<int32, [5]>([2, 32, 10, 64, 64])];
            tensor<fp16, [2, 32, 10, 64, 64]> reshape_224_cast = reshape(shape = reshape_224_shape_0, x = hidden_states_303_cast);
            tensor<int32, [3]> reduce_mean_168_axes_0 = const()[name = tensor<string, []>("reduce_mean_168_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_168_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_168_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_168_cast = reduce_mean(axes = reduce_mean_168_axes_0, keep_dims = reduce_mean_168_keep_dims_0, x = reshape_224_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> sub_112_cast = sub(x = reshape_224_cast, y = reduce_mean_168_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> square_56_cast = square(x = sub_112_cast);
            tensor<int32, [3]> reduce_mean_170_axes_0 = const()[name = tensor<string, []>("reduce_mean_170_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_170_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_170_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_170_cast = reduce_mean(axes = reduce_mean_170_axes_0, keep_dims = reduce_mean_170_keep_dims_0, x = square_56_cast);
            tensor<fp16, []> add_112_y_0_to_fp16 = const()[name = tensor<string, []>("add_112_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_112_cast = add(x = reduce_mean_170_cast, y = add_112_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_56_cast = sqrt(x = add_112_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> real_div_56_cast = real_div(x = sub_112_cast, y = sqrt_56_cast);
            tensor<int32, [4]> reshape_225_shape_0 = const()[name = tensor<string, []>("reshape_225_shape_0"), val = tensor<int32, [4]>([2, 320, 64, 64])];
            tensor<fp16, [2, 320, 64, 64]> reshape_225_cast = reshape(shape = reshape_225_shape_0, x = real_div_56_cast);
            tensor<fp16, [320]> add_113_mean_0_to_fp16 = const()[name = tensor<string, []>("add_113_mean_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(814677696)))];
            tensor<fp16, [320]> add_113_variance_0_to_fp16 = const()[name = tensor<string, []>("add_113_variance_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(814678400)))];
            tensor<fp16, [320]> add_113_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_113_gamma_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(814679104)))];
            tensor<fp16, [320]> add_113_beta_0_to_fp16 = const()[name = tensor<string, []>("add_113_beta_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(814679808)))];
            tensor<fp16, []> add_113_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_113_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 320, 64, 64]> add_113_cast = batch_norm(beta = add_113_beta_0_to_fp16, epsilon = add_113_epsilon_0_to_fp16, gamma = add_113_gamma_0_to_fp16, mean = add_113_mean_0_to_fp16, variance = add_113_variance_0_to_fp16, x = reshape_225_cast);
            tensor<int32, [2]> var_8200 = const()[name = tensor<string, []>("op_8200"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8202 = const()[name = tensor<string, []>("op_8202"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_305_pad_type_0 = const()[name = tensor<string, []>("hidden_states_305_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_305_pad_0 = const()[name = tensor<string, []>("hidden_states_305_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_1_proj_in_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_1_proj_in_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(814680512)))];
            tensor<fp16, [320]> up_blocks_3_attentions_1_proj_in_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_1_proj_in_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(814885376)))];
            tensor<fp16, [2, 320, 64, 64]> hidden_states_305_cast = conv(bias = up_blocks_3_attentions_1_proj_in_bias_to_fp16, dilations = var_8202, groups = var_7587, pad = hidden_states_305_pad_0, pad_type = hidden_states_305_pad_type_0, strides = var_8200, weight = up_blocks_3_attentions_1_proj_in_weight_to_fp16, x = add_113_cast);
            tensor<int32, [4]> var_8207 = const()[name = tensor<string, []>("op_8207"), val = tensor<int32, [4]>([2, 320, 1, 4096])];
            tensor<fp16, [2, 320, 1, 4096]> inputs_85_cast = reshape(shape = var_8207, x = hidden_states_305_cast);
            tensor<int32, [1]> var_8217 = const()[name = tensor<string, []>("op_8217"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> channels_mean_85_cast = reduce_mean(axes = var_8217, keep_dims = var_7582, x = inputs_85_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_85_cast = sub(x = inputs_85_cast, y = channels_mean_85_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_sq_85_cast = mul(x = zero_mean_85_cast, y = zero_mean_85_cast);
            tensor<int32, [1]> var_8221 = const()[name = tensor<string, []>("op_8221"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> var_8222_cast = reduce_mean(axes = var_8221, keep_dims = var_7582, x = zero_mean_sq_85_cast);
            tensor<fp16, []> var_8223_to_fp16 = const()[name = tensor<string, []>("op_8223_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 4096]> var_8224_cast = add(x = var_8222_cast, y = var_8223_to_fp16);
            tensor<fp16, []> denom_85_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_85_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 4096]> denom_85_cast = rsqrt(epsilon = denom_85_epsilon_0_to_fp16, x = var_8224_cast);
            tensor<fp16, [2, 320, 1, 4096]> out_85_cast = mul(x = zero_mean_85_cast, y = denom_85_cast);
            tensor<fp16, [1, 320, 1, 1]> var_8228_to_fp16 = const()[name = tensor<string, []>("op_8228_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(814886080)))];
            tensor<fp16, [2, 320, 1, 4096]> var_8229_cast = add(x = out_85_cast, y = var_8228_to_fp16);
            tensor<fp16, [1, 320, 1, 1]> var_8231_to_fp16 = const()[name = tensor<string, []>("op_8231_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(814886784)))];
            tensor<fp16, [2, 320, 1, 4096]> hidden_states_307_cast = mul(x = var_8229_cast, y = var_8231_to_fp16);
            tensor<int32, [2]> var_8238 = const()[name = tensor<string, []>("op_8238"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8240 = const()[name = tensor<string, []>("op_8240"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_57_pad_type_0 = const()[name = tensor<string, []>("q_57_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_57_pad_0 = const()[name = tensor<string, []>("q_57_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_1_transformer_blocks_0_attn1_to_q_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_1_transformer_blocks_0_attn1_to_q_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(814887488)))];
            tensor<fp16, [2, 320, 1, 4096]> q_57_cast = conv(dilations = var_8240, groups = var_7587, pad = q_57_pad_0, pad_type = q_57_pad_type_0, strides = var_8238, weight = up_blocks_3_attentions_1_transformer_blocks_0_attn1_to_q_weight_to_fp16, x = hidden_states_307_cast);
            tensor<int32, [2]> var_8244 = const()[name = tensor<string, []>("op_8244"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8246 = const()[name = tensor<string, []>("op_8246"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_113_pad_type_0 = const()[name = tensor<string, []>("k_113_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_113_pad_0 = const()[name = tensor<string, []>("k_113_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_1_transformer_blocks_0_attn1_to_k_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_1_transformer_blocks_0_attn1_to_k_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(815092352)))];
            tensor<fp16, [2, 320, 1, 4096]> k_113_cast = conv(dilations = var_8246, groups = var_7587, pad = k_113_pad_0, pad_type = k_113_pad_type_0, strides = var_8244, weight = up_blocks_3_attentions_1_transformer_blocks_0_attn1_to_k_weight_to_fp16, x = hidden_states_307_cast);
            tensor<int32, [2]> var_8250 = const()[name = tensor<string, []>("op_8250"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8252 = const()[name = tensor<string, []>("op_8252"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_57_pad_type_0 = const()[name = tensor<string, []>("v_57_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_57_pad_0 = const()[name = tensor<string, []>("v_57_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_1_transformer_blocks_0_attn1_to_v_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_1_transformer_blocks_0_attn1_to_v_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(815297216)))];
            tensor<fp16, [2, 320, 1, 4096]> v_57_cast = conv(dilations = var_8252, groups = var_7587, pad = v_57_pad_0, pad_type = v_57_pad_type_0, strides = var_8250, weight = up_blocks_3_attentions_1_transformer_blocks_0_attn1_to_v_weight_to_fp16, x = hidden_states_307_cast);
            tensor<int32, [4]> var_8256_begin_0 = const()[name = tensor<string, []>("op_8256_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_8256_end_0 = const()[name = tensor<string, []>("op_8256_end_0"), val = tensor<int32, [4]>([2, 40, 1, 4096])];
            tensor<bool, [4]> var_8256_end_mask_0 = const()[name = tensor<string, []>("op_8256_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8256_cast = slice_by_index(begin = var_8256_begin_0, end = var_8256_end_0, end_mask = var_8256_end_mask_0, x = q_57_cast);
            tensor<int32, [4]> var_8260_begin_0 = const()[name = tensor<string, []>("op_8260_begin_0"), val = tensor<int32, [4]>([0, 40, 0, 0])];
            tensor<int32, [4]> var_8260_end_0 = const()[name = tensor<string, []>("op_8260_end_0"), val = tensor<int32, [4]>([2, 80, 1, 4096])];
            tensor<bool, [4]> var_8260_end_mask_0 = const()[name = tensor<string, []>("op_8260_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8260_cast = slice_by_index(begin = var_8260_begin_0, end = var_8260_end_0, end_mask = var_8260_end_mask_0, x = q_57_cast);
            tensor<int32, [4]> var_8264_begin_0 = const()[name = tensor<string, []>("op_8264_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_8264_end_0 = const()[name = tensor<string, []>("op_8264_end_0"), val = tensor<int32, [4]>([2, 120, 1, 4096])];
            tensor<bool, [4]> var_8264_end_mask_0 = const()[name = tensor<string, []>("op_8264_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8264_cast = slice_by_index(begin = var_8264_begin_0, end = var_8264_end_0, end_mask = var_8264_end_mask_0, x = q_57_cast);
            tensor<int32, [4]> var_8268_begin_0 = const()[name = tensor<string, []>("op_8268_begin_0"), val = tensor<int32, [4]>([0, 120, 0, 0])];
            tensor<int32, [4]> var_8268_end_0 = const()[name = tensor<string, []>("op_8268_end_0"), val = tensor<int32, [4]>([2, 160, 1, 4096])];
            tensor<bool, [4]> var_8268_end_mask_0 = const()[name = tensor<string, []>("op_8268_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8268_cast = slice_by_index(begin = var_8268_begin_0, end = var_8268_end_0, end_mask = var_8268_end_mask_0, x = q_57_cast);
            tensor<int32, [4]> var_8272_begin_0 = const()[name = tensor<string, []>("op_8272_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_8272_end_0 = const()[name = tensor<string, []>("op_8272_end_0"), val = tensor<int32, [4]>([2, 200, 1, 4096])];
            tensor<bool, [4]> var_8272_end_mask_0 = const()[name = tensor<string, []>("op_8272_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8272_cast = slice_by_index(begin = var_8272_begin_0, end = var_8272_end_0, end_mask = var_8272_end_mask_0, x = q_57_cast);
            tensor<int32, [4]> var_8276_begin_0 = const()[name = tensor<string, []>("op_8276_begin_0"), val = tensor<int32, [4]>([0, 200, 0, 0])];
            tensor<int32, [4]> var_8276_end_0 = const()[name = tensor<string, []>("op_8276_end_0"), val = tensor<int32, [4]>([2, 240, 1, 4096])];
            tensor<bool, [4]> var_8276_end_mask_0 = const()[name = tensor<string, []>("op_8276_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8276_cast = slice_by_index(begin = var_8276_begin_0, end = var_8276_end_0, end_mask = var_8276_end_mask_0, x = q_57_cast);
            tensor<int32, [4]> var_8280_begin_0 = const()[name = tensor<string, []>("op_8280_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_8280_end_0 = const()[name = tensor<string, []>("op_8280_end_0"), val = tensor<int32, [4]>([2, 280, 1, 4096])];
            tensor<bool, [4]> var_8280_end_mask_0 = const()[name = tensor<string, []>("op_8280_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8280_cast = slice_by_index(begin = var_8280_begin_0, end = var_8280_end_0, end_mask = var_8280_end_mask_0, x = q_57_cast);
            tensor<int32, [4]> var_8284_begin_0 = const()[name = tensor<string, []>("op_8284_begin_0"), val = tensor<int32, [4]>([0, 280, 0, 0])];
            tensor<int32, [4]> var_8284_end_0 = const()[name = tensor<string, []>("op_8284_end_0"), val = tensor<int32, [4]>([2, 320, 1, 4096])];
            tensor<bool, [4]> var_8284_end_mask_0 = const()[name = tensor<string, []>("op_8284_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8284_cast = slice_by_index(begin = var_8284_begin_0, end = var_8284_end_0, end_mask = var_8284_end_mask_0, x = q_57_cast);
            tensor<int32, [4]> k_115_perm_0 = const()[name = tensor<string, []>("k_115_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_8291_begin_0 = const()[name = tensor<string, []>("op_8291_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_8291_end_0 = const()[name = tensor<string, []>("op_8291_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 40])];
            tensor<bool, [4]> var_8291_end_mask_0 = const()[name = tensor<string, []>("op_8291_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 320]> transpose_3 = transpose(perm = k_115_perm_0, x = k_113_cast);
            tensor<fp16, [2, 4096, 1, 40]> var_8291_cast = slice_by_index(begin = var_8291_begin_0, end = var_8291_end_0, end_mask = var_8291_end_mask_0, x = transpose_3);
            tensor<int32, [4]> var_8295_begin_0 = const()[name = tensor<string, []>("op_8295_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 40])];
            tensor<int32, [4]> var_8295_end_0 = const()[name = tensor<string, []>("op_8295_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 80])];
            tensor<bool, [4]> var_8295_end_mask_0 = const()[name = tensor<string, []>("op_8295_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_8295_cast = slice_by_index(begin = var_8295_begin_0, end = var_8295_end_0, end_mask = var_8295_end_mask_0, x = transpose_3);
            tensor<int32, [4]> var_8299_begin_0 = const()[name = tensor<string, []>("op_8299_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 80])];
            tensor<int32, [4]> var_8299_end_0 = const()[name = tensor<string, []>("op_8299_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 120])];
            tensor<bool, [4]> var_8299_end_mask_0 = const()[name = tensor<string, []>("op_8299_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_8299_cast = slice_by_index(begin = var_8299_begin_0, end = var_8299_end_0, end_mask = var_8299_end_mask_0, x = transpose_3);
            tensor<int32, [4]> var_8303_begin_0 = const()[name = tensor<string, []>("op_8303_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 120])];
            tensor<int32, [4]> var_8303_end_0 = const()[name = tensor<string, []>("op_8303_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 160])];
            tensor<bool, [4]> var_8303_end_mask_0 = const()[name = tensor<string, []>("op_8303_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_8303_cast = slice_by_index(begin = var_8303_begin_0, end = var_8303_end_0, end_mask = var_8303_end_mask_0, x = transpose_3);
            tensor<int32, [4]> var_8307_begin_0 = const()[name = tensor<string, []>("op_8307_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 160])];
            tensor<int32, [4]> var_8307_end_0 = const()[name = tensor<string, []>("op_8307_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 200])];
            tensor<bool, [4]> var_8307_end_mask_0 = const()[name = tensor<string, []>("op_8307_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_8307_cast = slice_by_index(begin = var_8307_begin_0, end = var_8307_end_0, end_mask = var_8307_end_mask_0, x = transpose_3);
            tensor<int32, [4]> var_8311_begin_0 = const()[name = tensor<string, []>("op_8311_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 200])];
            tensor<int32, [4]> var_8311_end_0 = const()[name = tensor<string, []>("op_8311_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 240])];
            tensor<bool, [4]> var_8311_end_mask_0 = const()[name = tensor<string, []>("op_8311_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_8311_cast = slice_by_index(begin = var_8311_begin_0, end = var_8311_end_0, end_mask = var_8311_end_mask_0, x = transpose_3);
            tensor<int32, [4]> var_8315_begin_0 = const()[name = tensor<string, []>("op_8315_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 240])];
            tensor<int32, [4]> var_8315_end_0 = const()[name = tensor<string, []>("op_8315_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 280])];
            tensor<bool, [4]> var_8315_end_mask_0 = const()[name = tensor<string, []>("op_8315_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_8315_cast = slice_by_index(begin = var_8315_begin_0, end = var_8315_end_0, end_mask = var_8315_end_mask_0, x = transpose_3);
            tensor<int32, [4]> var_8319_begin_0 = const()[name = tensor<string, []>("op_8319_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 280])];
            tensor<int32, [4]> var_8319_end_0 = const()[name = tensor<string, []>("op_8319_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 320])];
            tensor<bool, [4]> var_8319_end_mask_0 = const()[name = tensor<string, []>("op_8319_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_8319_cast = slice_by_index(begin = var_8319_begin_0, end = var_8319_end_0, end_mask = var_8319_end_mask_0, x = transpose_3);
            tensor<int32, [4]> var_8321_begin_0 = const()[name = tensor<string, []>("op_8321_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_8321_end_0 = const()[name = tensor<string, []>("op_8321_end_0"), val = tensor<int32, [4]>([2, 40, 1, 4096])];
            tensor<bool, [4]> var_8321_end_mask_0 = const()[name = tensor<string, []>("op_8321_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8321_cast = slice_by_index(begin = var_8321_begin_0, end = var_8321_end_0, end_mask = var_8321_end_mask_0, x = v_57_cast);
            tensor<int32, [4]> var_8325_begin_0 = const()[name = tensor<string, []>("op_8325_begin_0"), val = tensor<int32, [4]>([0, 40, 0, 0])];
            tensor<int32, [4]> var_8325_end_0 = const()[name = tensor<string, []>("op_8325_end_0"), val = tensor<int32, [4]>([2, 80, 1, 4096])];
            tensor<bool, [4]> var_8325_end_mask_0 = const()[name = tensor<string, []>("op_8325_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8325_cast = slice_by_index(begin = var_8325_begin_0, end = var_8325_end_0, end_mask = var_8325_end_mask_0, x = v_57_cast);
            tensor<int32, [4]> var_8329_begin_0 = const()[name = tensor<string, []>("op_8329_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_8329_end_0 = const()[name = tensor<string, []>("op_8329_end_0"), val = tensor<int32, [4]>([2, 120, 1, 4096])];
            tensor<bool, [4]> var_8329_end_mask_0 = const()[name = tensor<string, []>("op_8329_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8329_cast = slice_by_index(begin = var_8329_begin_0, end = var_8329_end_0, end_mask = var_8329_end_mask_0, x = v_57_cast);
            tensor<int32, [4]> var_8333_begin_0 = const()[name = tensor<string, []>("op_8333_begin_0"), val = tensor<int32, [4]>([0, 120, 0, 0])];
            tensor<int32, [4]> var_8333_end_0 = const()[name = tensor<string, []>("op_8333_end_0"), val = tensor<int32, [4]>([2, 160, 1, 4096])];
            tensor<bool, [4]> var_8333_end_mask_0 = const()[name = tensor<string, []>("op_8333_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8333_cast = slice_by_index(begin = var_8333_begin_0, end = var_8333_end_0, end_mask = var_8333_end_mask_0, x = v_57_cast);
            tensor<int32, [4]> var_8337_begin_0 = const()[name = tensor<string, []>("op_8337_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_8337_end_0 = const()[name = tensor<string, []>("op_8337_end_0"), val = tensor<int32, [4]>([2, 200, 1, 4096])];
            tensor<bool, [4]> var_8337_end_mask_0 = const()[name = tensor<string, []>("op_8337_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8337_cast = slice_by_index(begin = var_8337_begin_0, end = var_8337_end_0, end_mask = var_8337_end_mask_0, x = v_57_cast);
            tensor<int32, [4]> var_8341_begin_0 = const()[name = tensor<string, []>("op_8341_begin_0"), val = tensor<int32, [4]>([0, 200, 0, 0])];
            tensor<int32, [4]> var_8341_end_0 = const()[name = tensor<string, []>("op_8341_end_0"), val = tensor<int32, [4]>([2, 240, 1, 4096])];
            tensor<bool, [4]> var_8341_end_mask_0 = const()[name = tensor<string, []>("op_8341_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8341_cast = slice_by_index(begin = var_8341_begin_0, end = var_8341_end_0, end_mask = var_8341_end_mask_0, x = v_57_cast);
            tensor<int32, [4]> var_8345_begin_0 = const()[name = tensor<string, []>("op_8345_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_8345_end_0 = const()[name = tensor<string, []>("op_8345_end_0"), val = tensor<int32, [4]>([2, 280, 1, 4096])];
            tensor<bool, [4]> var_8345_end_mask_0 = const()[name = tensor<string, []>("op_8345_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8345_cast = slice_by_index(begin = var_8345_begin_0, end = var_8345_end_0, end_mask = var_8345_end_mask_0, x = v_57_cast);
            tensor<int32, [4]> var_8349_begin_0 = const()[name = tensor<string, []>("op_8349_begin_0"), val = tensor<int32, [4]>([0, 280, 0, 0])];
            tensor<int32, [4]> var_8349_end_0 = const()[name = tensor<string, []>("op_8349_end_0"), val = tensor<int32, [4]>([2, 320, 1, 4096])];
            tensor<bool, [4]> var_8349_end_mask_0 = const()[name = tensor<string, []>("op_8349_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8349_cast = slice_by_index(begin = var_8349_begin_0, end = var_8349_end_0, end_mask = var_8349_end_mask_0, x = v_57_cast);
            tensor<string, []> var_8353_equation_0 = const()[name = tensor<string, []>("op_8353_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_8353_cast = einsum(equation = var_8353_equation_0, values = (var_8291_cast, var_8256_cast));
            tensor<fp16, []> var_8354_to_fp16 = const()[name = tensor<string, []>("op_8354_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_449_cast = mul(x = var_8353_cast, y = var_8354_to_fp16);
            tensor<string, []> var_8357_equation_0 = const()[name = tensor<string, []>("op_8357_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_8357_cast = einsum(equation = var_8357_equation_0, values = (var_8295_cast, var_8260_cast));
            tensor<fp16, []> var_8358_to_fp16 = const()[name = tensor<string, []>("op_8358_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_451_cast = mul(x = var_8357_cast, y = var_8358_to_fp16);
            tensor<string, []> var_8361_equation_0 = const()[name = tensor<string, []>("op_8361_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_8361_cast = einsum(equation = var_8361_equation_0, values = (var_8299_cast, var_8264_cast));
            tensor<fp16, []> var_8362_to_fp16 = const()[name = tensor<string, []>("op_8362_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_453_cast = mul(x = var_8361_cast, y = var_8362_to_fp16);
            tensor<string, []> var_8365_equation_0 = const()[name = tensor<string, []>("op_8365_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_8365_cast = einsum(equation = var_8365_equation_0, values = (var_8303_cast, var_8268_cast));
            tensor<fp16, []> var_8366_to_fp16 = const()[name = tensor<string, []>("op_8366_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_455_cast = mul(x = var_8365_cast, y = var_8366_to_fp16);
            tensor<string, []> var_8369_equation_0 = const()[name = tensor<string, []>("op_8369_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_8369_cast = einsum(equation = var_8369_equation_0, values = (var_8307_cast, var_8272_cast));
            tensor<fp16, []> var_8370_to_fp16 = const()[name = tensor<string, []>("op_8370_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_457_cast = mul(x = var_8369_cast, y = var_8370_to_fp16);
            tensor<string, []> var_8373_equation_0 = const()[name = tensor<string, []>("op_8373_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_8373_cast = einsum(equation = var_8373_equation_0, values = (var_8311_cast, var_8276_cast));
            tensor<fp16, []> var_8374_to_fp16 = const()[name = tensor<string, []>("op_8374_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_459_cast = mul(x = var_8373_cast, y = var_8374_to_fp16);
            tensor<string, []> var_8377_equation_0 = const()[name = tensor<string, []>("op_8377_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_8377_cast = einsum(equation = var_8377_equation_0, values = (var_8315_cast, var_8280_cast));
            tensor<fp16, []> var_8378_to_fp16 = const()[name = tensor<string, []>("op_8378_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_461_cast = mul(x = var_8377_cast, y = var_8378_to_fp16);
            tensor<string, []> var_8381_equation_0 = const()[name = tensor<string, []>("op_8381_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_8381_cast = einsum(equation = var_8381_equation_0, values = (var_8319_cast, var_8284_cast));
            tensor<fp16, []> var_8382_to_fp16 = const()[name = tensor<string, []>("op_8382_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_463_cast = mul(x = var_8381_cast, y = var_8382_to_fp16);
            tensor<fp16, [2, 4096, 1, 4096]> var_8384_cast = softmax(axis = var_7587, x = aw_449_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_8385_cast = softmax(axis = var_7587, x = aw_451_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_8386_cast = softmax(axis = var_7587, x = aw_453_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_8387_cast = softmax(axis = var_7587, x = aw_455_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_8388_cast = softmax(axis = var_7587, x = aw_457_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_8389_cast = softmax(axis = var_7587, x = aw_459_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_8390_cast = softmax(axis = var_7587, x = aw_461_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_8391_cast = softmax(axis = var_7587, x = aw_463_cast);
            tensor<string, []> var_8393_equation_0 = const()[name = tensor<string, []>("op_8393_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_8393_cast = einsum(equation = var_8393_equation_0, values = (var_8321_cast, var_8384_cast));
            tensor<string, []> var_8395_equation_0 = const()[name = tensor<string, []>("op_8395_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_8395_cast = einsum(equation = var_8395_equation_0, values = (var_8325_cast, var_8385_cast));
            tensor<string, []> var_8397_equation_0 = const()[name = tensor<string, []>("op_8397_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_8397_cast = einsum(equation = var_8397_equation_0, values = (var_8329_cast, var_8386_cast));
            tensor<string, []> var_8399_equation_0 = const()[name = tensor<string, []>("op_8399_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_8399_cast = einsum(equation = var_8399_equation_0, values = (var_8333_cast, var_8387_cast));
            tensor<string, []> var_8401_equation_0 = const()[name = tensor<string, []>("op_8401_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_8401_cast = einsum(equation = var_8401_equation_0, values = (var_8337_cast, var_8388_cast));
            tensor<string, []> var_8403_equation_0 = const()[name = tensor<string, []>("op_8403_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_8403_cast = einsum(equation = var_8403_equation_0, values = (var_8341_cast, var_8389_cast));
            tensor<string, []> var_8405_equation_0 = const()[name = tensor<string, []>("op_8405_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_8405_cast = einsum(equation = var_8405_equation_0, values = (var_8345_cast, var_8390_cast));
            tensor<string, []> var_8407_equation_0 = const()[name = tensor<string, []>("op_8407_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_8407_cast = einsum(equation = var_8407_equation_0, values = (var_8349_cast, var_8391_cast));
            tensor<bool, []> input_491_interleave_0 = const()[name = tensor<string, []>("input_491_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 320, 1, 4096]> input_491_cast = concat(axis = var_7587, interleave = input_491_interleave_0, values = (var_8393_cast, var_8395_cast, var_8397_cast, var_8399_cast, var_8401_cast, var_8403_cast, var_8405_cast, var_8407_cast));
            tensor<int32, [2]> var_8413 = const()[name = tensor<string, []>("op_8413"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8415 = const()[name = tensor<string, []>("op_8415"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_8417_pad_type_0 = const()[name = tensor<string, []>("op_8417_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_8417_pad_0 = const()[name = tensor<string, []>("op_8417_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_1_transformer_blocks_0_attn1_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_1_transformer_blocks_0_attn1_to_out_0_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(815502080)))];
            tensor<fp16, [320]> up_blocks_3_attentions_1_transformer_blocks_0_attn1_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_1_transformer_blocks_0_attn1_to_out_0_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(815706944)))];
            tensor<fp16, [2, 320, 1, 4096]> var_8417_cast = conv(bias = up_blocks_3_attentions_1_transformer_blocks_0_attn1_to_out_0_bias_to_fp16, dilations = var_8415, groups = var_7587, pad = var_8417_pad_0, pad_type = var_8417_pad_type_0, strides = var_8413, weight = up_blocks_3_attentions_1_transformer_blocks_0_attn1_to_out_0_weight_to_fp16, x = input_491_cast);
            tensor<fp16, [2, 320, 1, 4096]> inputs_87_cast = add(x = var_8417_cast, y = inputs_85_cast);
            tensor<int32, [1]> var_8421 = const()[name = tensor<string, []>("op_8421"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> channels_mean_87_cast = reduce_mean(axes = var_8421, keep_dims = var_7582, x = inputs_87_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_87_cast = sub(x = inputs_87_cast, y = channels_mean_87_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_sq_87_cast = mul(x = zero_mean_87_cast, y = zero_mean_87_cast);
            tensor<int32, [1]> var_8425 = const()[name = tensor<string, []>("op_8425"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> var_8426_cast = reduce_mean(axes = var_8425, keep_dims = var_7582, x = zero_mean_sq_87_cast);
            tensor<fp16, []> var_8427_to_fp16 = const()[name = tensor<string, []>("op_8427_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 4096]> var_8428_cast = add(x = var_8426_cast, y = var_8427_to_fp16);
            tensor<fp16, []> denom_87_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_87_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 4096]> denom_87_cast = rsqrt(epsilon = denom_87_epsilon_0_to_fp16, x = var_8428_cast);
            tensor<fp16, [2, 320, 1, 4096]> out_87_cast = mul(x = zero_mean_87_cast, y = denom_87_cast);
            tensor<fp16, [1, 320, 1, 1]> var_8432_to_fp16 = const()[name = tensor<string, []>("op_8432_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(815707648)))];
            tensor<fp16, [2, 320, 1, 4096]> var_8433_cast = add(x = out_87_cast, y = var_8432_to_fp16);
            tensor<fp16, [1, 320, 1, 1]> var_8435_to_fp16 = const()[name = tensor<string, []>("op_8435_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(815708352)))];
            tensor<fp16, [2, 320, 1, 4096]> hidden_states_309_cast = mul(x = var_8433_cast, y = var_8435_to_fp16);
            tensor<int32, [2]> var_8442 = const()[name = tensor<string, []>("op_8442"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8444 = const()[name = tensor<string, []>("op_8444"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_59_pad_type_0 = const()[name = tensor<string, []>("q_59_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_59_pad_0 = const()[name = tensor<string, []>("q_59_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_1_transformer_blocks_0_attn2_to_q_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_1_transformer_blocks_0_attn2_to_q_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(815709056)))];
            tensor<fp16, [2, 320, 1, 4096]> q_59_cast = conv(dilations = var_8444, groups = var_7587, pad = q_59_pad_0, pad_type = q_59_pad_type_0, strides = var_8442, weight = up_blocks_3_attentions_1_transformer_blocks_0_attn2_to_q_weight_to_fp16, x = hidden_states_309_cast);
            tensor<int32, [2]> var_8448 = const()[name = tensor<string, []>("op_8448"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8450 = const()[name = tensor<string, []>("op_8450"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_117_pad_type_0 = const()[name = tensor<string, []>("k_117_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_117_pad_0 = const()[name = tensor<string, []>("k_117_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 768, 1, 1]> up_blocks_3_attentions_1_transformer_blocks_0_attn2_to_k_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_1_transformer_blocks_0_attn2_to_k_weight_to_fp16"), val = tensor<fp16, [320, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(815913920)))];
            tensor<fp16, [2, 320, 1, 77]> k_117_cast = conv(dilations = var_8450, groups = var_7587, pad = k_117_pad_0, pad_type = k_117_pad_type_0, strides = var_8448, weight = up_blocks_3_attentions_1_transformer_blocks_0_attn2_to_k_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [2]> var_8454 = const()[name = tensor<string, []>("op_8454"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8456 = const()[name = tensor<string, []>("op_8456"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_59_pad_type_0 = const()[name = tensor<string, []>("v_59_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_59_pad_0 = const()[name = tensor<string, []>("v_59_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 768, 1, 1]> up_blocks_3_attentions_1_transformer_blocks_0_attn2_to_v_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_1_transformer_blocks_0_attn2_to_v_weight_to_fp16"), val = tensor<fp16, [320, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(816405504)))];
            tensor<fp16, [2, 320, 1, 77]> v_59_cast = conv(dilations = var_8456, groups = var_7587, pad = v_59_pad_0, pad_type = v_59_pad_type_0, strides = var_8454, weight = up_blocks_3_attentions_1_transformer_blocks_0_attn2_to_v_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [4]> var_8460_begin_0 = const()[name = tensor<string, []>("op_8460_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_8460_end_0 = const()[name = tensor<string, []>("op_8460_end_0"), val = tensor<int32, [4]>([2, 40, 1, 4096])];
            tensor<bool, [4]> var_8460_end_mask_0 = const()[name = tensor<string, []>("op_8460_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8460_cast = slice_by_index(begin = var_8460_begin_0, end = var_8460_end_0, end_mask = var_8460_end_mask_0, x = q_59_cast);
            tensor<int32, [4]> var_8464_begin_0 = const()[name = tensor<string, []>("op_8464_begin_0"), val = tensor<int32, [4]>([0, 40, 0, 0])];
            tensor<int32, [4]> var_8464_end_0 = const()[name = tensor<string, []>("op_8464_end_0"), val = tensor<int32, [4]>([2, 80, 1, 4096])];
            tensor<bool, [4]> var_8464_end_mask_0 = const()[name = tensor<string, []>("op_8464_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8464_cast = slice_by_index(begin = var_8464_begin_0, end = var_8464_end_0, end_mask = var_8464_end_mask_0, x = q_59_cast);
            tensor<int32, [4]> var_8468_begin_0 = const()[name = tensor<string, []>("op_8468_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_8468_end_0 = const()[name = tensor<string, []>("op_8468_end_0"), val = tensor<int32, [4]>([2, 120, 1, 4096])];
            tensor<bool, [4]> var_8468_end_mask_0 = const()[name = tensor<string, []>("op_8468_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8468_cast = slice_by_index(begin = var_8468_begin_0, end = var_8468_end_0, end_mask = var_8468_end_mask_0, x = q_59_cast);
            tensor<int32, [4]> var_8472_begin_0 = const()[name = tensor<string, []>("op_8472_begin_0"), val = tensor<int32, [4]>([0, 120, 0, 0])];
            tensor<int32, [4]> var_8472_end_0 = const()[name = tensor<string, []>("op_8472_end_0"), val = tensor<int32, [4]>([2, 160, 1, 4096])];
            tensor<bool, [4]> var_8472_end_mask_0 = const()[name = tensor<string, []>("op_8472_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8472_cast = slice_by_index(begin = var_8472_begin_0, end = var_8472_end_0, end_mask = var_8472_end_mask_0, x = q_59_cast);
            tensor<int32, [4]> var_8476_begin_0 = const()[name = tensor<string, []>("op_8476_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_8476_end_0 = const()[name = tensor<string, []>("op_8476_end_0"), val = tensor<int32, [4]>([2, 200, 1, 4096])];
            tensor<bool, [4]> var_8476_end_mask_0 = const()[name = tensor<string, []>("op_8476_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8476_cast = slice_by_index(begin = var_8476_begin_0, end = var_8476_end_0, end_mask = var_8476_end_mask_0, x = q_59_cast);
            tensor<int32, [4]> var_8480_begin_0 = const()[name = tensor<string, []>("op_8480_begin_0"), val = tensor<int32, [4]>([0, 200, 0, 0])];
            tensor<int32, [4]> var_8480_end_0 = const()[name = tensor<string, []>("op_8480_end_0"), val = tensor<int32, [4]>([2, 240, 1, 4096])];
            tensor<bool, [4]> var_8480_end_mask_0 = const()[name = tensor<string, []>("op_8480_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8480_cast = slice_by_index(begin = var_8480_begin_0, end = var_8480_end_0, end_mask = var_8480_end_mask_0, x = q_59_cast);
            tensor<int32, [4]> var_8484_begin_0 = const()[name = tensor<string, []>("op_8484_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_8484_end_0 = const()[name = tensor<string, []>("op_8484_end_0"), val = tensor<int32, [4]>([2, 280, 1, 4096])];
            tensor<bool, [4]> var_8484_end_mask_0 = const()[name = tensor<string, []>("op_8484_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8484_cast = slice_by_index(begin = var_8484_begin_0, end = var_8484_end_0, end_mask = var_8484_end_mask_0, x = q_59_cast);
            tensor<int32, [4]> var_8488_begin_0 = const()[name = tensor<string, []>("op_8488_begin_0"), val = tensor<int32, [4]>([0, 280, 0, 0])];
            tensor<int32, [4]> var_8488_end_0 = const()[name = tensor<string, []>("op_8488_end_0"), val = tensor<int32, [4]>([2, 320, 1, 4096])];
            tensor<bool, [4]> var_8488_end_mask_0 = const()[name = tensor<string, []>("op_8488_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8488_cast = slice_by_index(begin = var_8488_begin_0, end = var_8488_end_0, end_mask = var_8488_end_mask_0, x = q_59_cast);
            tensor<int32, [4]> k_119_perm_0 = const()[name = tensor<string, []>("k_119_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_8495_begin_0 = const()[name = tensor<string, []>("op_8495_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_8495_end_0 = const()[name = tensor<string, []>("op_8495_end_0"), val = tensor<int32, [4]>([2, 77, 1, 40])];
            tensor<bool, [4]> var_8495_end_mask_0 = const()[name = tensor<string, []>("op_8495_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 320]> transpose_2 = transpose(perm = k_119_perm_0, x = k_117_cast);
            tensor<fp16, [2, 77, 1, 40]> var_8495_cast = slice_by_index(begin = var_8495_begin_0, end = var_8495_end_0, end_mask = var_8495_end_mask_0, x = transpose_2);
            tensor<int32, [4]> var_8499_begin_0 = const()[name = tensor<string, []>("op_8499_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 40])];
            tensor<int32, [4]> var_8499_end_0 = const()[name = tensor<string, []>("op_8499_end_0"), val = tensor<int32, [4]>([2, 77, 1, 80])];
            tensor<bool, [4]> var_8499_end_mask_0 = const()[name = tensor<string, []>("op_8499_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_8499_cast = slice_by_index(begin = var_8499_begin_0, end = var_8499_end_0, end_mask = var_8499_end_mask_0, x = transpose_2);
            tensor<int32, [4]> var_8503_begin_0 = const()[name = tensor<string, []>("op_8503_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 80])];
            tensor<int32, [4]> var_8503_end_0 = const()[name = tensor<string, []>("op_8503_end_0"), val = tensor<int32, [4]>([2, 77, 1, 120])];
            tensor<bool, [4]> var_8503_end_mask_0 = const()[name = tensor<string, []>("op_8503_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_8503_cast = slice_by_index(begin = var_8503_begin_0, end = var_8503_end_0, end_mask = var_8503_end_mask_0, x = transpose_2);
            tensor<int32, [4]> var_8507_begin_0 = const()[name = tensor<string, []>("op_8507_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 120])];
            tensor<int32, [4]> var_8507_end_0 = const()[name = tensor<string, []>("op_8507_end_0"), val = tensor<int32, [4]>([2, 77, 1, 160])];
            tensor<bool, [4]> var_8507_end_mask_0 = const()[name = tensor<string, []>("op_8507_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_8507_cast = slice_by_index(begin = var_8507_begin_0, end = var_8507_end_0, end_mask = var_8507_end_mask_0, x = transpose_2);
            tensor<int32, [4]> var_8511_begin_0 = const()[name = tensor<string, []>("op_8511_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 160])];
            tensor<int32, [4]> var_8511_end_0 = const()[name = tensor<string, []>("op_8511_end_0"), val = tensor<int32, [4]>([2, 77, 1, 200])];
            tensor<bool, [4]> var_8511_end_mask_0 = const()[name = tensor<string, []>("op_8511_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_8511_cast = slice_by_index(begin = var_8511_begin_0, end = var_8511_end_0, end_mask = var_8511_end_mask_0, x = transpose_2);
            tensor<int32, [4]> var_8515_begin_0 = const()[name = tensor<string, []>("op_8515_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 200])];
            tensor<int32, [4]> var_8515_end_0 = const()[name = tensor<string, []>("op_8515_end_0"), val = tensor<int32, [4]>([2, 77, 1, 240])];
            tensor<bool, [4]> var_8515_end_mask_0 = const()[name = tensor<string, []>("op_8515_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_8515_cast = slice_by_index(begin = var_8515_begin_0, end = var_8515_end_0, end_mask = var_8515_end_mask_0, x = transpose_2);
            tensor<int32, [4]> var_8519_begin_0 = const()[name = tensor<string, []>("op_8519_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 240])];
            tensor<int32, [4]> var_8519_end_0 = const()[name = tensor<string, []>("op_8519_end_0"), val = tensor<int32, [4]>([2, 77, 1, 280])];
            tensor<bool, [4]> var_8519_end_mask_0 = const()[name = tensor<string, []>("op_8519_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_8519_cast = slice_by_index(begin = var_8519_begin_0, end = var_8519_end_0, end_mask = var_8519_end_mask_0, x = transpose_2);
            tensor<int32, [4]> var_8523_begin_0 = const()[name = tensor<string, []>("op_8523_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 280])];
            tensor<int32, [4]> var_8523_end_0 = const()[name = tensor<string, []>("op_8523_end_0"), val = tensor<int32, [4]>([2, 77, 1, 320])];
            tensor<bool, [4]> var_8523_end_mask_0 = const()[name = tensor<string, []>("op_8523_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_8523_cast = slice_by_index(begin = var_8523_begin_0, end = var_8523_end_0, end_mask = var_8523_end_mask_0, x = transpose_2);
            tensor<int32, [4]> var_8525_begin_0 = const()[name = tensor<string, []>("op_8525_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_8525_end_0 = const()[name = tensor<string, []>("op_8525_end_0"), val = tensor<int32, [4]>([2, 40, 1, 77])];
            tensor<bool, [4]> var_8525_end_mask_0 = const()[name = tensor<string, []>("op_8525_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_8525_cast = slice_by_index(begin = var_8525_begin_0, end = var_8525_end_0, end_mask = var_8525_end_mask_0, x = v_59_cast);
            tensor<int32, [4]> var_8529_begin_0 = const()[name = tensor<string, []>("op_8529_begin_0"), val = tensor<int32, [4]>([0, 40, 0, 0])];
            tensor<int32, [4]> var_8529_end_0 = const()[name = tensor<string, []>("op_8529_end_0"), val = tensor<int32, [4]>([2, 80, 1, 77])];
            tensor<bool, [4]> var_8529_end_mask_0 = const()[name = tensor<string, []>("op_8529_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_8529_cast = slice_by_index(begin = var_8529_begin_0, end = var_8529_end_0, end_mask = var_8529_end_mask_0, x = v_59_cast);
            tensor<int32, [4]> var_8533_begin_0 = const()[name = tensor<string, []>("op_8533_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_8533_end_0 = const()[name = tensor<string, []>("op_8533_end_0"), val = tensor<int32, [4]>([2, 120, 1, 77])];
            tensor<bool, [4]> var_8533_end_mask_0 = const()[name = tensor<string, []>("op_8533_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_8533_cast = slice_by_index(begin = var_8533_begin_0, end = var_8533_end_0, end_mask = var_8533_end_mask_0, x = v_59_cast);
            tensor<int32, [4]> var_8537_begin_0 = const()[name = tensor<string, []>("op_8537_begin_0"), val = tensor<int32, [4]>([0, 120, 0, 0])];
            tensor<int32, [4]> var_8537_end_0 = const()[name = tensor<string, []>("op_8537_end_0"), val = tensor<int32, [4]>([2, 160, 1, 77])];
            tensor<bool, [4]> var_8537_end_mask_0 = const()[name = tensor<string, []>("op_8537_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_8537_cast = slice_by_index(begin = var_8537_begin_0, end = var_8537_end_0, end_mask = var_8537_end_mask_0, x = v_59_cast);
            tensor<int32, [4]> var_8541_begin_0 = const()[name = tensor<string, []>("op_8541_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_8541_end_0 = const()[name = tensor<string, []>("op_8541_end_0"), val = tensor<int32, [4]>([2, 200, 1, 77])];
            tensor<bool, [4]> var_8541_end_mask_0 = const()[name = tensor<string, []>("op_8541_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_8541_cast = slice_by_index(begin = var_8541_begin_0, end = var_8541_end_0, end_mask = var_8541_end_mask_0, x = v_59_cast);
            tensor<int32, [4]> var_8545_begin_0 = const()[name = tensor<string, []>("op_8545_begin_0"), val = tensor<int32, [4]>([0, 200, 0, 0])];
            tensor<int32, [4]> var_8545_end_0 = const()[name = tensor<string, []>("op_8545_end_0"), val = tensor<int32, [4]>([2, 240, 1, 77])];
            tensor<bool, [4]> var_8545_end_mask_0 = const()[name = tensor<string, []>("op_8545_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_8545_cast = slice_by_index(begin = var_8545_begin_0, end = var_8545_end_0, end_mask = var_8545_end_mask_0, x = v_59_cast);
            tensor<int32, [4]> var_8549_begin_0 = const()[name = tensor<string, []>("op_8549_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_8549_end_0 = const()[name = tensor<string, []>("op_8549_end_0"), val = tensor<int32, [4]>([2, 280, 1, 77])];
            tensor<bool, [4]> var_8549_end_mask_0 = const()[name = tensor<string, []>("op_8549_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_8549_cast = slice_by_index(begin = var_8549_begin_0, end = var_8549_end_0, end_mask = var_8549_end_mask_0, x = v_59_cast);
            tensor<int32, [4]> var_8553_begin_0 = const()[name = tensor<string, []>("op_8553_begin_0"), val = tensor<int32, [4]>([0, 280, 0, 0])];
            tensor<int32, [4]> var_8553_end_0 = const()[name = tensor<string, []>("op_8553_end_0"), val = tensor<int32, [4]>([2, 320, 1, 77])];
            tensor<bool, [4]> var_8553_end_mask_0 = const()[name = tensor<string, []>("op_8553_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_8553_cast = slice_by_index(begin = var_8553_begin_0, end = var_8553_end_0, end_mask = var_8553_end_mask_0, x = v_59_cast);
            tensor<string, []> var_8557_equation_0 = const()[name = tensor<string, []>("op_8557_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_8557_cast = einsum(equation = var_8557_equation_0, values = (var_8495_cast, var_8460_cast));
            tensor<fp16, []> var_8558_to_fp16 = const()[name = tensor<string, []>("op_8558_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_465_cast = mul(x = var_8557_cast, y = var_8558_to_fp16);
            tensor<string, []> var_8561_equation_0 = const()[name = tensor<string, []>("op_8561_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_8561_cast = einsum(equation = var_8561_equation_0, values = (var_8499_cast, var_8464_cast));
            tensor<fp16, []> var_8562_to_fp16 = const()[name = tensor<string, []>("op_8562_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_467_cast = mul(x = var_8561_cast, y = var_8562_to_fp16);
            tensor<string, []> var_8565_equation_0 = const()[name = tensor<string, []>("op_8565_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_8565_cast = einsum(equation = var_8565_equation_0, values = (var_8503_cast, var_8468_cast));
            tensor<fp16, []> var_8566_to_fp16 = const()[name = tensor<string, []>("op_8566_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_469_cast = mul(x = var_8565_cast, y = var_8566_to_fp16);
            tensor<string, []> var_8569_equation_0 = const()[name = tensor<string, []>("op_8569_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_8569_cast = einsum(equation = var_8569_equation_0, values = (var_8507_cast, var_8472_cast));
            tensor<fp16, []> var_8570_to_fp16 = const()[name = tensor<string, []>("op_8570_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_471_cast = mul(x = var_8569_cast, y = var_8570_to_fp16);
            tensor<string, []> var_8573_equation_0 = const()[name = tensor<string, []>("op_8573_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_8573_cast = einsum(equation = var_8573_equation_0, values = (var_8511_cast, var_8476_cast));
            tensor<fp16, []> var_8574_to_fp16 = const()[name = tensor<string, []>("op_8574_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_473_cast = mul(x = var_8573_cast, y = var_8574_to_fp16);
            tensor<string, []> var_8577_equation_0 = const()[name = tensor<string, []>("op_8577_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_8577_cast = einsum(equation = var_8577_equation_0, values = (var_8515_cast, var_8480_cast));
            tensor<fp16, []> var_8578_to_fp16 = const()[name = tensor<string, []>("op_8578_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_475_cast = mul(x = var_8577_cast, y = var_8578_to_fp16);
            tensor<string, []> var_8581_equation_0 = const()[name = tensor<string, []>("op_8581_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_8581_cast = einsum(equation = var_8581_equation_0, values = (var_8519_cast, var_8484_cast));
            tensor<fp16, []> var_8582_to_fp16 = const()[name = tensor<string, []>("op_8582_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_477_cast = mul(x = var_8581_cast, y = var_8582_to_fp16);
            tensor<string, []> var_8585_equation_0 = const()[name = tensor<string, []>("op_8585_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_8585_cast = einsum(equation = var_8585_equation_0, values = (var_8523_cast, var_8488_cast));
            tensor<fp16, []> var_8586_to_fp16 = const()[name = tensor<string, []>("op_8586_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_479_cast = mul(x = var_8585_cast, y = var_8586_to_fp16);
            tensor<fp16, [2, 77, 1, 4096]> var_8588_cast = softmax(axis = var_7587, x = aw_465_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_8589_cast = softmax(axis = var_7587, x = aw_467_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_8590_cast = softmax(axis = var_7587, x = aw_469_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_8591_cast = softmax(axis = var_7587, x = aw_471_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_8592_cast = softmax(axis = var_7587, x = aw_473_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_8593_cast = softmax(axis = var_7587, x = aw_475_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_8594_cast = softmax(axis = var_7587, x = aw_477_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_8595_cast = softmax(axis = var_7587, x = aw_479_cast);
            tensor<string, []> var_8597_equation_0 = const()[name = tensor<string, []>("op_8597_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_8597_cast = einsum(equation = var_8597_equation_0, values = (var_8525_cast, var_8588_cast));
            tensor<string, []> var_8599_equation_0 = const()[name = tensor<string, []>("op_8599_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_8599_cast = einsum(equation = var_8599_equation_0, values = (var_8529_cast, var_8589_cast));
            tensor<string, []> var_8601_equation_0 = const()[name = tensor<string, []>("op_8601_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_8601_cast = einsum(equation = var_8601_equation_0, values = (var_8533_cast, var_8590_cast));
            tensor<string, []> var_8603_equation_0 = const()[name = tensor<string, []>("op_8603_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_8603_cast = einsum(equation = var_8603_equation_0, values = (var_8537_cast, var_8591_cast));
            tensor<string, []> var_8605_equation_0 = const()[name = tensor<string, []>("op_8605_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_8605_cast = einsum(equation = var_8605_equation_0, values = (var_8541_cast, var_8592_cast));
            tensor<string, []> var_8607_equation_0 = const()[name = tensor<string, []>("op_8607_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_8607_cast = einsum(equation = var_8607_equation_0, values = (var_8545_cast, var_8593_cast));
            tensor<string, []> var_8609_equation_0 = const()[name = tensor<string, []>("op_8609_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_8609_cast = einsum(equation = var_8609_equation_0, values = (var_8549_cast, var_8594_cast));
            tensor<string, []> var_8611_equation_0 = const()[name = tensor<string, []>("op_8611_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_8611_cast = einsum(equation = var_8611_equation_0, values = (var_8553_cast, var_8595_cast));
            tensor<bool, []> input_493_interleave_0 = const()[name = tensor<string, []>("input_493_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 320, 1, 4096]> input_493_cast = concat(axis = var_7587, interleave = input_493_interleave_0, values = (var_8597_cast, var_8599_cast, var_8601_cast, var_8603_cast, var_8605_cast, var_8607_cast, var_8609_cast, var_8611_cast));
            tensor<int32, [2]> var_8617 = const()[name = tensor<string, []>("op_8617"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8619 = const()[name = tensor<string, []>("op_8619"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_8621_pad_type_0 = const()[name = tensor<string, []>("op_8621_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_8621_pad_0 = const()[name = tensor<string, []>("op_8621_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_1_transformer_blocks_0_attn2_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_1_transformer_blocks_0_attn2_to_out_0_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(816897088)))];
            tensor<fp16, [320]> up_blocks_3_attentions_1_transformer_blocks_0_attn2_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_1_transformer_blocks_0_attn2_to_out_0_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(817101952)))];
            tensor<fp16, [2, 320, 1, 4096]> var_8621_cast = conv(bias = up_blocks_3_attentions_1_transformer_blocks_0_attn2_to_out_0_bias_to_fp16, dilations = var_8619, groups = var_7587, pad = var_8621_pad_0, pad_type = var_8621_pad_type_0, strides = var_8617, weight = up_blocks_3_attentions_1_transformer_blocks_0_attn2_to_out_0_weight_to_fp16, x = input_493_cast);
            tensor<fp16, [2, 320, 1, 4096]> inputs_89_cast = add(x = var_8621_cast, y = inputs_87_cast);
            tensor<int32, [1]> var_8625 = const()[name = tensor<string, []>("op_8625"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> channels_mean_89_cast = reduce_mean(axes = var_8625, keep_dims = var_7582, x = inputs_89_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_89_cast = sub(x = inputs_89_cast, y = channels_mean_89_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_sq_89_cast = mul(x = zero_mean_89_cast, y = zero_mean_89_cast);
            tensor<int32, [1]> var_8629 = const()[name = tensor<string, []>("op_8629"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> var_8630_cast = reduce_mean(axes = var_8629, keep_dims = var_7582, x = zero_mean_sq_89_cast);
            tensor<fp16, []> var_8631_to_fp16 = const()[name = tensor<string, []>("op_8631_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 4096]> var_8632_cast = add(x = var_8630_cast, y = var_8631_to_fp16);
            tensor<fp16, []> denom_89_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_89_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 4096]> denom_89_cast = rsqrt(epsilon = denom_89_epsilon_0_to_fp16, x = var_8632_cast);
            tensor<fp16, [2, 320, 1, 4096]> out_89_cast = mul(x = zero_mean_89_cast, y = denom_89_cast);
            tensor<fp16, [1, 320, 1, 1]> var_8636_to_fp16 = const()[name = tensor<string, []>("op_8636_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(817102656)))];
            tensor<fp16, [2, 320, 1, 4096]> var_8637_cast = add(x = out_89_cast, y = var_8636_to_fp16);
            tensor<fp16, [1, 320, 1, 1]> var_8639_to_fp16 = const()[name = tensor<string, []>("op_8639_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(817103360)))];
            tensor<fp16, [2, 320, 1, 4096]> input_495_cast = mul(x = var_8637_cast, y = var_8639_to_fp16);
            tensor<int32, [2]> var_8647 = const()[name = tensor<string, []>("op_8647"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8649 = const()[name = tensor<string, []>("op_8649"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_8651_pad_type_0 = const()[name = tensor<string, []>("op_8651_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_8651_pad_0 = const()[name = tensor<string, []>("op_8651_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [2560, 320, 1, 1]> up_blocks_3_attentions_1_transformer_blocks_0_ff_net_0_proj_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_1_transformer_blocks_0_ff_net_0_proj_weight_to_fp16"), val = tensor<fp16, [2560, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(817104064)))];
            tensor<fp16, [2560]> up_blocks_3_attentions_1_transformer_blocks_0_ff_net_0_proj_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_1_transformer_blocks_0_ff_net_0_proj_bias_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(818742528)))];
            tensor<fp16, [2, 2560, 1, 4096]> var_8651_cast = conv(bias = up_blocks_3_attentions_1_transformer_blocks_0_ff_net_0_proj_bias_to_fp16, dilations = var_8649, groups = var_7587, pad = var_8651_pad_0, pad_type = var_8651_pad_type_0, strides = var_8647, weight = up_blocks_3_attentions_1_transformer_blocks_0_ff_net_0_proj_weight_to_fp16, x = input_495_cast);
            tensor<int32, [2]> var_8652_split_sizes_0 = const()[name = tensor<string, []>("op_8652_split_sizes_0"), val = tensor<int32, [2]>([1280, 1280])];
            tensor<int32, []> var_8652_axis_0 = const()[name = tensor<string, []>("op_8652_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [2, 1280, 1, 4096]> var_8652_cast_0, tensor<fp16, [2, 1280, 1, 4096]> var_8652_cast_1 = split(axis = var_8652_axis_0, split_sizes = var_8652_split_sizes_0, x = var_8651_cast);
            tensor<string, []> var_8654_mode_0 = const()[name = tensor<string, []>("op_8654_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [2, 1280, 1, 4096]> var_8654_cast = gelu(mode = var_8654_mode_0, x = var_8652_cast_1);
            tensor<fp16, [2, 1280, 1, 4096]> input_497_cast = mul(x = var_8652_cast_0, y = var_8654_cast);
            tensor<int32, [2]> var_8658 = const()[name = tensor<string, []>("op_8658"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8660 = const()[name = tensor<string, []>("op_8660"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_8662_pad_type_0 = const()[name = tensor<string, []>("op_8662_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_8662_pad_0 = const()[name = tensor<string, []>("op_8662_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 1280, 1, 1]> up_blocks_3_attentions_1_transformer_blocks_0_ff_net_2_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_1_transformer_blocks_0_ff_net_2_weight_to_fp16"), val = tensor<fp16, [320, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(818747712)))];
            tensor<fp16, [320]> up_blocks_3_attentions_1_transformer_blocks_0_ff_net_2_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_1_transformer_blocks_0_ff_net_2_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(819566976)))];
            tensor<fp16, [2, 320, 1, 4096]> var_8662_cast = conv(bias = up_blocks_3_attentions_1_transformer_blocks_0_ff_net_2_bias_to_fp16, dilations = var_8660, groups = var_7587, pad = var_8662_pad_0, pad_type = var_8662_pad_type_0, strides = var_8658, weight = up_blocks_3_attentions_1_transformer_blocks_0_ff_net_2_weight_to_fp16, x = input_497_cast);
            tensor<fp16, [2, 320, 1, 4096]> hidden_states_313_cast = add(x = var_8662_cast, y = inputs_89_cast);
            tensor<int32, [4]> var_8664 = const()[name = tensor<string, []>("op_8664"), val = tensor<int32, [4]>([2, 320, 64, 64])];
            tensor<fp16, [2, 320, 64, 64]> input_499_cast = reshape(shape = var_8664, x = hidden_states_313_cast);
            tensor<int32, [2]> var_8668 = const()[name = tensor<string, []>("op_8668"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8670 = const()[name = tensor<string, []>("op_8670"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_315_pad_type_0 = const()[name = tensor<string, []>("hidden_states_315_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_315_pad_0 = const()[name = tensor<string, []>("hidden_states_315_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_1_proj_out_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_1_proj_out_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(819567680)))];
            tensor<fp16, [320]> up_blocks_3_attentions_1_proj_out_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_1_proj_out_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(819772544)))];
            tensor<fp16, [2, 320, 64, 64]> hidden_states_315_cast = conv(bias = up_blocks_3_attentions_1_proj_out_bias_to_fp16, dilations = var_8670, groups = var_7587, pad = hidden_states_315_pad_0, pad_type = hidden_states_315_pad_type_0, strides = var_8668, weight = up_blocks_3_attentions_1_proj_out_weight_to_fp16, x = input_499_cast);
            tensor<fp16, [2, 320, 64, 64]> hidden_states_317_cast = add(x = hidden_states_315_cast, y = hidden_states_303_cast);
            tensor<bool, []> input_501_interleave_0 = const()[name = tensor<string, []>("input_501_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 320, 64, 64]> cast_13 = cast(dtype = cast_13_dtype_0, x = input_7_cast);
            tensor<fp16, [2, 640, 64, 64]> input_501_cast = concat(axis = var_7587, interleave = input_501_interleave_0, values = (hidden_states_317_cast, cast_13));
            tensor<int32, [5]> reshape_228_shape_0 = const()[name = tensor<string, []>("reshape_228_shape_0"), val = tensor<int32, [5]>([2, 32, 20, 64, 64])];
            tensor<fp16, [2, 32, 20, 64, 64]> reshape_228_cast = reshape(shape = reshape_228_shape_0, x = input_501_cast);
            tensor<int32, [3]> reduce_mean_171_axes_0 = const()[name = tensor<string, []>("reduce_mean_171_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_171_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_171_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_171_cast = reduce_mean(axes = reduce_mean_171_axes_0, keep_dims = reduce_mean_171_keep_dims_0, x = reshape_228_cast);
            tensor<fp16, [2, 32, 20, 64, 64]> sub_114_cast = sub(x = reshape_228_cast, y = reduce_mean_171_cast);
            tensor<fp16, [2, 32, 20, 64, 64]> square_57_cast = square(x = sub_114_cast);
            tensor<int32, [3]> reduce_mean_173_axes_0 = const()[name = tensor<string, []>("reduce_mean_173_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_173_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_173_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_173_cast = reduce_mean(axes = reduce_mean_173_axes_0, keep_dims = reduce_mean_173_keep_dims_0, x = square_57_cast);
            tensor<fp16, []> add_114_y_0_to_fp16 = const()[name = tensor<string, []>("add_114_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_114_cast = add(x = reduce_mean_173_cast, y = add_114_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_57_cast = sqrt(x = add_114_cast);
            tensor<fp16, [2, 32, 20, 64, 64]> real_div_57_cast = real_div(x = sub_114_cast, y = sqrt_57_cast);
            tensor<int32, [4]> reshape_229_shape_0 = const()[name = tensor<string, []>("reshape_229_shape_0"), val = tensor<int32, [4]>([2, 640, 64, 64])];
            tensor<fp16, [2, 640, 64, 64]> reshape_229_cast = reshape(shape = reshape_229_shape_0, x = real_div_57_cast);
            tensor<fp16, [640]> add_115_mean_0_to_fp16 = const()[name = tensor<string, []>("add_115_mean_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(819773248)))];
            tensor<fp16, [640]> add_115_variance_0_to_fp16 = const()[name = tensor<string, []>("add_115_variance_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(819774592)))];
            tensor<fp16, [640]> add_115_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_115_gamma_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(819775936)))];
            tensor<fp16, [640]> add_115_beta_0_to_fp16 = const()[name = tensor<string, []>("add_115_beta_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(819777280)))];
            tensor<fp16, []> add_115_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_115_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 640, 64, 64]> add_115_cast = batch_norm(beta = add_115_beta_0_to_fp16, epsilon = add_115_epsilon_0_to_fp16, gamma = add_115_gamma_0_to_fp16, mean = add_115_mean_0_to_fp16, variance = add_115_variance_0_to_fp16, x = reshape_229_cast);
            tensor<fp16, [2, 640, 64, 64]> input_505_cast = silu(x = add_115_cast);
            tensor<int32, [2]> var_8688 = const()[name = tensor<string, []>("op_8688"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8690 = const()[name = tensor<string, []>("op_8690"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_319_pad_type_0 = const()[name = tensor<string, []>("hidden_states_319_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_319_pad_0 = const()[name = tensor<string, []>("hidden_states_319_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [320, 640, 3, 3]> up_blocks_3_resnets_2_conv1_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_2_conv1_weight_to_fp16"), val = tensor<fp16, [320, 640, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(819778624)))];
            tensor<fp16, [320]> up_blocks_3_resnets_2_conv1_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_2_conv1_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(823465088)))];
            tensor<fp16, [2, 320, 64, 64]> hidden_states_319_cast = conv(bias = up_blocks_3_resnets_2_conv1_bias_to_fp16, dilations = var_8690, groups = var_7587, pad = hidden_states_319_pad_0, pad_type = hidden_states_319_pad_type_0, strides = var_8688, weight = up_blocks_3_resnets_2_conv1_weight_to_fp16, x = input_505_cast);
            tensor<int32, [2]> var_8696 = const()[name = tensor<string, []>("op_8696"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8698 = const()[name = tensor<string, []>("op_8698"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> temb_pad_type_0 = const()[name = tensor<string, []>("temb_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> temb_pad_0 = const()[name = tensor<string, []>("temb_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 1280, 1, 1]> up_blocks_3_resnets_2_time_emb_proj_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_2_time_emb_proj_weight_to_fp16"), val = tensor<fp16, [320, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(823465792)))];
            tensor<fp16, [320]> up_blocks_3_resnets_2_time_emb_proj_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_2_time_emb_proj_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(824285056)))];
            tensor<fp16, [2, 320, 1, 1]> temb_cast = conv(bias = up_blocks_3_resnets_2_time_emb_proj_bias_to_fp16, dilations = var_8698, groups = var_7587, pad = temb_pad_0, pad_type = temb_pad_type_0, strides = var_8696, weight = up_blocks_3_resnets_2_time_emb_proj_weight_to_fp16, x = cast_12);
            tensor<fp16, [2, 320, 64, 64]> input_509_cast = add(x = hidden_states_319_cast, y = temb_cast);
            tensor<int32, [5]> reshape_232_shape_0 = const()[name = tensor<string, []>("reshape_232_shape_0"), val = tensor<int32, [5]>([2, 32, 10, 64, 64])];
            tensor<fp16, [2, 32, 10, 64, 64]> reshape_232_cast = reshape(shape = reshape_232_shape_0, x = input_509_cast);
            tensor<int32, [3]> reduce_mean_174_axes_0 = const()[name = tensor<string, []>("reduce_mean_174_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_174_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_174_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_174_cast = reduce_mean(axes = reduce_mean_174_axes_0, keep_dims = reduce_mean_174_keep_dims_0, x = reshape_232_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> sub_116_cast = sub(x = reshape_232_cast, y = reduce_mean_174_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> square_58_cast = square(x = sub_116_cast);
            tensor<int32, [3]> reduce_mean_176_axes_0 = const()[name = tensor<string, []>("reduce_mean_176_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_176_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_176_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_176_cast = reduce_mean(axes = reduce_mean_176_axes_0, keep_dims = reduce_mean_176_keep_dims_0, x = square_58_cast);
            tensor<fp16, []> add_116_y_0_to_fp16 = const()[name = tensor<string, []>("add_116_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_116_cast = add(x = reduce_mean_176_cast, y = add_116_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_58_cast = sqrt(x = add_116_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> real_div_58_cast = real_div(x = sub_116_cast, y = sqrt_58_cast);
            tensor<int32, [4]> reshape_233_shape_0 = const()[name = tensor<string, []>("reshape_233_shape_0"), val = tensor<int32, [4]>([2, 320, 64, 64])];
            tensor<fp16, [2, 320, 64, 64]> reshape_233_cast = reshape(shape = reshape_233_shape_0, x = real_div_58_cast);
            tensor<fp16, [320]> add_117_mean_0_to_fp16 = const()[name = tensor<string, []>("add_117_mean_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(824285760)))];
            tensor<fp16, [320]> add_117_variance_0_to_fp16 = const()[name = tensor<string, []>("add_117_variance_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(824286464)))];
            tensor<fp16, [320]> add_117_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_117_gamma_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(824287168)))];
            tensor<fp16, [320]> add_117_beta_0_to_fp16 = const()[name = tensor<string, []>("add_117_beta_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(824287872)))];
            tensor<fp16, []> add_117_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_117_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 320, 64, 64]> add_117_cast = batch_norm(beta = add_117_beta_0_to_fp16, epsilon = add_117_epsilon_0_to_fp16, gamma = add_117_gamma_0_to_fp16, mean = add_117_mean_0_to_fp16, variance = add_117_variance_0_to_fp16, x = reshape_233_cast);
            tensor<fp16, [2, 320, 64, 64]> input_513_cast = silu(x = add_117_cast);
            tensor<int32, [2]> var_8708 = const()[name = tensor<string, []>("op_8708"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8710 = const()[name = tensor<string, []>("op_8710"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_321_pad_type_0 = const()[name = tensor<string, []>("hidden_states_321_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_321_pad_0 = const()[name = tensor<string, []>("hidden_states_321_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [320, 320, 3, 3]> up_blocks_3_resnets_2_conv2_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_2_conv2_weight_to_fp16"), val = tensor<fp16, [320, 320, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(824288576)))];
            tensor<fp16, [320]> up_blocks_3_resnets_2_conv2_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_2_conv2_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(826131840)))];
            tensor<fp16, [2, 320, 64, 64]> hidden_states_321_cast = conv(bias = up_blocks_3_resnets_2_conv2_bias_to_fp16, dilations = var_8710, groups = var_7587, pad = hidden_states_321_pad_0, pad_type = hidden_states_321_pad_type_0, strides = var_8708, weight = up_blocks_3_resnets_2_conv2_weight_to_fp16, x = input_513_cast);
            tensor<int32, [2]> var_8715 = const()[name = tensor<string, []>("op_8715"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8717 = const()[name = tensor<string, []>("op_8717"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_pad_type_0 = const()[name = tensor<string, []>("x_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_pad_0 = const()[name = tensor<string, []>("x_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 640, 1, 1]> up_blocks_3_resnets_2_conv_shortcut_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_2_conv_shortcut_weight_to_fp16"), val = tensor<fp16, [320, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(826132544)))];
            tensor<fp16, [320]> up_blocks_3_resnets_2_conv_shortcut_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_2_conv_shortcut_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(826542208)))];
            tensor<fp16, [2, 320, 64, 64]> x_cast = conv(bias = up_blocks_3_resnets_2_conv_shortcut_bias_to_fp16, dilations = var_8717, groups = var_7587, pad = x_pad_0, pad_type = x_pad_type_0, strides = var_8715, weight = up_blocks_3_resnets_2_conv_shortcut_weight_to_fp16, x = input_501_cast);
            tensor<fp16, [2, 320, 64, 64]> hidden_states_323_cast = add(x = x_cast, y = hidden_states_321_cast);
            tensor<int32, [5]> reshape_236_shape_0 = const()[name = tensor<string, []>("reshape_236_shape_0"), val = tensor<int32, [5]>([2, 32, 10, 64, 64])];
            tensor<fp16, [2, 32, 10, 64, 64]> reshape_236_cast = reshape(shape = reshape_236_shape_0, x = hidden_states_323_cast);
            tensor<int32, [3]> reduce_mean_177_axes_0 = const()[name = tensor<string, []>("reduce_mean_177_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_177_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_177_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_177_cast = reduce_mean(axes = reduce_mean_177_axes_0, keep_dims = reduce_mean_177_keep_dims_0, x = reshape_236_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> sub_118_cast = sub(x = reshape_236_cast, y = reduce_mean_177_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> square_59_cast = square(x = sub_118_cast);
            tensor<int32, [3]> reduce_mean_179_axes_0 = const()[name = tensor<string, []>("reduce_mean_179_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_179_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_179_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_179_cast = reduce_mean(axes = reduce_mean_179_axes_0, keep_dims = reduce_mean_179_keep_dims_0, x = square_59_cast);
            tensor<fp16, []> add_118_y_0_to_fp16 = const()[name = tensor<string, []>("add_118_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_118_cast = add(x = reduce_mean_179_cast, y = add_118_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_59_cast = sqrt(x = add_118_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> real_div_59_cast = real_div(x = sub_118_cast, y = sqrt_59_cast);
            tensor<int32, [4]> reshape_237_shape_0 = const()[name = tensor<string, []>("reshape_237_shape_0"), val = tensor<int32, [4]>([2, 320, 64, 64])];
            tensor<fp16, [2, 320, 64, 64]> reshape_237_cast = reshape(shape = reshape_237_shape_0, x = real_div_59_cast);
            tensor<fp16, [320]> add_119_mean_0_to_fp16 = const()[name = tensor<string, []>("add_119_mean_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(826542912)))];
            tensor<fp16, [320]> add_119_variance_0_to_fp16 = const()[name = tensor<string, []>("add_119_variance_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(826543616)))];
            tensor<fp16, [320]> add_119_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_119_gamma_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(826544320)))];
            tensor<fp16, [320]> add_119_beta_0_to_fp16 = const()[name = tensor<string, []>("add_119_beta_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(826545024)))];
            tensor<fp16, []> add_119_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_119_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 320, 64, 64]> add_119_cast = batch_norm(beta = add_119_beta_0_to_fp16, epsilon = add_119_epsilon_0_to_fp16, gamma = add_119_gamma_0_to_fp16, mean = add_119_mean_0_to_fp16, variance = add_119_variance_0_to_fp16, x = reshape_237_cast);
            tensor<int32, [2]> var_8737 = const()[name = tensor<string, []>("op_8737"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8739 = const()[name = tensor<string, []>("op_8739"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_325_pad_type_0 = const()[name = tensor<string, []>("hidden_states_325_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_325_pad_0 = const()[name = tensor<string, []>("hidden_states_325_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_2_proj_in_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_2_proj_in_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(826545728)))];
            tensor<fp16, [320]> up_blocks_3_attentions_2_proj_in_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_2_proj_in_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(826750592)))];
            tensor<fp16, [2, 320, 64, 64]> hidden_states_325_cast = conv(bias = up_blocks_3_attentions_2_proj_in_bias_to_fp16, dilations = var_8739, groups = var_7587, pad = hidden_states_325_pad_0, pad_type = hidden_states_325_pad_type_0, strides = var_8737, weight = up_blocks_3_attentions_2_proj_in_weight_to_fp16, x = add_119_cast);
            tensor<int32, [4]> var_8744 = const()[name = tensor<string, []>("op_8744"), val = tensor<int32, [4]>([2, 320, 1, 4096])];
            tensor<fp16, [2, 320, 1, 4096]> inputs_91_cast = reshape(shape = var_8744, x = hidden_states_325_cast);
            tensor<int32, [1]> var_8754 = const()[name = tensor<string, []>("op_8754"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> channels_mean_91_cast = reduce_mean(axes = var_8754, keep_dims = var_7582, x = inputs_91_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_91_cast = sub(x = inputs_91_cast, y = channels_mean_91_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_sq_91_cast = mul(x = zero_mean_91_cast, y = zero_mean_91_cast);
            tensor<int32, [1]> var_8758 = const()[name = tensor<string, []>("op_8758"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> var_8759_cast = reduce_mean(axes = var_8758, keep_dims = var_7582, x = zero_mean_sq_91_cast);
            tensor<fp16, []> var_8760_to_fp16 = const()[name = tensor<string, []>("op_8760_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 4096]> var_8761_cast = add(x = var_8759_cast, y = var_8760_to_fp16);
            tensor<fp16, []> denom_91_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_91_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 4096]> denom_91_cast = rsqrt(epsilon = denom_91_epsilon_0_to_fp16, x = var_8761_cast);
            tensor<fp16, [2, 320, 1, 4096]> out_91_cast = mul(x = zero_mean_91_cast, y = denom_91_cast);
            tensor<fp16, [1, 320, 1, 1]> var_8765_to_fp16 = const()[name = tensor<string, []>("op_8765_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(826751296)))];
            tensor<fp16, [2, 320, 1, 4096]> var_8766_cast = add(x = out_91_cast, y = var_8765_to_fp16);
            tensor<fp16, [1, 320, 1, 1]> var_8768_to_fp16 = const()[name = tensor<string, []>("op_8768_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(826752000)))];
            tensor<fp16, [2, 320, 1, 4096]> hidden_states_327_cast = mul(x = var_8766_cast, y = var_8768_to_fp16);
            tensor<int32, [2]> var_8775 = const()[name = tensor<string, []>("op_8775"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8777 = const()[name = tensor<string, []>("op_8777"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_61_pad_type_0 = const()[name = tensor<string, []>("q_61_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_61_pad_0 = const()[name = tensor<string, []>("q_61_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_2_transformer_blocks_0_attn1_to_q_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_2_transformer_blocks_0_attn1_to_q_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(826752704)))];
            tensor<fp16, [2, 320, 1, 4096]> q_61_cast = conv(dilations = var_8777, groups = var_7587, pad = q_61_pad_0, pad_type = q_61_pad_type_0, strides = var_8775, weight = up_blocks_3_attentions_2_transformer_blocks_0_attn1_to_q_weight_to_fp16, x = hidden_states_327_cast);
            tensor<int32, [2]> var_8781 = const()[name = tensor<string, []>("op_8781"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8783 = const()[name = tensor<string, []>("op_8783"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_121_pad_type_0 = const()[name = tensor<string, []>("k_121_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_121_pad_0 = const()[name = tensor<string, []>("k_121_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_2_transformer_blocks_0_attn1_to_k_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_2_transformer_blocks_0_attn1_to_k_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(826957568)))];
            tensor<fp16, [2, 320, 1, 4096]> k_121_cast = conv(dilations = var_8783, groups = var_7587, pad = k_121_pad_0, pad_type = k_121_pad_type_0, strides = var_8781, weight = up_blocks_3_attentions_2_transformer_blocks_0_attn1_to_k_weight_to_fp16, x = hidden_states_327_cast);
            tensor<int32, [2]> var_8787 = const()[name = tensor<string, []>("op_8787"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8789 = const()[name = tensor<string, []>("op_8789"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_61_pad_type_0 = const()[name = tensor<string, []>("v_61_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_61_pad_0 = const()[name = tensor<string, []>("v_61_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_2_transformer_blocks_0_attn1_to_v_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_2_transformer_blocks_0_attn1_to_v_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(827162432)))];
            tensor<fp16, [2, 320, 1, 4096]> v_61_cast = conv(dilations = var_8789, groups = var_7587, pad = v_61_pad_0, pad_type = v_61_pad_type_0, strides = var_8787, weight = up_blocks_3_attentions_2_transformer_blocks_0_attn1_to_v_weight_to_fp16, x = hidden_states_327_cast);
            tensor<int32, [4]> var_8793_begin_0 = const()[name = tensor<string, []>("op_8793_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_8793_end_0 = const()[name = tensor<string, []>("op_8793_end_0"), val = tensor<int32, [4]>([2, 40, 1, 4096])];
            tensor<bool, [4]> var_8793_end_mask_0 = const()[name = tensor<string, []>("op_8793_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8793_cast = slice_by_index(begin = var_8793_begin_0, end = var_8793_end_0, end_mask = var_8793_end_mask_0, x = q_61_cast);
            tensor<int32, [4]> var_8797_begin_0 = const()[name = tensor<string, []>("op_8797_begin_0"), val = tensor<int32, [4]>([0, 40, 0, 0])];
            tensor<int32, [4]> var_8797_end_0 = const()[name = tensor<string, []>("op_8797_end_0"), val = tensor<int32, [4]>([2, 80, 1, 4096])];
            tensor<bool, [4]> var_8797_end_mask_0 = const()[name = tensor<string, []>("op_8797_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8797_cast = slice_by_index(begin = var_8797_begin_0, end = var_8797_end_0, end_mask = var_8797_end_mask_0, x = q_61_cast);
            tensor<int32, [4]> var_8801_begin_0 = const()[name = tensor<string, []>("op_8801_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_8801_end_0 = const()[name = tensor<string, []>("op_8801_end_0"), val = tensor<int32, [4]>([2, 120, 1, 4096])];
            tensor<bool, [4]> var_8801_end_mask_0 = const()[name = tensor<string, []>("op_8801_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8801_cast = slice_by_index(begin = var_8801_begin_0, end = var_8801_end_0, end_mask = var_8801_end_mask_0, x = q_61_cast);
            tensor<int32, [4]> var_8805_begin_0 = const()[name = tensor<string, []>("op_8805_begin_0"), val = tensor<int32, [4]>([0, 120, 0, 0])];
            tensor<int32, [4]> var_8805_end_0 = const()[name = tensor<string, []>("op_8805_end_0"), val = tensor<int32, [4]>([2, 160, 1, 4096])];
            tensor<bool, [4]> var_8805_end_mask_0 = const()[name = tensor<string, []>("op_8805_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8805_cast = slice_by_index(begin = var_8805_begin_0, end = var_8805_end_0, end_mask = var_8805_end_mask_0, x = q_61_cast);
            tensor<int32, [4]> var_8809_begin_0 = const()[name = tensor<string, []>("op_8809_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_8809_end_0 = const()[name = tensor<string, []>("op_8809_end_0"), val = tensor<int32, [4]>([2, 200, 1, 4096])];
            tensor<bool, [4]> var_8809_end_mask_0 = const()[name = tensor<string, []>("op_8809_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8809_cast = slice_by_index(begin = var_8809_begin_0, end = var_8809_end_0, end_mask = var_8809_end_mask_0, x = q_61_cast);
            tensor<int32, [4]> var_8813_begin_0 = const()[name = tensor<string, []>("op_8813_begin_0"), val = tensor<int32, [4]>([0, 200, 0, 0])];
            tensor<int32, [4]> var_8813_end_0 = const()[name = tensor<string, []>("op_8813_end_0"), val = tensor<int32, [4]>([2, 240, 1, 4096])];
            tensor<bool, [4]> var_8813_end_mask_0 = const()[name = tensor<string, []>("op_8813_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8813_cast = slice_by_index(begin = var_8813_begin_0, end = var_8813_end_0, end_mask = var_8813_end_mask_0, x = q_61_cast);
            tensor<int32, [4]> var_8817_begin_0 = const()[name = tensor<string, []>("op_8817_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_8817_end_0 = const()[name = tensor<string, []>("op_8817_end_0"), val = tensor<int32, [4]>([2, 280, 1, 4096])];
            tensor<bool, [4]> var_8817_end_mask_0 = const()[name = tensor<string, []>("op_8817_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8817_cast = slice_by_index(begin = var_8817_begin_0, end = var_8817_end_0, end_mask = var_8817_end_mask_0, x = q_61_cast);
            tensor<int32, [4]> var_8821_begin_0 = const()[name = tensor<string, []>("op_8821_begin_0"), val = tensor<int32, [4]>([0, 280, 0, 0])];
            tensor<int32, [4]> var_8821_end_0 = const()[name = tensor<string, []>("op_8821_end_0"), val = tensor<int32, [4]>([2, 320, 1, 4096])];
            tensor<bool, [4]> var_8821_end_mask_0 = const()[name = tensor<string, []>("op_8821_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8821_cast = slice_by_index(begin = var_8821_begin_0, end = var_8821_end_0, end_mask = var_8821_end_mask_0, x = q_61_cast);
            tensor<int32, [4]> k_123_perm_0 = const()[name = tensor<string, []>("k_123_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_8828_begin_0 = const()[name = tensor<string, []>("op_8828_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_8828_end_0 = const()[name = tensor<string, []>("op_8828_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 40])];
            tensor<bool, [4]> var_8828_end_mask_0 = const()[name = tensor<string, []>("op_8828_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 320]> transpose_1 = transpose(perm = k_123_perm_0, x = k_121_cast);
            tensor<fp16, [2, 4096, 1, 40]> var_8828_cast = slice_by_index(begin = var_8828_begin_0, end = var_8828_end_0, end_mask = var_8828_end_mask_0, x = transpose_1);
            tensor<int32, [4]> var_8832_begin_0 = const()[name = tensor<string, []>("op_8832_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 40])];
            tensor<int32, [4]> var_8832_end_0 = const()[name = tensor<string, []>("op_8832_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 80])];
            tensor<bool, [4]> var_8832_end_mask_0 = const()[name = tensor<string, []>("op_8832_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_8832_cast = slice_by_index(begin = var_8832_begin_0, end = var_8832_end_0, end_mask = var_8832_end_mask_0, x = transpose_1);
            tensor<int32, [4]> var_8836_begin_0 = const()[name = tensor<string, []>("op_8836_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 80])];
            tensor<int32, [4]> var_8836_end_0 = const()[name = tensor<string, []>("op_8836_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 120])];
            tensor<bool, [4]> var_8836_end_mask_0 = const()[name = tensor<string, []>("op_8836_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_8836_cast = slice_by_index(begin = var_8836_begin_0, end = var_8836_end_0, end_mask = var_8836_end_mask_0, x = transpose_1);
            tensor<int32, [4]> var_8840_begin_0 = const()[name = tensor<string, []>("op_8840_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 120])];
            tensor<int32, [4]> var_8840_end_0 = const()[name = tensor<string, []>("op_8840_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 160])];
            tensor<bool, [4]> var_8840_end_mask_0 = const()[name = tensor<string, []>("op_8840_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_8840_cast = slice_by_index(begin = var_8840_begin_0, end = var_8840_end_0, end_mask = var_8840_end_mask_0, x = transpose_1);
            tensor<int32, [4]> var_8844_begin_0 = const()[name = tensor<string, []>("op_8844_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 160])];
            tensor<int32, [4]> var_8844_end_0 = const()[name = tensor<string, []>("op_8844_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 200])];
            tensor<bool, [4]> var_8844_end_mask_0 = const()[name = tensor<string, []>("op_8844_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_8844_cast = slice_by_index(begin = var_8844_begin_0, end = var_8844_end_0, end_mask = var_8844_end_mask_0, x = transpose_1);
            tensor<int32, [4]> var_8848_begin_0 = const()[name = tensor<string, []>("op_8848_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 200])];
            tensor<int32, [4]> var_8848_end_0 = const()[name = tensor<string, []>("op_8848_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 240])];
            tensor<bool, [4]> var_8848_end_mask_0 = const()[name = tensor<string, []>("op_8848_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_8848_cast = slice_by_index(begin = var_8848_begin_0, end = var_8848_end_0, end_mask = var_8848_end_mask_0, x = transpose_1);
            tensor<int32, [4]> var_8852_begin_0 = const()[name = tensor<string, []>("op_8852_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 240])];
            tensor<int32, [4]> var_8852_end_0 = const()[name = tensor<string, []>("op_8852_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 280])];
            tensor<bool, [4]> var_8852_end_mask_0 = const()[name = tensor<string, []>("op_8852_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_8852_cast = slice_by_index(begin = var_8852_begin_0, end = var_8852_end_0, end_mask = var_8852_end_mask_0, x = transpose_1);
            tensor<int32, [4]> var_8856_begin_0 = const()[name = tensor<string, []>("op_8856_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 280])];
            tensor<int32, [4]> var_8856_end_0 = const()[name = tensor<string, []>("op_8856_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 320])];
            tensor<bool, [4]> var_8856_end_mask_0 = const()[name = tensor<string, []>("op_8856_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_8856_cast = slice_by_index(begin = var_8856_begin_0, end = var_8856_end_0, end_mask = var_8856_end_mask_0, x = transpose_1);
            tensor<int32, [4]> var_8858_begin_0 = const()[name = tensor<string, []>("op_8858_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_8858_end_0 = const()[name = tensor<string, []>("op_8858_end_0"), val = tensor<int32, [4]>([2, 40, 1, 4096])];
            tensor<bool, [4]> var_8858_end_mask_0 = const()[name = tensor<string, []>("op_8858_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8858_cast = slice_by_index(begin = var_8858_begin_0, end = var_8858_end_0, end_mask = var_8858_end_mask_0, x = v_61_cast);
            tensor<int32, [4]> var_8862_begin_0 = const()[name = tensor<string, []>("op_8862_begin_0"), val = tensor<int32, [4]>([0, 40, 0, 0])];
            tensor<int32, [4]> var_8862_end_0 = const()[name = tensor<string, []>("op_8862_end_0"), val = tensor<int32, [4]>([2, 80, 1, 4096])];
            tensor<bool, [4]> var_8862_end_mask_0 = const()[name = tensor<string, []>("op_8862_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8862_cast = slice_by_index(begin = var_8862_begin_0, end = var_8862_end_0, end_mask = var_8862_end_mask_0, x = v_61_cast);
            tensor<int32, [4]> var_8866_begin_0 = const()[name = tensor<string, []>("op_8866_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_8866_end_0 = const()[name = tensor<string, []>("op_8866_end_0"), val = tensor<int32, [4]>([2, 120, 1, 4096])];
            tensor<bool, [4]> var_8866_end_mask_0 = const()[name = tensor<string, []>("op_8866_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8866_cast = slice_by_index(begin = var_8866_begin_0, end = var_8866_end_0, end_mask = var_8866_end_mask_0, x = v_61_cast);
            tensor<int32, [4]> var_8870_begin_0 = const()[name = tensor<string, []>("op_8870_begin_0"), val = tensor<int32, [4]>([0, 120, 0, 0])];
            tensor<int32, [4]> var_8870_end_0 = const()[name = tensor<string, []>("op_8870_end_0"), val = tensor<int32, [4]>([2, 160, 1, 4096])];
            tensor<bool, [4]> var_8870_end_mask_0 = const()[name = tensor<string, []>("op_8870_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8870_cast = slice_by_index(begin = var_8870_begin_0, end = var_8870_end_0, end_mask = var_8870_end_mask_0, x = v_61_cast);
            tensor<int32, [4]> var_8874_begin_0 = const()[name = tensor<string, []>("op_8874_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_8874_end_0 = const()[name = tensor<string, []>("op_8874_end_0"), val = tensor<int32, [4]>([2, 200, 1, 4096])];
            tensor<bool, [4]> var_8874_end_mask_0 = const()[name = tensor<string, []>("op_8874_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8874_cast = slice_by_index(begin = var_8874_begin_0, end = var_8874_end_0, end_mask = var_8874_end_mask_0, x = v_61_cast);
            tensor<int32, [4]> var_8878_begin_0 = const()[name = tensor<string, []>("op_8878_begin_0"), val = tensor<int32, [4]>([0, 200, 0, 0])];
            tensor<int32, [4]> var_8878_end_0 = const()[name = tensor<string, []>("op_8878_end_0"), val = tensor<int32, [4]>([2, 240, 1, 4096])];
            tensor<bool, [4]> var_8878_end_mask_0 = const()[name = tensor<string, []>("op_8878_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8878_cast = slice_by_index(begin = var_8878_begin_0, end = var_8878_end_0, end_mask = var_8878_end_mask_0, x = v_61_cast);
            tensor<int32, [4]> var_8882_begin_0 = const()[name = tensor<string, []>("op_8882_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_8882_end_0 = const()[name = tensor<string, []>("op_8882_end_0"), val = tensor<int32, [4]>([2, 280, 1, 4096])];
            tensor<bool, [4]> var_8882_end_mask_0 = const()[name = tensor<string, []>("op_8882_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8882_cast = slice_by_index(begin = var_8882_begin_0, end = var_8882_end_0, end_mask = var_8882_end_mask_0, x = v_61_cast);
            tensor<int32, [4]> var_8886_begin_0 = const()[name = tensor<string, []>("op_8886_begin_0"), val = tensor<int32, [4]>([0, 280, 0, 0])];
            tensor<int32, [4]> var_8886_end_0 = const()[name = tensor<string, []>("op_8886_end_0"), val = tensor<int32, [4]>([2, 320, 1, 4096])];
            tensor<bool, [4]> var_8886_end_mask_0 = const()[name = tensor<string, []>("op_8886_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8886_cast = slice_by_index(begin = var_8886_begin_0, end = var_8886_end_0, end_mask = var_8886_end_mask_0, x = v_61_cast);
            tensor<string, []> var_8890_equation_0 = const()[name = tensor<string, []>("op_8890_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_8890_cast = einsum(equation = var_8890_equation_0, values = (var_8828_cast, var_8793_cast));
            tensor<fp16, []> var_8891_to_fp16 = const()[name = tensor<string, []>("op_8891_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_481_cast = mul(x = var_8890_cast, y = var_8891_to_fp16);
            tensor<string, []> var_8894_equation_0 = const()[name = tensor<string, []>("op_8894_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_8894_cast = einsum(equation = var_8894_equation_0, values = (var_8832_cast, var_8797_cast));
            tensor<fp16, []> var_8895_to_fp16 = const()[name = tensor<string, []>("op_8895_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_483_cast = mul(x = var_8894_cast, y = var_8895_to_fp16);
            tensor<string, []> var_8898_equation_0 = const()[name = tensor<string, []>("op_8898_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_8898_cast = einsum(equation = var_8898_equation_0, values = (var_8836_cast, var_8801_cast));
            tensor<fp16, []> var_8899_to_fp16 = const()[name = tensor<string, []>("op_8899_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_485_cast = mul(x = var_8898_cast, y = var_8899_to_fp16);
            tensor<string, []> var_8902_equation_0 = const()[name = tensor<string, []>("op_8902_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_8902_cast = einsum(equation = var_8902_equation_0, values = (var_8840_cast, var_8805_cast));
            tensor<fp16, []> var_8903_to_fp16 = const()[name = tensor<string, []>("op_8903_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_487_cast = mul(x = var_8902_cast, y = var_8903_to_fp16);
            tensor<string, []> var_8906_equation_0 = const()[name = tensor<string, []>("op_8906_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_8906_cast = einsum(equation = var_8906_equation_0, values = (var_8844_cast, var_8809_cast));
            tensor<fp16, []> var_8907_to_fp16 = const()[name = tensor<string, []>("op_8907_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_489_cast = mul(x = var_8906_cast, y = var_8907_to_fp16);
            tensor<string, []> var_8910_equation_0 = const()[name = tensor<string, []>("op_8910_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_8910_cast = einsum(equation = var_8910_equation_0, values = (var_8848_cast, var_8813_cast));
            tensor<fp16, []> var_8911_to_fp16 = const()[name = tensor<string, []>("op_8911_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_491_cast = mul(x = var_8910_cast, y = var_8911_to_fp16);
            tensor<string, []> var_8914_equation_0 = const()[name = tensor<string, []>("op_8914_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_8914_cast = einsum(equation = var_8914_equation_0, values = (var_8852_cast, var_8817_cast));
            tensor<fp16, []> var_8915_to_fp16 = const()[name = tensor<string, []>("op_8915_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_493_cast = mul(x = var_8914_cast, y = var_8915_to_fp16);
            tensor<string, []> var_8918_equation_0 = const()[name = tensor<string, []>("op_8918_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_8918_cast = einsum(equation = var_8918_equation_0, values = (var_8856_cast, var_8821_cast));
            tensor<fp16, []> var_8919_to_fp16 = const()[name = tensor<string, []>("op_8919_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_495_cast = mul(x = var_8918_cast, y = var_8919_to_fp16);
            tensor<fp16, [2, 4096, 1, 4096]> var_8921_cast = softmax(axis = var_7587, x = aw_481_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_8922_cast = softmax(axis = var_7587, x = aw_483_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_8923_cast = softmax(axis = var_7587, x = aw_485_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_8924_cast = softmax(axis = var_7587, x = aw_487_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_8925_cast = softmax(axis = var_7587, x = aw_489_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_8926_cast = softmax(axis = var_7587, x = aw_491_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_8927_cast = softmax(axis = var_7587, x = aw_493_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_8928_cast = softmax(axis = var_7587, x = aw_495_cast);
            tensor<string, []> var_8930_equation_0 = const()[name = tensor<string, []>("op_8930_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_8930_cast = einsum(equation = var_8930_equation_0, values = (var_8858_cast, var_8921_cast));
            tensor<string, []> var_8932_equation_0 = const()[name = tensor<string, []>("op_8932_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_8932_cast = einsum(equation = var_8932_equation_0, values = (var_8862_cast, var_8922_cast));
            tensor<string, []> var_8934_equation_0 = const()[name = tensor<string, []>("op_8934_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_8934_cast = einsum(equation = var_8934_equation_0, values = (var_8866_cast, var_8923_cast));
            tensor<string, []> var_8936_equation_0 = const()[name = tensor<string, []>("op_8936_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_8936_cast = einsum(equation = var_8936_equation_0, values = (var_8870_cast, var_8924_cast));
            tensor<string, []> var_8938_equation_0 = const()[name = tensor<string, []>("op_8938_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_8938_cast = einsum(equation = var_8938_equation_0, values = (var_8874_cast, var_8925_cast));
            tensor<string, []> var_8940_equation_0 = const()[name = tensor<string, []>("op_8940_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_8940_cast = einsum(equation = var_8940_equation_0, values = (var_8878_cast, var_8926_cast));
            tensor<string, []> var_8942_equation_0 = const()[name = tensor<string, []>("op_8942_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_8942_cast = einsum(equation = var_8942_equation_0, values = (var_8882_cast, var_8927_cast));
            tensor<string, []> var_8944_equation_0 = const()[name = tensor<string, []>("op_8944_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_8944_cast = einsum(equation = var_8944_equation_0, values = (var_8886_cast, var_8928_cast));
            tensor<bool, []> input_517_interleave_0 = const()[name = tensor<string, []>("input_517_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 320, 1, 4096]> input_517_cast = concat(axis = var_7587, interleave = input_517_interleave_0, values = (var_8930_cast, var_8932_cast, var_8934_cast, var_8936_cast, var_8938_cast, var_8940_cast, var_8942_cast, var_8944_cast));
            tensor<int32, [2]> var_8950 = const()[name = tensor<string, []>("op_8950"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8952 = const()[name = tensor<string, []>("op_8952"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_8954_pad_type_0 = const()[name = tensor<string, []>("op_8954_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_8954_pad_0 = const()[name = tensor<string, []>("op_8954_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_2_transformer_blocks_0_attn1_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_2_transformer_blocks_0_attn1_to_out_0_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(827367296)))];
            tensor<fp16, [320]> up_blocks_3_attentions_2_transformer_blocks_0_attn1_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_2_transformer_blocks_0_attn1_to_out_0_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(827572160)))];
            tensor<fp16, [2, 320, 1, 4096]> var_8954_cast = conv(bias = up_blocks_3_attentions_2_transformer_blocks_0_attn1_to_out_0_bias_to_fp16, dilations = var_8952, groups = var_7587, pad = var_8954_pad_0, pad_type = var_8954_pad_type_0, strides = var_8950, weight = up_blocks_3_attentions_2_transformer_blocks_0_attn1_to_out_0_weight_to_fp16, x = input_517_cast);
            tensor<fp16, [2, 320, 1, 4096]> inputs_93_cast = add(x = var_8954_cast, y = inputs_91_cast);
            tensor<int32, [1]> var_8958 = const()[name = tensor<string, []>("op_8958"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> channels_mean_93_cast = reduce_mean(axes = var_8958, keep_dims = var_7582, x = inputs_93_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_93_cast = sub(x = inputs_93_cast, y = channels_mean_93_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_sq_93_cast = mul(x = zero_mean_93_cast, y = zero_mean_93_cast);
            tensor<int32, [1]> var_8962 = const()[name = tensor<string, []>("op_8962"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> var_8963_cast = reduce_mean(axes = var_8962, keep_dims = var_7582, x = zero_mean_sq_93_cast);
            tensor<fp16, []> var_8964_to_fp16 = const()[name = tensor<string, []>("op_8964_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 4096]> var_8965_cast = add(x = var_8963_cast, y = var_8964_to_fp16);
            tensor<fp16, []> denom_93_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_93_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 4096]> denom_93_cast = rsqrt(epsilon = denom_93_epsilon_0_to_fp16, x = var_8965_cast);
            tensor<fp16, [2, 320, 1, 4096]> out_93_cast = mul(x = zero_mean_93_cast, y = denom_93_cast);
            tensor<fp16, [1, 320, 1, 1]> var_8969_to_fp16 = const()[name = tensor<string, []>("op_8969_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(827572864)))];
            tensor<fp16, [2, 320, 1, 4096]> var_8970_cast = add(x = out_93_cast, y = var_8969_to_fp16);
            tensor<fp16, [1, 320, 1, 1]> var_8972_to_fp16 = const()[name = tensor<string, []>("op_8972_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(827573568)))];
            tensor<fp16, [2, 320, 1, 4096]> hidden_states_329_cast = mul(x = var_8970_cast, y = var_8972_to_fp16);
            tensor<int32, [2]> var_8979 = const()[name = tensor<string, []>("op_8979"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8981 = const()[name = tensor<string, []>("op_8981"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_pad_type_0 = const()[name = tensor<string, []>("q_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_pad_0 = const()[name = tensor<string, []>("q_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_2_transformer_blocks_0_attn2_to_q_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_2_transformer_blocks_0_attn2_to_q_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(827574272)))];
            tensor<fp16, [2, 320, 1, 4096]> q_cast = conv(dilations = var_8981, groups = var_7587, pad = q_pad_0, pad_type = q_pad_type_0, strides = var_8979, weight = up_blocks_3_attentions_2_transformer_blocks_0_attn2_to_q_weight_to_fp16, x = hidden_states_329_cast);
            tensor<int32, [2]> var_8985 = const()[name = tensor<string, []>("op_8985"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8987 = const()[name = tensor<string, []>("op_8987"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_125_pad_type_0 = const()[name = tensor<string, []>("k_125_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_125_pad_0 = const()[name = tensor<string, []>("k_125_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 768, 1, 1]> up_blocks_3_attentions_2_transformer_blocks_0_attn2_to_k_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_2_transformer_blocks_0_attn2_to_k_weight_to_fp16"), val = tensor<fp16, [320, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(827779136)))];
            tensor<fp16, [2, 320, 1, 77]> k_125_cast = conv(dilations = var_8987, groups = var_7587, pad = k_125_pad_0, pad_type = k_125_pad_type_0, strides = var_8985, weight = up_blocks_3_attentions_2_transformer_blocks_0_attn2_to_k_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [2]> var_8991 = const()[name = tensor<string, []>("op_8991"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8993 = const()[name = tensor<string, []>("op_8993"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_pad_type_0 = const()[name = tensor<string, []>("v_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_pad_0 = const()[name = tensor<string, []>("v_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 768, 1, 1]> up_blocks_3_attentions_2_transformer_blocks_0_attn2_to_v_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_2_transformer_blocks_0_attn2_to_v_weight_to_fp16"), val = tensor<fp16, [320, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(828270720)))];
            tensor<fp16, [2, 320, 1, 77]> v_cast = conv(dilations = var_8993, groups = var_7587, pad = v_pad_0, pad_type = v_pad_type_0, strides = var_8991, weight = up_blocks_3_attentions_2_transformer_blocks_0_attn2_to_v_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [4]> var_8997_begin_0 = const()[name = tensor<string, []>("op_8997_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_8997_end_0 = const()[name = tensor<string, []>("op_8997_end_0"), val = tensor<int32, [4]>([2, 40, 1, 4096])];
            tensor<bool, [4]> var_8997_end_mask_0 = const()[name = tensor<string, []>("op_8997_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8997_cast = slice_by_index(begin = var_8997_begin_0, end = var_8997_end_0, end_mask = var_8997_end_mask_0, x = q_cast);
            tensor<int32, [4]> var_9001_begin_0 = const()[name = tensor<string, []>("op_9001_begin_0"), val = tensor<int32, [4]>([0, 40, 0, 0])];
            tensor<int32, [4]> var_9001_end_0 = const()[name = tensor<string, []>("op_9001_end_0"), val = tensor<int32, [4]>([2, 80, 1, 4096])];
            tensor<bool, [4]> var_9001_end_mask_0 = const()[name = tensor<string, []>("op_9001_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_9001_cast = slice_by_index(begin = var_9001_begin_0, end = var_9001_end_0, end_mask = var_9001_end_mask_0, x = q_cast);
            tensor<int32, [4]> var_9005_begin_0 = const()[name = tensor<string, []>("op_9005_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_9005_end_0 = const()[name = tensor<string, []>("op_9005_end_0"), val = tensor<int32, [4]>([2, 120, 1, 4096])];
            tensor<bool, [4]> var_9005_end_mask_0 = const()[name = tensor<string, []>("op_9005_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_9005_cast = slice_by_index(begin = var_9005_begin_0, end = var_9005_end_0, end_mask = var_9005_end_mask_0, x = q_cast);
            tensor<int32, [4]> var_9009_begin_0 = const()[name = tensor<string, []>("op_9009_begin_0"), val = tensor<int32, [4]>([0, 120, 0, 0])];
            tensor<int32, [4]> var_9009_end_0 = const()[name = tensor<string, []>("op_9009_end_0"), val = tensor<int32, [4]>([2, 160, 1, 4096])];
            tensor<bool, [4]> var_9009_end_mask_0 = const()[name = tensor<string, []>("op_9009_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_9009_cast = slice_by_index(begin = var_9009_begin_0, end = var_9009_end_0, end_mask = var_9009_end_mask_0, x = q_cast);
            tensor<int32, [4]> var_9013_begin_0 = const()[name = tensor<string, []>("op_9013_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_9013_end_0 = const()[name = tensor<string, []>("op_9013_end_0"), val = tensor<int32, [4]>([2, 200, 1, 4096])];
            tensor<bool, [4]> var_9013_end_mask_0 = const()[name = tensor<string, []>("op_9013_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_9013_cast = slice_by_index(begin = var_9013_begin_0, end = var_9013_end_0, end_mask = var_9013_end_mask_0, x = q_cast);
            tensor<int32, [4]> var_9017_begin_0 = const()[name = tensor<string, []>("op_9017_begin_0"), val = tensor<int32, [4]>([0, 200, 0, 0])];
            tensor<int32, [4]> var_9017_end_0 = const()[name = tensor<string, []>("op_9017_end_0"), val = tensor<int32, [4]>([2, 240, 1, 4096])];
            tensor<bool, [4]> var_9017_end_mask_0 = const()[name = tensor<string, []>("op_9017_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_9017_cast = slice_by_index(begin = var_9017_begin_0, end = var_9017_end_0, end_mask = var_9017_end_mask_0, x = q_cast);
            tensor<int32, [4]> var_9021_begin_0 = const()[name = tensor<string, []>("op_9021_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_9021_end_0 = const()[name = tensor<string, []>("op_9021_end_0"), val = tensor<int32, [4]>([2, 280, 1, 4096])];
            tensor<bool, [4]> var_9021_end_mask_0 = const()[name = tensor<string, []>("op_9021_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_9021_cast = slice_by_index(begin = var_9021_begin_0, end = var_9021_end_0, end_mask = var_9021_end_mask_0, x = q_cast);
            tensor<int32, [4]> var_9025_begin_0 = const()[name = tensor<string, []>("op_9025_begin_0"), val = tensor<int32, [4]>([0, 280, 0, 0])];
            tensor<int32, [4]> var_9025_end_0 = const()[name = tensor<string, []>("op_9025_end_0"), val = tensor<int32, [4]>([2, 320, 1, 4096])];
            tensor<bool, [4]> var_9025_end_mask_0 = const()[name = tensor<string, []>("op_9025_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_9025_cast = slice_by_index(begin = var_9025_begin_0, end = var_9025_end_0, end_mask = var_9025_end_mask_0, x = q_cast);
            tensor<int32, [4]> k_perm_0 = const()[name = tensor<string, []>("k_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_9032_begin_0 = const()[name = tensor<string, []>("op_9032_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_9032_end_0 = const()[name = tensor<string, []>("op_9032_end_0"), val = tensor<int32, [4]>([2, 77, 1, 40])];
            tensor<bool, [4]> var_9032_end_mask_0 = const()[name = tensor<string, []>("op_9032_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 320]> transpose_0 = transpose(perm = k_perm_0, x = k_125_cast);
            tensor<fp16, [2, 77, 1, 40]> var_9032_cast = slice_by_index(begin = var_9032_begin_0, end = var_9032_end_0, end_mask = var_9032_end_mask_0, x = transpose_0);
            tensor<int32, [4]> var_9036_begin_0 = const()[name = tensor<string, []>("op_9036_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 40])];
            tensor<int32, [4]> var_9036_end_0 = const()[name = tensor<string, []>("op_9036_end_0"), val = tensor<int32, [4]>([2, 77, 1, 80])];
            tensor<bool, [4]> var_9036_end_mask_0 = const()[name = tensor<string, []>("op_9036_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_9036_cast = slice_by_index(begin = var_9036_begin_0, end = var_9036_end_0, end_mask = var_9036_end_mask_0, x = transpose_0);
            tensor<int32, [4]> var_9040_begin_0 = const()[name = tensor<string, []>("op_9040_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 80])];
            tensor<int32, [4]> var_9040_end_0 = const()[name = tensor<string, []>("op_9040_end_0"), val = tensor<int32, [4]>([2, 77, 1, 120])];
            tensor<bool, [4]> var_9040_end_mask_0 = const()[name = tensor<string, []>("op_9040_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_9040_cast = slice_by_index(begin = var_9040_begin_0, end = var_9040_end_0, end_mask = var_9040_end_mask_0, x = transpose_0);
            tensor<int32, [4]> var_9044_begin_0 = const()[name = tensor<string, []>("op_9044_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 120])];
            tensor<int32, [4]> var_9044_end_0 = const()[name = tensor<string, []>("op_9044_end_0"), val = tensor<int32, [4]>([2, 77, 1, 160])];
            tensor<bool, [4]> var_9044_end_mask_0 = const()[name = tensor<string, []>("op_9044_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_9044_cast = slice_by_index(begin = var_9044_begin_0, end = var_9044_end_0, end_mask = var_9044_end_mask_0, x = transpose_0);
            tensor<int32, [4]> var_9048_begin_0 = const()[name = tensor<string, []>("op_9048_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 160])];
            tensor<int32, [4]> var_9048_end_0 = const()[name = tensor<string, []>("op_9048_end_0"), val = tensor<int32, [4]>([2, 77, 1, 200])];
            tensor<bool, [4]> var_9048_end_mask_0 = const()[name = tensor<string, []>("op_9048_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_9048_cast = slice_by_index(begin = var_9048_begin_0, end = var_9048_end_0, end_mask = var_9048_end_mask_0, x = transpose_0);
            tensor<int32, [4]> var_9052_begin_0 = const()[name = tensor<string, []>("op_9052_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 200])];
            tensor<int32, [4]> var_9052_end_0 = const()[name = tensor<string, []>("op_9052_end_0"), val = tensor<int32, [4]>([2, 77, 1, 240])];
            tensor<bool, [4]> var_9052_end_mask_0 = const()[name = tensor<string, []>("op_9052_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_9052_cast = slice_by_index(begin = var_9052_begin_0, end = var_9052_end_0, end_mask = var_9052_end_mask_0, x = transpose_0);
            tensor<int32, [4]> var_9056_begin_0 = const()[name = tensor<string, []>("op_9056_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 240])];
            tensor<int32, [4]> var_9056_end_0 = const()[name = tensor<string, []>("op_9056_end_0"), val = tensor<int32, [4]>([2, 77, 1, 280])];
            tensor<bool, [4]> var_9056_end_mask_0 = const()[name = tensor<string, []>("op_9056_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_9056_cast = slice_by_index(begin = var_9056_begin_0, end = var_9056_end_0, end_mask = var_9056_end_mask_0, x = transpose_0);
            tensor<int32, [4]> var_9060_begin_0 = const()[name = tensor<string, []>("op_9060_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 280])];
            tensor<int32, [4]> var_9060_end_0 = const()[name = tensor<string, []>("op_9060_end_0"), val = tensor<int32, [4]>([2, 77, 1, 320])];
            tensor<bool, [4]> var_9060_end_mask_0 = const()[name = tensor<string, []>("op_9060_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_9060_cast = slice_by_index(begin = var_9060_begin_0, end = var_9060_end_0, end_mask = var_9060_end_mask_0, x = transpose_0);
            tensor<int32, [4]> var_9062_begin_0 = const()[name = tensor<string, []>("op_9062_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_9062_end_0 = const()[name = tensor<string, []>("op_9062_end_0"), val = tensor<int32, [4]>([2, 40, 1, 77])];
            tensor<bool, [4]> var_9062_end_mask_0 = const()[name = tensor<string, []>("op_9062_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_9062_cast = slice_by_index(begin = var_9062_begin_0, end = var_9062_end_0, end_mask = var_9062_end_mask_0, x = v_cast);
            tensor<int32, [4]> var_9066_begin_0 = const()[name = tensor<string, []>("op_9066_begin_0"), val = tensor<int32, [4]>([0, 40, 0, 0])];
            tensor<int32, [4]> var_9066_end_0 = const()[name = tensor<string, []>("op_9066_end_0"), val = tensor<int32, [4]>([2, 80, 1, 77])];
            tensor<bool, [4]> var_9066_end_mask_0 = const()[name = tensor<string, []>("op_9066_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_9066_cast = slice_by_index(begin = var_9066_begin_0, end = var_9066_end_0, end_mask = var_9066_end_mask_0, x = v_cast);
            tensor<int32, [4]> var_9070_begin_0 = const()[name = tensor<string, []>("op_9070_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_9070_end_0 = const()[name = tensor<string, []>("op_9070_end_0"), val = tensor<int32, [4]>([2, 120, 1, 77])];
            tensor<bool, [4]> var_9070_end_mask_0 = const()[name = tensor<string, []>("op_9070_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_9070_cast = slice_by_index(begin = var_9070_begin_0, end = var_9070_end_0, end_mask = var_9070_end_mask_0, x = v_cast);
            tensor<int32, [4]> var_9074_begin_0 = const()[name = tensor<string, []>("op_9074_begin_0"), val = tensor<int32, [4]>([0, 120, 0, 0])];
            tensor<int32, [4]> var_9074_end_0 = const()[name = tensor<string, []>("op_9074_end_0"), val = tensor<int32, [4]>([2, 160, 1, 77])];
            tensor<bool, [4]> var_9074_end_mask_0 = const()[name = tensor<string, []>("op_9074_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_9074_cast = slice_by_index(begin = var_9074_begin_0, end = var_9074_end_0, end_mask = var_9074_end_mask_0, x = v_cast);
            tensor<int32, [4]> var_9078_begin_0 = const()[name = tensor<string, []>("op_9078_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_9078_end_0 = const()[name = tensor<string, []>("op_9078_end_0"), val = tensor<int32, [4]>([2, 200, 1, 77])];
            tensor<bool, [4]> var_9078_end_mask_0 = const()[name = tensor<string, []>("op_9078_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_9078_cast = slice_by_index(begin = var_9078_begin_0, end = var_9078_end_0, end_mask = var_9078_end_mask_0, x = v_cast);
            tensor<int32, [4]> var_9082_begin_0 = const()[name = tensor<string, []>("op_9082_begin_0"), val = tensor<int32, [4]>([0, 200, 0, 0])];
            tensor<int32, [4]> var_9082_end_0 = const()[name = tensor<string, []>("op_9082_end_0"), val = tensor<int32, [4]>([2, 240, 1, 77])];
            tensor<bool, [4]> var_9082_end_mask_0 = const()[name = tensor<string, []>("op_9082_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_9082_cast = slice_by_index(begin = var_9082_begin_0, end = var_9082_end_0, end_mask = var_9082_end_mask_0, x = v_cast);
            tensor<int32, [4]> var_9086_begin_0 = const()[name = tensor<string, []>("op_9086_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_9086_end_0 = const()[name = tensor<string, []>("op_9086_end_0"), val = tensor<int32, [4]>([2, 280, 1, 77])];
            tensor<bool, [4]> var_9086_end_mask_0 = const()[name = tensor<string, []>("op_9086_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_9086_cast = slice_by_index(begin = var_9086_begin_0, end = var_9086_end_0, end_mask = var_9086_end_mask_0, x = v_cast);
            tensor<int32, [4]> var_9090_begin_0 = const()[name = tensor<string, []>("op_9090_begin_0"), val = tensor<int32, [4]>([0, 280, 0, 0])];
            tensor<int32, [4]> var_9090_end_0 = const()[name = tensor<string, []>("op_9090_end_0"), val = tensor<int32, [4]>([2, 320, 1, 77])];
            tensor<bool, [4]> var_9090_end_mask_0 = const()[name = tensor<string, []>("op_9090_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_9090_cast = slice_by_index(begin = var_9090_begin_0, end = var_9090_end_0, end_mask = var_9090_end_mask_0, x = v_cast);
            tensor<string, []> var_9094_equation_0 = const()[name = tensor<string, []>("op_9094_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_9094_cast = einsum(equation = var_9094_equation_0, values = (var_9032_cast, var_8997_cast));
            tensor<fp16, []> var_9095_to_fp16 = const()[name = tensor<string, []>("op_9095_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_497_cast = mul(x = var_9094_cast, y = var_9095_to_fp16);
            tensor<string, []> var_9098_equation_0 = const()[name = tensor<string, []>("op_9098_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_9098_cast = einsum(equation = var_9098_equation_0, values = (var_9036_cast, var_9001_cast));
            tensor<fp16, []> var_9099_to_fp16 = const()[name = tensor<string, []>("op_9099_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_499_cast = mul(x = var_9098_cast, y = var_9099_to_fp16);
            tensor<string, []> var_9102_equation_0 = const()[name = tensor<string, []>("op_9102_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_9102_cast = einsum(equation = var_9102_equation_0, values = (var_9040_cast, var_9005_cast));
            tensor<fp16, []> var_9103_to_fp16 = const()[name = tensor<string, []>("op_9103_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_501_cast = mul(x = var_9102_cast, y = var_9103_to_fp16);
            tensor<string, []> var_9106_equation_0 = const()[name = tensor<string, []>("op_9106_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_9106_cast = einsum(equation = var_9106_equation_0, values = (var_9044_cast, var_9009_cast));
            tensor<fp16, []> var_9107_to_fp16 = const()[name = tensor<string, []>("op_9107_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_503_cast = mul(x = var_9106_cast, y = var_9107_to_fp16);
            tensor<string, []> var_9110_equation_0 = const()[name = tensor<string, []>("op_9110_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_9110_cast = einsum(equation = var_9110_equation_0, values = (var_9048_cast, var_9013_cast));
            tensor<fp16, []> var_9111_to_fp16 = const()[name = tensor<string, []>("op_9111_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_505_cast = mul(x = var_9110_cast, y = var_9111_to_fp16);
            tensor<string, []> var_9114_equation_0 = const()[name = tensor<string, []>("op_9114_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_9114_cast = einsum(equation = var_9114_equation_0, values = (var_9052_cast, var_9017_cast));
            tensor<fp16, []> var_9115_to_fp16 = const()[name = tensor<string, []>("op_9115_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_507_cast = mul(x = var_9114_cast, y = var_9115_to_fp16);
            tensor<string, []> var_9118_equation_0 = const()[name = tensor<string, []>("op_9118_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_9118_cast = einsum(equation = var_9118_equation_0, values = (var_9056_cast, var_9021_cast));
            tensor<fp16, []> var_9119_to_fp16 = const()[name = tensor<string, []>("op_9119_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_509_cast = mul(x = var_9118_cast, y = var_9119_to_fp16);
            tensor<string, []> var_9122_equation_0 = const()[name = tensor<string, []>("op_9122_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_9122_cast = einsum(equation = var_9122_equation_0, values = (var_9060_cast, var_9025_cast));
            tensor<fp16, []> var_9123_to_fp16 = const()[name = tensor<string, []>("op_9123_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_cast = mul(x = var_9122_cast, y = var_9123_to_fp16);
            tensor<fp16, [2, 77, 1, 4096]> var_9125_cast = softmax(axis = var_7587, x = aw_497_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_9126_cast = softmax(axis = var_7587, x = aw_499_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_9127_cast = softmax(axis = var_7587, x = aw_501_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_9128_cast = softmax(axis = var_7587, x = aw_503_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_9129_cast = softmax(axis = var_7587, x = aw_505_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_9130_cast = softmax(axis = var_7587, x = aw_507_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_9131_cast = softmax(axis = var_7587, x = aw_509_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_9132_cast = softmax(axis = var_7587, x = aw_cast);
            tensor<string, []> var_9134_equation_0 = const()[name = tensor<string, []>("op_9134_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_9134_cast = einsum(equation = var_9134_equation_0, values = (var_9062_cast, var_9125_cast));
            tensor<string, []> var_9136_equation_0 = const()[name = tensor<string, []>("op_9136_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_9136_cast = einsum(equation = var_9136_equation_0, values = (var_9066_cast, var_9126_cast));
            tensor<string, []> var_9138_equation_0 = const()[name = tensor<string, []>("op_9138_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_9138_cast = einsum(equation = var_9138_equation_0, values = (var_9070_cast, var_9127_cast));
            tensor<string, []> var_9140_equation_0 = const()[name = tensor<string, []>("op_9140_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_9140_cast = einsum(equation = var_9140_equation_0, values = (var_9074_cast, var_9128_cast));
            tensor<string, []> var_9142_equation_0 = const()[name = tensor<string, []>("op_9142_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_9142_cast = einsum(equation = var_9142_equation_0, values = (var_9078_cast, var_9129_cast));
            tensor<string, []> var_9144_equation_0 = const()[name = tensor<string, []>("op_9144_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_9144_cast = einsum(equation = var_9144_equation_0, values = (var_9082_cast, var_9130_cast));
            tensor<string, []> var_9146_equation_0 = const()[name = tensor<string, []>("op_9146_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_9146_cast = einsum(equation = var_9146_equation_0, values = (var_9086_cast, var_9131_cast));
            tensor<string, []> var_9148_equation_0 = const()[name = tensor<string, []>("op_9148_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_9148_cast = einsum(equation = var_9148_equation_0, values = (var_9090_cast, var_9132_cast));
            tensor<bool, []> input_519_interleave_0 = const()[name = tensor<string, []>("input_519_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 320, 1, 4096]> input_519_cast = concat(axis = var_7587, interleave = input_519_interleave_0, values = (var_9134_cast, var_9136_cast, var_9138_cast, var_9140_cast, var_9142_cast, var_9144_cast, var_9146_cast, var_9148_cast));
            tensor<int32, [2]> var_9154 = const()[name = tensor<string, []>("op_9154"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_9156 = const()[name = tensor<string, []>("op_9156"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_9158_pad_type_0 = const()[name = tensor<string, []>("op_9158_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_9158_pad_0 = const()[name = tensor<string, []>("op_9158_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_2_transformer_blocks_0_attn2_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_2_transformer_blocks_0_attn2_to_out_0_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(828762304)))];
            tensor<fp16, [320]> up_blocks_3_attentions_2_transformer_blocks_0_attn2_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_2_transformer_blocks_0_attn2_to_out_0_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(828967168)))];
            tensor<fp16, [2, 320, 1, 4096]> var_9158_cast = conv(bias = up_blocks_3_attentions_2_transformer_blocks_0_attn2_to_out_0_bias_to_fp16, dilations = var_9156, groups = var_7587, pad = var_9158_pad_0, pad_type = var_9158_pad_type_0, strides = var_9154, weight = up_blocks_3_attentions_2_transformer_blocks_0_attn2_to_out_0_weight_to_fp16, x = input_519_cast);
            tensor<fp16, [2, 320, 1, 4096]> inputs_cast = add(x = var_9158_cast, y = inputs_93_cast);
            tensor<int32, [1]> var_9162 = const()[name = tensor<string, []>("op_9162"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> channels_mean_cast = reduce_mean(axes = var_9162, keep_dims = var_7582, x = inputs_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_cast = sub(x = inputs_cast, y = channels_mean_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_sq_cast = mul(x = zero_mean_cast, y = zero_mean_cast);
            tensor<int32, [1]> var_9166 = const()[name = tensor<string, []>("op_9166"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> var_9167_cast = reduce_mean(axes = var_9166, keep_dims = var_7582, x = zero_mean_sq_cast);
            tensor<fp16, []> var_9168_to_fp16 = const()[name = tensor<string, []>("op_9168_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 4096]> var_9169_cast = add(x = var_9167_cast, y = var_9168_to_fp16);
            tensor<fp16, []> denom_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 4096]> denom_cast = rsqrt(epsilon = denom_epsilon_0_to_fp16, x = var_9169_cast);
            tensor<fp16, [2, 320, 1, 4096]> out_cast = mul(x = zero_mean_cast, y = denom_cast);
            tensor<fp16, [1, 320, 1, 1]> var_9173_to_fp16 = const()[name = tensor<string, []>("op_9173_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(828967872)))];
            tensor<fp16, [2, 320, 1, 4096]> var_9174_cast = add(x = out_cast, y = var_9173_to_fp16);
            tensor<fp16, [1, 320, 1, 1]> var_9176_to_fp16 = const()[name = tensor<string, []>("op_9176_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(828968576)))];
            tensor<fp16, [2, 320, 1, 4096]> input_521_cast = mul(x = var_9174_cast, y = var_9176_to_fp16);
            tensor<int32, [2]> var_9184 = const()[name = tensor<string, []>("op_9184"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_9186 = const()[name = tensor<string, []>("op_9186"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_9188_pad_type_0 = const()[name = tensor<string, []>("op_9188_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_9188_pad_0 = const()[name = tensor<string, []>("op_9188_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [2560, 320, 1, 1]> up_blocks_3_attentions_2_transformer_blocks_0_ff_net_0_proj_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_2_transformer_blocks_0_ff_net_0_proj_weight_to_fp16"), val = tensor<fp16, [2560, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(828969280)))];
            tensor<fp16, [2560]> up_blocks_3_attentions_2_transformer_blocks_0_ff_net_0_proj_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_2_transformer_blocks_0_ff_net_0_proj_bias_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(830607744)))];
            tensor<fp16, [2, 2560, 1, 4096]> var_9188_cast = conv(bias = up_blocks_3_attentions_2_transformer_blocks_0_ff_net_0_proj_bias_to_fp16, dilations = var_9186, groups = var_7587, pad = var_9188_pad_0, pad_type = var_9188_pad_type_0, strides = var_9184, weight = up_blocks_3_attentions_2_transformer_blocks_0_ff_net_0_proj_weight_to_fp16, x = input_521_cast);
            tensor<int32, [2]> var_9189_split_sizes_0 = const()[name = tensor<string, []>("op_9189_split_sizes_0"), val = tensor<int32, [2]>([1280, 1280])];
            tensor<int32, []> var_9189_axis_0 = const()[name = tensor<string, []>("op_9189_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [2, 1280, 1, 4096]> var_9189_cast_0, tensor<fp16, [2, 1280, 1, 4096]> var_9189_cast_1 = split(axis = var_9189_axis_0, split_sizes = var_9189_split_sizes_0, x = var_9188_cast);
            tensor<string, []> var_9191_mode_0 = const()[name = tensor<string, []>("op_9191_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [2, 1280, 1, 4096]> var_9191_cast = gelu(mode = var_9191_mode_0, x = var_9189_cast_1);
            tensor<fp16, [2, 1280, 1, 4096]> input_523_cast = mul(x = var_9189_cast_0, y = var_9191_cast);
            tensor<int32, [2]> var_9195 = const()[name = tensor<string, []>("op_9195"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_9197 = const()[name = tensor<string, []>("op_9197"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_9199_pad_type_0 = const()[name = tensor<string, []>("op_9199_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_9199_pad_0 = const()[name = tensor<string, []>("op_9199_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 1280, 1, 1]> up_blocks_3_attentions_2_transformer_blocks_0_ff_net_2_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_2_transformer_blocks_0_ff_net_2_weight_to_fp16"), val = tensor<fp16, [320, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(830612928)))];
            tensor<fp16, [320]> up_blocks_3_attentions_2_transformer_blocks_0_ff_net_2_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_2_transformer_blocks_0_ff_net_2_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(831432192)))];
            tensor<fp16, [2, 320, 1, 4096]> var_9199_cast = conv(bias = up_blocks_3_attentions_2_transformer_blocks_0_ff_net_2_bias_to_fp16, dilations = var_9197, groups = var_7587, pad = var_9199_pad_0, pad_type = var_9199_pad_type_0, strides = var_9195, weight = up_blocks_3_attentions_2_transformer_blocks_0_ff_net_2_weight_to_fp16, x = input_523_cast);
            tensor<fp16, [2, 320, 1, 4096]> hidden_states_333_cast = add(x = var_9199_cast, y = inputs_cast);
            tensor<int32, [4]> var_9201 = const()[name = tensor<string, []>("op_9201"), val = tensor<int32, [4]>([2, 320, 64, 64])];
            tensor<fp16, [2, 320, 64, 64]> input_525_cast = reshape(shape = var_9201, x = hidden_states_333_cast);
            tensor<int32, [2]> var_9205 = const()[name = tensor<string, []>("op_9205"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_9207 = const()[name = tensor<string, []>("op_9207"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_pad_type_0 = const()[name = tensor<string, []>("hidden_states_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_pad_0 = const()[name = tensor<string, []>("hidden_states_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_2_proj_out_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_2_proj_out_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(831432896)))];
            tensor<fp16, [320]> up_blocks_3_attentions_2_proj_out_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_2_proj_out_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(831637760)))];
            tensor<fp16, [2, 320, 64, 64]> hidden_states_cast = conv(bias = up_blocks_3_attentions_2_proj_out_bias_to_fp16, dilations = var_9207, groups = var_7587, pad = hidden_states_pad_0, pad_type = hidden_states_pad_type_0, strides = var_9205, weight = up_blocks_3_attentions_2_proj_out_weight_to_fp16, x = input_525_cast);
            tensor<fp16, [2, 320, 64, 64]> input_527_cast = add(x = hidden_states_cast, y = hidden_states_323_cast);
            tensor<int32, [5]> reshape_240_shape_0 = const()[name = tensor<string, []>("reshape_240_shape_0"), val = tensor<int32, [5]>([2, 32, 10, 64, 64])];
            tensor<fp16, [2, 32, 10, 64, 64]> reshape_240_cast = reshape(shape = reshape_240_shape_0, x = input_527_cast);
            tensor<int32, [3]> reduce_mean_180_axes_0 = const()[name = tensor<string, []>("reduce_mean_180_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_180_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_180_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_180_cast = reduce_mean(axes = reduce_mean_180_axes_0, keep_dims = reduce_mean_180_keep_dims_0, x = reshape_240_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> sub_120_cast = sub(x = reshape_240_cast, y = reduce_mean_180_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> square_60_cast = square(x = sub_120_cast);
            tensor<int32, [3]> reduce_mean_182_axes_0 = const()[name = tensor<string, []>("reduce_mean_182_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_182_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_182_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_182_cast = reduce_mean(axes = reduce_mean_182_axes_0, keep_dims = reduce_mean_182_keep_dims_0, x = square_60_cast);
            tensor<fp16, []> add_120_y_0_to_fp16 = const()[name = tensor<string, []>("add_120_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_120_cast = add(x = reduce_mean_182_cast, y = add_120_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_60_cast = sqrt(x = add_120_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> real_div_60_cast = real_div(x = sub_120_cast, y = sqrt_60_cast);
            tensor<int32, [4]> reshape_241_shape_0 = const()[name = tensor<string, []>("reshape_241_shape_0"), val = tensor<int32, [4]>([2, 320, 64, 64])];
            tensor<fp16, [2, 320, 64, 64]> reshape_241_cast = reshape(shape = reshape_241_shape_0, x = real_div_60_cast);
            tensor<fp16, [320]> add_121_mean_0_to_fp16 = const()[name = tensor<string, []>("add_121_mean_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(831638464)))];
            tensor<fp16, [320]> add_121_variance_0_to_fp16 = const()[name = tensor<string, []>("add_121_variance_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(831639168)))];
            tensor<fp16, [320]> add_121_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_121_gamma_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(831639872)))];
            tensor<fp16, [320]> add_121_beta_0_to_fp16 = const()[name = tensor<string, []>("add_121_beta_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(831640576)))];
            tensor<fp16, []> add_121_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_121_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 320, 64, 64]> add_121_cast = batch_norm(beta = add_121_beta_0_to_fp16, epsilon = add_121_epsilon_0_to_fp16, gamma = add_121_gamma_0_to_fp16, mean = add_121_mean_0_to_fp16, variance = add_121_variance_0_to_fp16, x = reshape_241_cast);
            tensor<fp16, [2, 320, 64, 64]> input_cast = silu(x = add_121_cast);
            tensor<int32, []> var_9221 = const()[name = tensor<string, []>("op_9221"), val = tensor<int32, []>(1)];
            tensor<int32, [2]> var_9224 = const()[name = tensor<string, []>("op_9224"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_9226 = const()[name = tensor<string, []>("op_9226"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_9228_pad_type_0 = const()[name = tensor<string, []>("op_9228_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_9228_pad_0 = const()[name = tensor<string, []>("op_9228_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [4, 320, 3, 3]> conv_out_weight_to_fp16 = const()[name = tensor<string, []>("conv_out_weight_to_fp16"), val = tensor<fp16, [4, 320, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(831641280)))];
            tensor<fp16, [4]> conv_out_bias_to_fp16 = const()[name = tensor<string, []>("conv_out_bias_to_fp16"), val = tensor<fp16, [4]>([-0x1.6d4p-10, -0x1.a08p-10, -0x1.134p-12, -0x1.4bcp-9])];
            tensor<fp16, [2, 4, 64, 64]> var_9228_cast = conv(bias = conv_out_bias_to_fp16, dilations = var_9226, groups = var_9221, pad = var_9228_pad_0, pad_type = var_9228_pad_type_0, strides = var_9224, weight = conv_out_weight_to_fp16, x = input_cast);
            tensor<string, []> var_9228_cast_to_fp32_dtype_0 = const()[name = tensor<string, []>("op_9228_cast_to_fp32_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<fp32, [2, 4, 64, 64]> noise_pred = cast(dtype = var_9228_cast_to_fp32_dtype_0, x = var_9228_cast);
        } -> (noise_pred);
}